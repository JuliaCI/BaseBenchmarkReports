cset: moving following pidspec: 14448
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343381113 seconds)
loading group "string"... done (took 0.557266301 seconds)
loading group "linalg"... done (took 7.647987456 seconds)
loading group "parallel"... done (took 0.169188541 seconds)
loading group "find"... done (took 1.274219214 seconds)
loading group "tuple"... done (took 1.946563096 seconds)
loading group "dates"... done (took 1.410733705 seconds)
loading group "micro"... done (took 0.243822536 seconds)
loading group "io"... done (took 1.065944707 seconds)
loading group "scalar"... done (took 40.928128585 seconds)
loading group "sparse"... done (took 13.530159321 seconds)
loading group "broadcast"... done (took 1.044977414 seconds)
loading group "union"... done (took 14.327365866 seconds)
loading group "simd"... done (took 4.793868981 seconds)
loading group "random"... done (took 9.699535501 seconds)
loading group "problem"... done (took 1.999785434 seconds)
loading group "array"... done (took 22.746643383 seconds)
loading group "misc"... done (took 2.060663863 seconds)
loading group "sort"... done (took 3.463003022 seconds)
loading group "collection"... done (took 19.734866009 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574752278 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14339851 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150655799 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148226828 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189342672 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156496117 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159609146 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098960196 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.97206423 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179914368 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153736393 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52945886 seconds)
done (took 5.197882926 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.248483082 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095417709 seconds)
    (2/2) benchmarking "String"...
    done (took 0.105298778 seconds)
  done (took 0.883974784 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077327711 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146531772 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095638197 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078695392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095736752 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078505799 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095967176 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078248989 seconds)
  done (took 1.359336286 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087949074 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098268398 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082476629 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097974411 seconds)
  done (took 1.056554503 seconds)
done (took 4.326118557 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738296195 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.274418675 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205833089 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466131743 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197923984 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.219017343 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687458851 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350498183 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254814706 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100485928 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143797194 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390933096 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137953717 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689077454 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09028158 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124826861 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17920723 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.466118719 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083492065 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111215477 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116874578 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142771934 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131640766 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091153138 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183716085 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082317775 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195454724 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108024181 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08227941 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.277700586 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201174205 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.68904221 seconds)
  done (took 10.941555897 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11398678 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13506848 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097629085 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139424066 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13580312 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099458878 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085281177 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09639958 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122980199 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176863705 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.129826805 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121570652 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094948438 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082874059 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116005037 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245982731 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121838823 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099513907 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10082075 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088085652 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137209813 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113015243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109307247 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093591231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166797896 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221470591 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113316459 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126001195 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097782675 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112954967 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144172849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144547645 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095582439 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081192644 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174179834 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124692052 seconds)
  done (took 5.165704568 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.087940286 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190056663 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120642112 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171210177 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080429541 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144621666 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094632479 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113252071 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256375148 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111711975 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.489840336 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143205382 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155749969 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098768878 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099408573 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083133165 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097829755 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080411497 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.616786193 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158308307 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135383792 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096563602 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104640129 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103687325 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368227445 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081010339 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095396233 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082887503 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.093899555 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.066079443 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161864475 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099342768 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146841543 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101026817 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102763311 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134636217 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19316359 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126043305 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134263129 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078774564 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096793401 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175460823 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08615265 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098579482 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121744348 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133143998 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118722031 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098974103 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096434634 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204506678 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095056652 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.097849152 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.938151472 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.184252281 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103786775 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096354603 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291173544 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116476747 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097803998 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078831223 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.275500229 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.192568496 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098340464 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080244391 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097927304 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081016952 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400029265 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082746428 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.663096801 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084838701 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10679629 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083202474 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097393836 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103678594 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087554013 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116291784 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079787235 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099946907 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079084216 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096932421 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081568517 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108988204 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215028603 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098542343 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07972823 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097379927 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.076551351 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117120207 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127852799 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099689336 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.081241441 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129813966 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100713681 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.081898788 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133895102 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081125232 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108412161 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099451355 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142988935 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081449631 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.150380457 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081760955 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126176602 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099676428 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114747635 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112018363 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099293466 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169188712 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078082763 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096167433 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08068523 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.097076061 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081702365 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099933496 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110137593 seconds)
  done (took 22.736461984 seconds)
done (took 40.619816311 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324976485 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103948035 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103938348 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103799272 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102437458 seconds)
  done (took 1.504855504 seconds)
done (took 2.243355925 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288995667 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175011605 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096086268 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167332467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093623903 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165886123 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159828376 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094800434 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220306111 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094703101 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162356523 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077271249 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094536781 seconds)
  done (took 2.656724157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09490467 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115322958 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083445676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110952558 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078204879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11046563 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093591986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11707477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11056192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08618637 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093617197 seconds)
  done (took 1.831021328 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09520363 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113798284 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083248699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110207327 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07750259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111442185 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093701427 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117702285 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113078704 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086610205 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09357814 seconds)
  done (took 1.833335586 seconds)
done (took 7.049903294 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091898625 seconds)
  done (took 0.823343496 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.943249506 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.734645092 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113663038 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149346075 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315078979 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.17254168 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467184943 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124982958 seconds)
  done (took 10.96267635 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.146451426 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083672343 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.103947443 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086734901 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101430839 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084439849 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103977056 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10222833 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085607301 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10127143 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08576808 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100332568 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102681071 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087161109 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09990183 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084143692 seconds)
  done (took 2.362731421 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11950477 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119437201 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106648509 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110654392 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087597117 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106401728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106638808 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090448815 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102817282 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104782115 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091233093 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106811516 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104029966 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081506072 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108204617 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108315501 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086503563 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106475093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107285831 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091212859 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108870217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095971159 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088363068 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108003028 seconds)
  done (took 3.297063103 seconds)
done (took 18.181964257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160446488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109700736 seconds)
  done (took 1.012461247 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095909616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113870435 seconds)
  done (took 0.955678362 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099409366 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0962947 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122511415 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109888725 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0810205 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096203694 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121453681 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080953532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097426333 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081087592 seconds)
  done (took 1.735756417 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084108457 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109780768 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102794636 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096358742 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105492158 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094987134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089097978 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100137268 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112154511 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077538062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103054319 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.1152835 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087752334 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117879549 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105811667 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08336167 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10349392 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099175709 seconds)
  done (took 2.538549304 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080627658 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098151639 seconds)
  done (took 0.927836511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082250724 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094189567 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081935592 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097823985 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09517376 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077920133 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095247785 seconds)
  done (took 1.374579902 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487418018 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135916737 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261424069 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102965499 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103693562 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301639655 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099130865 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085313724 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10447254 seconds)
  done (took 2.488379387 seconds)
done (took 11.78016303 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095145096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11531109 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.1132231 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466636692 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108052023 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099261672 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147879949 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251675969 seconds)
done (took 2.154577325 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144536506 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.601476787 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427975739 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232642465 seconds)
  done (took 2.020786942 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405690645 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098675714 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08366514 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081471265 seconds)
  done (took 1.428848205 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080785684 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099750455 seconds)
  done (took 0.940343387 seconds)
done (took 5.299269859 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081722589 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.129469841 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080268602 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099713346 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078481573 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099253237 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.07711551 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096910722 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080201286 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09814924 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096535472 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08086513 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096671294 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079095444 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094861435 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081022361 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0973115 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078844248 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095282232 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078850747 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097103603 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079683941 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094501591 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078812888 seconds)
  done (took 2.945265924 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101398777 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098908678 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103354727 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086777574 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102963401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087175316 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10393113 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097741456 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087855442 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101419747 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101750051 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086034075 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10015533 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086145701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101319606 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102837608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087636038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098071486 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083602326 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10296206 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103224548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082496318 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102049585 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103104964 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085937717 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101381336 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083115092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099252793 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10366141 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085945007 seconds)
  done (took 3.63471112 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086538753 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094233442 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079185074 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101748983 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079601651 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098283568 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079202768 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097103754 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080007853 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095585637 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.08056097 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095769868 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078219104 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09772658 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079211932 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.100970189 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113107751 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079801267 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095744674 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080410864 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098846959 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078641939 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095586843 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078942734 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09492662 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079469299 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095153042 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079260917 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096102905 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079453443 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099055473 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082424537 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095944865 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084576411 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100256251 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077965219 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099702288 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078211612 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097919779 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094887763 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078760056 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09530727 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079136291 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102133201 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079339317 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097009806 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078566931 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096767785 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079502762 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098953757 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078831484 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095713624 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080223686 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096900878 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08156605 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096644094 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096413012 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078816979 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096412386 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079554943 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094820874 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078763378 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0976128 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079803785 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111186369 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08593804 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095771594 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080921904 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097429308 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080947607 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098184448 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109523138 seconds)
  done (took 7.223863822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084390435 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10623061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081560041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098407868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077052118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09715283 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099526833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080206828 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097512163 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086692801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096918366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080136791 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098443749 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108423484 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080513453 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09772271 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085729771 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094327734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079583253 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101100043 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079717791 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101036214 seconds)
  done (took 2.778490833 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.21142591 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105604605 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143271022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108101608 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084649926 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108626704 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102081445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088069495 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102762502 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084365176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101509936 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102430847 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.193108545 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100913703 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101194417 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086540524 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102803275 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085626712 seconds)
  done (took 2.784433639 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094424549 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098844701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102402038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100284555 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099344037 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085377817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104446429 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108671387 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085085678 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098933526 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091245453 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101859991 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101040218 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08199518 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101604984 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082355363 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101465531 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081714943 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109724208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105708456 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105046004 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092418334 seconds)
  done (took 2.90695887 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098616838 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101327543 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119554719 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085250129 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09530274 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080955621 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106198857 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081910257 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108541775 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100175769 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082738471 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097749503 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089232825 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100071871 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103711965 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082775208 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10161992 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081839863 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101652467 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078489617 seconds)
  done (took 2.675444268 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103254819 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100948373 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100016826 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092450972 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101353439 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082378309 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110017287 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099707263 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083033075 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126328982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101604028 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083003232 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110496632 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107626011 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099985248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093428613 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109970931 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109085095 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083307582 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101997086 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126159855 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082697641 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110138343 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100009322 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084419144 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101363281 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100411205 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090253404 seconds)
  done (took 3.571857357 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082880708 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099363837 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082521141 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096197654 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079841388 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096407473 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079734695 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096083995 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082789795 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096542719 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082540947 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098312601 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082177426 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098749583 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082377335 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099109601 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082342141 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096798748 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079936898 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09610415 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082327364 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099079474 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082863805 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097373626 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079855081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099580191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079183998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097539605 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080735878 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097488104 seconds)
  done (took 3.465088953 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092072656 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106638454 seconds)
  done (took 0.975570979 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079939728 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115464213 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080667978 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103340202 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086759229 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101853215 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107919127 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087209401 seconds)
  done (took 1.54066916 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097059905 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110184632 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083881155 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113895498 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110150156 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098695084 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171506784 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102450228 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106946177 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080939325 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113934909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08267597 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106981717 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082826904 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105989526 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088658875 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098856083 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106082564 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086725522 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098107268 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084719017 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112130506 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084331773 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096974442 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.10099185 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092364549 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112913048 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084210743 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10479241 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107952856 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088580419 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093480127 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082798554 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100791653 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080673692 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109702001 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117117226 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086059839 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11015578 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101435562 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095710925 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095358217 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086665714 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107014331 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110302634 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.083856383 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100305991 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078470183 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097635441 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085609646 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095991678 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08249802 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095378243 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089518201 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104359091 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111423042 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082415581 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101784676 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085752723 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104469533 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088675228 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103517297 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102167167 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082849737 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107527736 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087164711 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111012666 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094769617 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07700191 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.097923055 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093175507 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124510022 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105933934 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084322145 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101160854 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080976034 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104230646 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084439193 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106500407 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.106936265 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083924648 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108024138 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090156733 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100650802 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.102429226 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092058724 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098727741 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085722729 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09879665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11798606 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082726468 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097954349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080951445 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112700426 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085944634 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101103318 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079764258 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108454729 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094099199 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084625608 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101180043 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083599809 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11304354 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106392572 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089933585 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110186905 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107656476 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082729687 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103672311 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080091169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101379762 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08601662 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107770053 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07665355 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103708693 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082629491 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102841228 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110166196 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081388797 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101099101 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091006211 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106954928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098549548 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07981903 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103222846 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083867883 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104614241 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091845258 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100362561 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076750295 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096515219 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104546572 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083152452 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104117193 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088610753 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104628338 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076469785 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099392694 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104996436 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092319423 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101066057 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08334569 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108007613 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101038551 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082856982 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107135027 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085676391 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099328092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089090261 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102389342 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077316362 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105710756 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.1029854 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081773187 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104077334 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086870653 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104202413 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101578808 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082446697 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106607886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084349069 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.1000568 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082641782 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099548055 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111934263 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085954367 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096498467 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08131237 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109035389 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081277765 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100839196 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081210009 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103499086 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101492759 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.082021487 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099611803 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085371255 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113608264 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106056772 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085259196 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10689341 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094996215 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10269379 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085189914 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101516464 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102102569 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084965346 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110313839 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088519004 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108014174 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102740276 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080656285 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107038642 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092135845 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101119931 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08057873 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101119345 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104495955 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089399595 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105286064 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085628835 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099832854 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083390075 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106042929 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103835814 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084548974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099417704 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089959386 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101293713 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108244143 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085160117 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111073435 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087059882 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09765646 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086188761 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100134907 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106454404 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079599441 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09826362 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.082547628 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102199908 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083076259 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.104074605 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076876767 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109264414 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108592957 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084201995 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100313844 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.083951124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108829622 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085109692 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105828961 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086124692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108175657 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111168826 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083226449 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104295378 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094325865 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102546114 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09421578 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08948058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09933972 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083347325 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099886307 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082203138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105308215 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110720468 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091766277 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095239381 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086374407 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10041037 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08308785 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097763777 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088223112 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105437295 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102018063 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090970213 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102476628 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086982591 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10520697 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082370437 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103125702 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102259476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086585765 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101912816 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085971538 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101520435 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086488404 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101489319 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080749077 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104471184 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101250493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084608057 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107227474 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082897241 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101802557 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085503706 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103079456 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101881082 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08476829 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100164028 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087651229 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101960968 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084116514 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105211508 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079148948 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109579082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082173338 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110999651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101063038 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080758709 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106911061 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086778708 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108627295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102038336 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084436684 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103683769 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084194822 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104857517 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090100006 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101220776 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113207931 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092591331 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102695577 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086828422 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104014399 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085007669 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102120766 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101373513 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085609226 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102000398 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084862052 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.107187834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.0864951 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103207003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085184033 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10387523 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101000008 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086239082 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096174729 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084186622 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100997852 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084970916 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1143015 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102010533 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087588431 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100280861 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086021408 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100870312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080199776 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111640133 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110875109 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084768291 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109822415 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08236816 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104455722 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112217943 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078564292 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10021171 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082980125 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100016447 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091669506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103576145 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100372023 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10279073 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100369925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080945219 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102369376 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082622505 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097055659 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082801587 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106659555 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085537112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101276302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08300088 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106454726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102382935 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094498192 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101922886 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084084167 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103709258 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079718 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102054359 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100423805 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088175437 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102717483 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08194535 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098391837 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.084213484 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103132099 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08581553 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102502822 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084675236 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109780284 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101582617 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087165696 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106233518 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078838958 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105540919 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083540927 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102457986 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100467595 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088689461 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105642659 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085758096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112252549 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08298025 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103821971 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101837901 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083007463 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10110193 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084866016 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102577325 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083124588 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10421447 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091753363 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101443616 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104400862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084214128 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102315438 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091608598 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103937254 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086899916 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111829267 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104784146 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085269784 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110862427 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086945742 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107954554 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102869838 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086233207 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108800642 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083002791 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109693329 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083171674 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104712975 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103243558 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082567548 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10232783 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084752687 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101767065 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09086474 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105039699 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082826962 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102397319 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082126531 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103788103 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106197287 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092695263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105551748 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087436474 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09857796 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080502866 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105481957 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099699962 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086791895 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105868814 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090610525 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105493848 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084353132 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102702325 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111864252 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090237262 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107139188 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082955838 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106050471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084819247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105647806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102572885 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084520453 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10440083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088252344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103640672 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083101557 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11094292 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086187724 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105189905 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103439636 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085638619 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102405358 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080217218 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10376469 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085846942 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108993274 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104079437 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085094993 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114395036 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084326582 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102449187 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087828183 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103343331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106267302 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080310514 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103281435 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086146936 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103847164 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.079622725 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103592848 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081454715 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105824 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082249469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099121327 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113108668 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093705689 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106712209 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082592568 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102671533 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0790027 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099349947 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101906934 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085708316 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104075115 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095282695 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.10251004 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082112404 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098594573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083215526 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107616565 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.1068251 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081913725 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097826681 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083096821 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10599524 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091003341 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102461982 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08256727 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107332844 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104905885 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083246782 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106866536 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.081037351 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106793239 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116185544 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085979285 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103037512 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090784125 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112463293 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084418893 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099195587 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103311657 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.08832845 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102886636 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08502535 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104936018 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119772824 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087763547 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100829372 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083458906 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105607066 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084217947 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112195506 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103408917 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.085635541 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107158284 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086097664 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112707452 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085927455 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112759871 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106828807 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087872743 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102913627 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08545513 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102220972 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082108279 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10598635 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103703174 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089325535 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.114278355 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083399059 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115854292 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112511809 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.089522729 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100452646 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083676091 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.10415285 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079457165 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107478894 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081717386 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102535445 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100764022 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083798941 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103996447 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09132257 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104371771 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085508042 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103667063 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077930638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106786157 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085885518 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105261166 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099691815 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085044668 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103956725 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088888819 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107854367 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083689385 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105929016 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085274675 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105147618 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097760678 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.0923264 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101558027 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087649929 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102845121 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08488515 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105143822 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086507739 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110522307 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104547775 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08723722 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116747267 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08685455 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101597904 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100088036 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090398468 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10176172 seconds)
  done (took 58.208875679 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147803662 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081406902 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098523626 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080023098 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11393244 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099263176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080303522 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099485516 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08139977 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102398902 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079094587 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100175631 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109085268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124991038 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094348167 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105300787 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078207789 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101683375 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098484801 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08129147 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109504347 seconds)
  done (took 2.897799688 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104871025 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118786149 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116380811 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118993528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090205053 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115867868 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114720459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115378208 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099984682 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111944429 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118727462 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115998496 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092635949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112895651 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11236105 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093574567 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119762249 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11028398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115786041 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096451406 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113855252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115065344 seconds)
  done (took 3.256812585 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084616273 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10243175 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086275666 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09756518 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084708372 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09883866 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088698817 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101903631 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086885212 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103483543 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081402081 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104130675 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10422279 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079355221 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102376301 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081895955 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150659824 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108008348 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082909932 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105858882 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078399321 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106814753 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098687398 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0805092 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102192667 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08886304 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10390078 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082225682 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103902524 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082038193 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104388926 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08122192 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106255416 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103510454 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083897391 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101845865 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084807633 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102445698 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080325863 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102181349 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085110433 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099442149 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085488848 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105971334 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082764599 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103556914 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084962257 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104759171 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098181179 seconds)
  done (took 5.500137299 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104997104 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16280316 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086566282 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144268946 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122476711 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113158396 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088605905 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143810798 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103298201 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084062884 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124626176 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122262627 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10453752 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090780096 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109927585 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104229895 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087352072 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103853128 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089272184 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104309153 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109235287 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091297032 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120797638 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119483204 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10982189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084698136 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104399687 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108866718 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09930633 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111723083 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109515362 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091382024 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121816418 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.111661614 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083805585 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108227626 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123312465 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104533098 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088898171 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102635964 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088271189 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110645171 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110993888 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103636271 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106625238 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10979341 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085810503 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102095594 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118842057 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088102421 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115327504 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121626984 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088603712 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106557803 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109539327 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120831714 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086074383 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10247887 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088521329 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118631391 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101698751 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088319432 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121132858 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107714046 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091792231 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121381993 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111982127 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108762896 seconds)
  done (took 8.217580364 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094573205 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112211522 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12148337 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120783908 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09148434 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11280625 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111378097 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090925117 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112872962 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117234226 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11136071 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134649796 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087208247 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115827881 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111371489 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092214973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112850062 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112266661 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091715422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112800942 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111903647 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121006219 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091350647 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12234684 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142811416 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106940473 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09136856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112821751 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121676413 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11084374 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124082314 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092452163 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112311722 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121689325 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124099793 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091096864 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10448634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111522456 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.093942313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112816778 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105720108 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10141725 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113088569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106590545 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092218595 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112888299 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122053561 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12429402 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115796788 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097739838 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112711642 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122697081 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110917484 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093153403 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121720005 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147310984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121062477 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121009541 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112067575 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101682499 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12184507 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129588486 seconds)
  done (took 7.741118858 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109431809 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117109507 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119269507 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101146256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084465473 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110102289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083497667 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104412975 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114250645 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095833658 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118812038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109689937 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093133039 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119202908 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110488537 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113376389 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089849019 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110401022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114788441 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109307887 seconds)
  done (took 2.976634811 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095297556 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125093406 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08575432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113961436 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108833709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092158744 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108631738 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108289351 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087212403 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108498299 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097129309 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117132137 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106540095 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092013284 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118841568 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112619896 seconds)
  done (took 2.526398227 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.10067574 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119390756 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121438163 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084274302 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105473322 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080826819 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107513427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101331354 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082260633 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121221766 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085577435 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110422097 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105208441 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084901257 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101949495 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088440733 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102785821 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082938687 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106825399 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119935504 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096283338 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105035828 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106004963 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087884963 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105731038 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091640592 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107282001 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103654562 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08466952 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106070307 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086959973 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114914592 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102413467 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085503998 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10317897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08271505 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105841287 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086090027 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109779403 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104698117 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084666384 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105688035 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085663368 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107196474 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08088833 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107225009 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10110269 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093125589 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10413678 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085679938 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106126006 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087209363 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108205976 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117124126 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088769049 seconds)
  done (took 6.304527125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100675031 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110116364 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081119217 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104408894 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087652721 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109739395 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10865696 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090369679 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107368596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083793715 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107631634 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089555905 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108763826 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108935121 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088606235 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110618439 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081246528 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108720941 seconds)
  done (took 2.64691081 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091642308 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105658445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093827249 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106904095 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085757346 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110252192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080689175 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106195579 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103647593 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087505741 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106449478 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089183217 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104614354 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089017707 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107643044 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085132945 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109647004 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104284418 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086642553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101584002 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088273244 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105053077 seconds)
  done (took 3.006180039 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119425676 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127211867 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093230309 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233901481 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104734576 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13357993 seconds)
  done (took 1.670934215 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110569767 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121801044 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105878114 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108241329 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116351155 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0864573 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109582833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109122911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118099021 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102667408 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10978909 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119024026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118001601 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097301817 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116246501 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116616049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107077508 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088749399 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107774558 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12880283 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088724732 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119775008 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109001553 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087648494 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109816773 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118307537 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117950966 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12306363 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089168689 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118261218 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114916802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087849028 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119120768 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123537881 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109002165 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099105749 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109754055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129964665 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114705026 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097739656 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11096138 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115788192 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098082892 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115186827 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118607983 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108632629 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093648194 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109177946 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107797417 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136528425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094887519 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118720565 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115570613 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119656067 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09936531 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156809878 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103649152 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119030083 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115578854 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124669294 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119014262 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096107509 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119028711 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123750661 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115846924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097767603 seconds)
  done (took 8.197185296 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103215519 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12828567 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108282115 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1235707 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097818335 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110084371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108466695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087980275 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109841904 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107189349 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153266609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089823883 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119315732 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118934835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087575686 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110135845 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109455519 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118390694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088381931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136194467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10925152 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11896248 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118689348 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098137595 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123713591 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116993146 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108218092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089100811 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109145865 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108094365 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094656412 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10983716 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118439104 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08732409 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11881729 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109335085 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087454557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115878938 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108801761 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114690385 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097460716 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13041372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10973868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108449327 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102952196 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109929135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110035925 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087800583 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109801158 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107785794 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103456394 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125086968 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124098991 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119546023 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108688353 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089279112 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109626575 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108659106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090055827 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117086021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118556226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087612882 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136221628 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111181633 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109420807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118470357 seconds)
  done (took 8.100396274 seconds)
done (took 156.511281712 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229781657 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204985034 seconds)
  done (took 1.293851807 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.08854735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137102695 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096615441 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172122681 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085533396 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142636623 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139306115 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098920783 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107038396 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086898748 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107458246 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087795344 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.174233771 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085563238 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108072738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107271809 seconds)
  done (took 2.691551261 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119676529 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254467476 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126832842 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105951319 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090638473 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111303452 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084813599 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113291647 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.08968499 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106564828 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087846967 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108978227 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084438795 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109112092 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110593813 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.089363249 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105071046 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089684936 seconds)
  done (took 2.852705495 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113589086 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148777353 seconds)
  done (took 1.133123364 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.242883022 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.163421043 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232604518 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476192942 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.279177345 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.366410895 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.205558194 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.21541595 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164144342 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.210610591 seconds)
  done (took 3.419415409 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119782054 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180938326 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317269482 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156222922 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107807418 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130351054 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158207251 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130919641 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.124581487 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101288485 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123767279 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119064976 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138995497 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094909537 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116372702 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118505458 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121206565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115844491 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114911822 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096781231 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138674185 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084678981 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116765308 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114711632 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098014306 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120902066 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106735775 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085759674 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118325796 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094316565 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115456127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127064264 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119892286 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15765992 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123247223 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157200848 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117558597 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.0913656 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116817041 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091466486 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119993382 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12101805 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124304728 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098563039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106935833 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097881073 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10773804 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085080045 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116098265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118892938 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093372698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116049315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155101536 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120933892 seconds)
  done (took 7.438229321 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.787533692 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156938338 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089616159 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.881705587 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136334005 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104150578 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775932879 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112191679 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256959625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75438509 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134244676 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120696304 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208360732 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260328822 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.998046563 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292986432 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.641789102 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127927812 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154244305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155089661 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117873264 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115882007 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132409462 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453435058 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118405687 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089463907 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119710684 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120390656 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161405505 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126634869 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093045798 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201702097 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253421703 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206677289 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094686302 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11337329 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090118669 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.194462027 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26516253 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196337042 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182012294 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109620895 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089195996 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123520448 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134216629 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086647186 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18588252 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175108631 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171085453 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117424508 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119095681 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099519186 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122567868 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.16606306 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122908879 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.323927697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317139772 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090115378 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122705875 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12650097 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239400309 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12612511 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227191189 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140900382 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189052435 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112513858 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792762238 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1707771 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111861025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0959753 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121485193 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116440557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099079818 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170129099 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392702231 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124695087 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11495504 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090581203 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228800468 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102958998 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113502583 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162538985 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118141893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120522356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102396121 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124444449 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17153878 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256873931 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106284692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120635663 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115654269 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102772997 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.119127203 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213291856 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221329186 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163535223 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232190437 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1006643 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187316302 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17066711 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12067458 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174609392 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120722929 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102043842 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1250034 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219450374 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147365721 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124172806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094170254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120176432 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148974827 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128111949 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096427029 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193203884 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479297586 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.16934898 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110255029 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127995527 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097583044 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183419354 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096268829 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260257385 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123399399 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171875703 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119830178 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087874414 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122039455 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1648101 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122913557 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120999874 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100457391 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120468518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236403775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217572577 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122206189 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221359934 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185220123 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119654256 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173716158 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122822513 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169410675 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121541649 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121380284 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095170367 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792630575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124484266 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099263923 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117502314 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19431847 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089609097 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125735858 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125714715 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086087775 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778331563 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128301142 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121897927 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103044775 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119981444 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121433373 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097361726 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11674142 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162471788 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232183736 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120476388 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097038176 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12638015 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161241227 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118786856 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126377941 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124616539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103732117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123679179 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115730719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104675042 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192506369 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163806869 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221289524 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578113459 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113762698 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125319805 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227513845 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091589309 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290053133 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119602187 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.204684732 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188165277 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099348472 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314696401 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18647138 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.173875545 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128813454 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196174879 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088724982 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119611188 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166162988 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112039669 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096523731 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.1846144 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104593623 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.125166966 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960203044 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089621662 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247965436 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087766515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170285816 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117813174 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12153761 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296175213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091083589 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128963563 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165803329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116082026 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125154137 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703240422 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12653002 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121656191 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097108231 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224448029 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164408737 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121983696 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120744191 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098027263 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185664345 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208989874 seconds)
  done (took 44.237820886 seconds)
done (took 63.931266105 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280739422 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219175161 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270381475 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172188631 seconds)
  done (took 1.915549744 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174015213 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151485782 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122519706 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109374672 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151886192 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084609449 seconds)
  done (took 1.688181684 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.36646041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279435563 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243493616 seconds)
  done (took 1.788899847 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.319877332 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251144285 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47326868 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327705737 seconds)
  done (took 2.372551733 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211367073 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134274492 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111922219 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103037781 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200691343 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249326593 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14309398 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204323097 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098122098 seconds)
  done (took 2.403078075 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199500114 seconds)
done (took 11.26756739 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.218993348 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.2779491 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.160758353 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.110930448 seconds)
    (5/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121982845 seconds)
    (6/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098225618 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128059564 seconds)
    (8/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116636133 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.095206945 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122951571 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.174286942 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096160844 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.127566649 seconds)
    (14/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.17037679 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.233067989 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123084119 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.19944636 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.252336598 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.227603004 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.138409803 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219185318 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097590899 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.223382521 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220245306 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.238253987 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.137420852 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.198076879 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.239984522 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.140697061 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.224359546 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.118515144 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173895012 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126648174 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.217261765 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128539817 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217465101 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117792909 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086529142 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.246577018 seconds)
    (40/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.139806257 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.235959067 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.139862549 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094656425 seconds)
    (44/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06636066 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12643696 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.144147108 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.23458943 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.148532901 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146074248 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.178510793 seconds)
    (51/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138620133 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086835494 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.112430595 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.115405237 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119155691 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.130939824 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094472531 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119147857 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.1156035 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151098155 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.137965191 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08785597 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12624332 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.131896398 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149747656 seconds)
    (66/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.191167602 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115119684 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087684087 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180002116 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096413975 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126800642 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.065874997 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20920635 seconds)
    (74/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.089301259 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160444408 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.141892013 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177845521 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.08660274 seconds)
    (79/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134318462 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066017083 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116558963 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176522565 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067214189 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.120813192 seconds)
    (85/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.208659694 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168211228 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11109755 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.076832261 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185033267 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.168399828 seconds)
    (91/309) benchmarking ("sort", Int8, false)...
    done (took 0.190203608 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12115182 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099228748 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.198009491 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.197324427 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091965701 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14179351 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145152201 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100729876 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.091021571 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086987208 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156314737 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.06588084 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137532228 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.174765906 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.111902014 seconds)
    (107/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119129456 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.092928539 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.152040237 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.100379478 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194359572 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.113468977 seconds)
    (113/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093094848 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120782052 seconds)
    (115/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.134913643 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115255223 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.100769192 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112744943 seconds)
    (119/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.338628352 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.115893084 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.187525105 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117826858 seconds)
    (123/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.077053641 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088189031 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180211741 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110294935 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.181876 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094909548 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118330581 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214803609 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093062721 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119368741 seconds)
    (133/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066268772 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115837132 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09002842 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117816855 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22489278 seconds)
    (138/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099406005 seconds)
    (139/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117022519 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11284381 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068345773 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071817701 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089702723 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094915909 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136751473 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172193899 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127180588 seconds)
    (148/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.099838911 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.141163127 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197070477 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114562337 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171293688 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189334197 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108253501 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086360862 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117810395 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.125178723 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091797857 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068122364 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065802875 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111055004 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093909954 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.148797924 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108952315 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098959935 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066172726 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124478545 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118462584 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155699727 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091027491 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.112061614 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110001828 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094269139 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119214258 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212333533 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.14515687 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110504283 seconds)
    (178/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090988127 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11239012 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110279689 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067761537 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085639157 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11227599 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075870524 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.135719793 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156798619 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095923698 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118621159 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078068982 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.089841675 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101296593 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119937149 seconds)
    (193/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121319994 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112029494 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08783467 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.185414521 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101647024 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077085679 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.08237876 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.137645247 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.069089651 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176238051 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08492754 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.093165535 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131116585 seconds)
    (206/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.091525722 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110866484 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115305386 seconds)
    (209/309) benchmarking ("sort", BigInt, false)...
    done (took 0.22039816 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112267539 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.087874409 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.074714669 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111398858 seconds)
    (214/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087739519 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120419352 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203247151 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094317782 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.091873608 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068425 seconds)
    (220/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065692101 seconds)
    (221/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.09262042 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218815417 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.11443306 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117657831 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087809584 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.093108883 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087038472 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.109912011 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172312518 seconds)
    (230/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.068349857 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093938764 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190893314 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.11906522 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067739934 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.224470507 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11087476 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094408441 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06624454 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.092831921 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067824239 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111807608 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069606508 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066633465 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.123380606 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097897183 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116616185 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111113345 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.116773357 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110249596 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08769507 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110099141 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068129492 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133599207 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 0.149640819 seconds)
    (255/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113730974 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136093688 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096149849 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164045874 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.133868671 seconds)
    (260/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116577425 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068284163 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133586051 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118521656 seconds)
    (264/309) benchmarking ("sort", Float32, false)...
    done (took 0.151688849 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111872502 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068014233 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.111261544 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069612132 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145679157 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069243215 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.070072363 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113196685 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08924399 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119214772 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084271814 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090815973 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088992072 seconds)
    (278/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110537745 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094875002 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091040052 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108368757 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.109749091 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094506716 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109813793 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093764085 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.091031149 seconds)
    (287/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.068354916 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117754807 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112961028 seconds)
    (290/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090464273 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118194482 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090165875 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087311202 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113024721 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.2208465 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093439605 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068003966 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.11785552 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067782688 seconds)
    (300/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.102321629 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114556213 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.091605767 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.090240385 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11695687 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111747215 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138421513 seconds)
    (307/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068627181 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121363095 seconds)
    (309/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067844847 seconds)
  done (took 39.873071348 seconds)
done (took 40.780400145 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100858542 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148830973 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096218759 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137702804 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124051404 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092640233 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119795868 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098351147 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124339525 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125073249 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099134094 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094940995 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098239387 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121878021 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097449171 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141368026 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124698069 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09532612 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12054726 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.08730657 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120961041 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086016311 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.11320568 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069811321 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122774256 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093925545 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118144262 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120501347 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087750262 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111157034 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091570842 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118072876 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08780711 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125089354 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094403686 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120430339 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096398061 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122651002 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.08860791 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112981886 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11870333 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08825608 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117253151 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096130403 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11688793 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093936249 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11950889 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100340857 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141539893 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117431155 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096174873 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.12092573 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09746166 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119419966 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090955623 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121239328 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092811353 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141699287 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119565328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094389792 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.121649884 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095086143 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.119577115 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095524629 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12370947 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121522955 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099480456 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117793961 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097621897 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11712948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087101528 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120929336 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090225207 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112348245 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095987038 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12328589 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109880413 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094266609 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118279967 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092742828 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110329652 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090810388 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113131312 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093829345 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114339726 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071327993 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.115758283 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094049221 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110432686 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097350464 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117398173 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094890998 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113256604 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09929554 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.1125592 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092756804 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112992983 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087252921 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114944081 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091592527 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112730436 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089590052 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121767585 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088381796 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118230949 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123927637 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088952843 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117709285 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087462979 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11090066 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102521512 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122581695 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087661434 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11845114 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086886851 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121133723 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085999192 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112684696 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087175309 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112237324 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093052618 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112172048 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114511186 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096012535 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12607914 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089015928 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11426118 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090960508 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111610489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094637415 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112822442 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087751226 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113865245 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078462999 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114161512 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089007035 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119771932 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090968142 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120439222 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089164761 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121773953 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092084008 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118457738 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09230921 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113169684 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07483397 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117909685 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090573531 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114825395 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087376004 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114474503 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08729805 seconds)
done (took 17.105309469 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088573203 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187647385 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152849308 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144071057 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107937615 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113851536 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122376478 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119449558 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114701234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144605937 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.11058439 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134552228 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149744577 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087614305 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113366647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092621519 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11435139 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10347664 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14733838 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134438117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16733218 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087106375 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149008845 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137157444 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121799479 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106977758 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113493169 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092171678 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11663138 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113436763 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134708265 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116019495 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089258149 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134786857 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105915597 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122670001 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087689478 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121772089 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08647816 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114419387 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142851727 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135163835 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094005971 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117588191 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09277564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115458459 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089923987 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122598848 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099204741 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.119617224 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128143673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158244048 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091811218 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12321727 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086724198 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124469878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122616579 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091460897 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113108203 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091379185 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112695855 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092573598 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129675982 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143212346 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092697624 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123423933 seconds)
  done (took 8.717134486 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.1069293 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140552038 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106271685 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.150165287 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112752649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089805243 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113520021 seconds)
  done (took 1.788998066 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089074959 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134640395 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112360029 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137719654 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132514362 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110448877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123827505 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088714989 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.1322665 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088859473 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135710689 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153259678 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090429066 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122153087 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138788068 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090193505 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138082949 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089257753 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118064894 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112393949 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11773627 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135353489 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092268106 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114540128 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104504243 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115101007 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163399334 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094390925 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115748154 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092806917 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1122875 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168342358 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10532126 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126452595 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088667551 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129964813 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128807963 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088044077 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130391103 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094713318 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129642532 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089788873 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116412299 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087844242 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120135381 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124649424 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092088883 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115274953 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093107758 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134579018 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090749653 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12793752 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089271933 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119615192 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.092323699 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121599967 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123648973 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091351503 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134181769 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093471364 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132221792 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10569482 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130185119 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131751588 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093302145 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129353737 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104201417 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118028503 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090837776 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118890597 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130839981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088176526 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115865688 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100880825 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115593981 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113345801 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139380815 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116105709 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101172856 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114602023 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090929296 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115238449 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113813029 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119436522 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09007792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119682595 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091519748 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113171186 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088319142 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118904238 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087163268 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116958611 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117083133 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091773433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117041689 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107034657 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115618458 seconds)
  done (took 11.922080849 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091780728 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116071978 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092871359 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115230079 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09076754 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116245428 seconds)
  done (took 1.604721007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114902045 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119060649 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104792903 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122433749 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158018496 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105500245 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131954558 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124879241 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108879467 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129695521 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130152486 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105493553 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13795001 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122317132 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105247375 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121798153 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130645234 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101610826 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128868757 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096937075 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139159561 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122566842 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09744462 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133782325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119721471 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097073426 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127484939 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104573063 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129437686 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124809082 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096306711 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119926604 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097174217 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125954214 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130740884 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096878038 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121879478 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119928461 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100841129 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119905584 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104738496 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123346392 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128054488 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095937313 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125428727 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122086833 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095515033 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126313072 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129652168 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096068811 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12033542 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096263542 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119693937 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095100334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122616503 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125218041 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095487054 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131772821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121847485 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097329697 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118987821 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095072776 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125335597 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119146817 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106058367 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12061112 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121655239 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09774176 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122298679 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096378867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120678231 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093470321 seconds)
  done (took 9.320445013 seconds)
done (took 34.322957792 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689320399 seconds)
  done (took 1.668764747 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.725697126 seconds)
  done (took 1.7074654 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.786642277 seconds)
  done (took 17.770109501 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505973663 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.59473652 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.896385553 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.181928984 seconds)
  done (took 3.161114197 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.960404745 seconds)
  done (took 1.960049358 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297490683 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259568014 seconds)
  done (took 1.543502573 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784545516 seconds)
  done (took 1.776313212 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.360554322 seconds)
  done (took 2.346935058 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334648853 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185879062 seconds)
  done (took 1.516246083 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548370493 seconds)
  done (took 1.543965675 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.855114041 seconds)
  done (took 7.853438566 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.271871787 seconds)
  done (took 1.282976985 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303519095 seconds)
  done (took 1.306093857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.494491438 seconds)
  done (took 4.498025948 seconds)
done (took 50.927757635 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100434721 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127204817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103641429 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124965541 seconds)
  done (took 1.4526329 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102058049 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121269645 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10209748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122244564 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126853031 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098092573 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123665542 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102018093 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12104838 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097024631 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123665581 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119944713 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100221516 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123799759 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.09422577 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125794918 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098887232 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12290827 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124918391 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097581589 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120241642 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098843409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126058118 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094157452 seconds)
  done (took 3.692857924 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101628707 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119710975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097239764 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118344018 seconds)
  done (took 1.448239478 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101657911 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143239911 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138726297 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101812284 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143811624 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136252725 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092941608 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117655403 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096334995 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12529746 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091405034 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150193703 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139378447 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100038674 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1294143 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088504526 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118286319 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137651751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100986632 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127916013 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.096154062 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126716991 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09135828 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141427675 seconds)
  done (took 3.840525432 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170754211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150074847 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140221645 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096592562 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161704952 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142224986 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089318553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141568086 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08819091 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133038701 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11874382 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133903464 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130092823 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087655822 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115134806 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088326551 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.13042697 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.13014331 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092533789 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.142680537 seconds)
  done (took 3.494716369 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098239184 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117705682 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08888672 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117549345 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100224209 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121924152 seconds)
  done (took 1.659559262 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091580982 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115922253 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091254144 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115468705 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09576275 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116047973 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08924527 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11563274 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091050858 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115921522 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0900081 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114169716 seconds)
  done (took 2.256821644 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465962642 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094777879 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121037031 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11506373 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097877509 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115602751 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.10449109 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119561262 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141219217 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090391123 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115694581 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091636413 seconds)
  done (took 2.686866108 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234537734 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12645062 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28777891 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27752366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159012385 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173507889 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281460741 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163396622 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226099125 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161136919 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205394945 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225715728 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153298903 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190470426 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138378632 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119714789 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226557044 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241728122 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153965217 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204169387 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227799927 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16758372 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180714043 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151126464 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113033353 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171821921 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122729133 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130710121 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207967361 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204887343 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19067552 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163395185 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148863118 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241432296 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255829314 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194345403 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287449793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137082387 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173621646 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169651357 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265882198 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112037926 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234101806 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156907265 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131653287 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194680422 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167095156 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177502528 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152008526 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141074535 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222805528 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213671003 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.219918509 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11284723 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235763026 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15853832 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17013736 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195745752 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252762295 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226071474 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18104185 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094422725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216821707 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191699947 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185815739 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.195828502 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182055645 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15011972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192653622 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189570403 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192540054 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188891406 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187852933 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142811243 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170506376 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174111386 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200073988 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231378137 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205630167 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097066584 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171165542 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150521515 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135622659 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19656004 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099154598 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242193304 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150194919 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16484468 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219950048 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160881694 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162717086 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201811076 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224206142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149187977 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084564779 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156905953 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156737922 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192015503 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142606586 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160062077 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163855212 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131519638 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180672667 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097849068 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204884372 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091760304 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174837852 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210836252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100437785 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162728798 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153985795 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152311633 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175507174 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228102248 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117515034 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135533132 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210997275 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206541081 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151892671 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180266833 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206199881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146676875 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151202141 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201592576 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247216615 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141526609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205866506 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158691581 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136490815 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105533845 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210087349 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155723255 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161525614 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109038796 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.210858325 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209231892 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12801674 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111517297 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213144922 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10783395 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133727535 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162719987 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150465744 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14063338 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14797063 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153030382 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183510491 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178459418 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156041743 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165853643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153710648 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255410645 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143684363 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150991806 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123127164 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123502478 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194983163 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227360305 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104658924 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234765447 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173827312 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231247231 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170733 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108761383 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179045516 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132263004 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093479877 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224810288 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170086452 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162646368 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198005766 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229993988 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.180463842 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210774332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174797231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174648342 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167412292 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158470076 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139107111 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133984704 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194771138 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097355876 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144814748 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134887311 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149475792 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116200648 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135787739 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224364089 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17140117 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192349776 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159783472 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152201889 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183491579 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130424828 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176117139 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179756881 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149317422 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200446173 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223608597 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190036718 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146196153 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201801493 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122569037 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126141995 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.116288829 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198990737 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108995463 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137927676 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168157611 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183256112 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182091954 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205848327 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213239023 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198418924 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192358166 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095684054 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169873616 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1876974 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205595574 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.163901991 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141427255 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151773967 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178921986 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160191896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256977967 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171084504 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178235476 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237994589 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.123455404 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134344169 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153356686 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186973003 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155086579 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178980088 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149075229 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143995945 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163624819 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133896391 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162383957 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184739978 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165199496 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218937343 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.123811276 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214966831 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101116234 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194459514 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160821127 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166766531 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082249909 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17723884 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23439009 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15038788 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169901716 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191466818 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13311336 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.309635444 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209805623 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221084904 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138364249 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159528974 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162693106 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137355806 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199791963 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179235831 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160881386 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190085677 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160091734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137976876 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115204782 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150088219 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152835468 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132560188 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149921695 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178277042 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139170491 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188352398 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162516023 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160482081 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175438376 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150957619 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117794484 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15192791 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246143147 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177956808 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241290368 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.122517466 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.209601451 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208732927 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127647695 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104369711 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134731751 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180011907 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138998393 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191768901 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217045679 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207664007 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181540756 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217924714 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111676398 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122331857 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159266906 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175640305 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236484927 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153376653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.15949064 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205154285 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.144439264 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10540982 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174046823 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229637236 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147761779 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200276687 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080527525 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.304621752 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101335216 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134678391 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166457271 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209586351 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138882459 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186372643 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171671827 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170567013 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167336039 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151545116 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19284665 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247378081 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202191187 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211153092 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105274929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157615035 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179074519 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223244933 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159779832 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140043832 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206985721 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195751789 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.228590757 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115492435 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201165437 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170330334 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158277172 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18953147 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136114939 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208063039 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13659243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194194541 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155095846 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145349609 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179161643 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218604971 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115134845 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219936461 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176890478 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137003294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105802912 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19884162 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179527205 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159946796 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.09994156 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21019583 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098041562 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222554968 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232125733 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137626818 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156528187 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150092428 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136869826 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158159333 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159850297 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113982645 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167458256 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203849535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136140739 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194198516 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234427701 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170661048 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176673328 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146871838 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695584535 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132887761 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196867101 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156728749 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239161149 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151078811 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175373752 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159749465 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170130413 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196678751 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163769093 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234755823 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222378665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181939583 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105312431 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160430625 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190832359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118082707 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152595803 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170552488 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161401557 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154416361 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.181210902 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199333333 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108426044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142595191 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201933869 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157214769 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183805355 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180782129 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141188444 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175607119 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219637925 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105860788 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.210217951 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210273933 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14377433 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15491985 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136152013 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157028307 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264011467 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09800531 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231003731 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179479631 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16104935 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169940789 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.149413246 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193982141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15937506 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18058578 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147868033 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161561345 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158326551 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13951055 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131438467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128051136 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197343606 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.121817036 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160044052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166621418 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195482266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12630633 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145746356 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202477355 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189500763 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247426174 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137585457 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108475978 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164751392 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153442628 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181134545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208231103 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109492572 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139246758 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13907453 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132105708 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141546879 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155689025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201382849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167680571 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236979723 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109697467 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282050043 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141852114 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15581175 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090096509 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133364885 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151521383 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119373542 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160912423 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222461803 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265429556 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147245831 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106812659 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152399398 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126554974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109165023 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167631761 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163412917 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178150107 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146780613 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110530224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160747456 seconds)
  done (took 83.431421765 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174251428 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132974528 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146658374 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203051834 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177541406 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271182613 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210335887 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255224653 seconds)
  done (took 2.672912514 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09476843 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146147246 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159319837 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133934701 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091532282 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120275546 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346729048 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135313116 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11709297 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122120052 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173981195 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094005763 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554134359 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090960614 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120371707 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107818313 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092175885 seconds)
  done (took 3.797219903 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.476552272 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.720707843 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512773405 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098046067 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.137542616 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113602082 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.688088933 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197773329 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115213444 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485861787 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.774463434 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159943532 seconds)
  done (took 18.58775234 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099847038 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121248355 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108475882 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137081182 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096126048 seconds)
  done (took 1.678375097 seconds)
done (took 131.6979398 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105064151 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40545799 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071966463 seconds)
  done (took 1.623069698 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108300547 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138912622 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110011825 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136847158 seconds)
  done (took 1.609967833 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098496309 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12783944 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109035746 seconds)
  done (took 1.444433188 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323871203 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19107742 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165097582 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106133056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130312405 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103869492 seconds)
  done (took 1.451121811 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097597939 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12981975 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097503308 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130697714 seconds)
  done (took 1.567378804 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095542015 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071235687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103675828 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075505385 seconds)
  done (took 1.454281879 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114761557 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133316842 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104132273 seconds)
  done (took 1.466450562 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130854041 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140149168 seconds)
  done (took 1.384989751 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106607052 seconds)
  done (took 1.216475084 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118335394 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171344051 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190882933 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166190967 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230861073 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166356604 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142050763 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115176961 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132449905 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144908321 seconds)
  done (took 2.692994696 seconds)
done (took 17.812628478 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104066582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.519636618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413933881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117488123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.727537973 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381416449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.074593559 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147309781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166749718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094315205 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139910609 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673824545 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026788496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468425618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984656081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.373312744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705424861 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093502896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120099803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09467465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.058725786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092956464 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123096444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093741664 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.702918068 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426480561 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095123573 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372516872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09283316 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128685297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384070174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124247337 seconds)
  done (took 17.225547912 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096120615 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1752203 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098579174 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138735996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124641439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094381491 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126056146 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09392463 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181758238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123223186 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111223937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121997829 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127239062 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095963013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142944412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092712166 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125732705 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093089592 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122093798 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122408916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111891514 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120842429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095157372 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122472229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094719817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135944509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123364707 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094029705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122234788 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099455436 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128706215 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094788637 seconds)
  done (took 4.872400355 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141251424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185580983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129996127 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128269881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169775894 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12502402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200414486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119063644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183434703 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124235307 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140743316 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093719976 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157728428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123123392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115184249 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122484469 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09737786 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123446603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093603667 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124656262 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140743995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093810916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123176255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093567522 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124558321 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108353698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124874603 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122057758 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094437986 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129029069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100526428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126025771 seconds)
  done (took 5.204994732 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097488287 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127304697 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109725129 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140130103 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096495991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127244001 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097357431 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126269631 seconds)
  done (took 2.044124136 seconds)
done (took 30.45864105 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113035626 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128127433 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107287405 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135816879 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103523063 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13384778 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091714506 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135152893 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135173448 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103455802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138752259 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092879131 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124367894 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092292337 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137428613 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098837718 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134226444 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102624815 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136210695 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133109691 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095292214 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135195561 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103267871 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136167721 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105180884 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135695205 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138217255 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100421252 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124460038 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094631318 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125475473 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104811446 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126022373 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106423847 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128672283 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097356629 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124699775 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094749793 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135189695 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13434753 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099747785 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135058859 seconds)
  done (took 6.074657284 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108169432 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140851049 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105961152 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081990826 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118526399 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081391523 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140229741 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07916911 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111291764 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107965645 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075102593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107681404 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078746788 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102833026 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077947171 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075957283 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109493854 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076655501 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07658848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106884215 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080170426 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072682029 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109469167 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079346796 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075130394 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11095122 seconds)
  done (took 3.618126169 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100797569 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136693526 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11171598 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184582355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163136514 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100350665 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.134187734 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140765321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109485664 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121280476 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096297633 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150789275 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111725729 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131042159 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092150847 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138463771 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.145580865 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093503296 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130160593 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113372269 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140336304 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103420434 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143413907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134223216 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091801281 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124063749 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097323956 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137394094 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098322935 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132568265 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127673663 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.096981231 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125179834 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105376813 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127387678 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094540129 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143367557 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133222562 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101703505 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123002147 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096212467 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122889983 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114287212 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168997959 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091359494 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132408083 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130121764 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103512 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122916154 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110961364 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133658097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092444471 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125949185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091772133 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123267289 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136163405 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.095347917 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124403188 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102212897 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.12557369 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105953078 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127528139 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108093612 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123388011 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100324553 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123318749 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093507454 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122825467 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144895704 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094510316 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165793011 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09388689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124822294 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131954448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101291115 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130366469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093480646 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139443441 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102311456 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127363933 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102241716 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126760456 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124939622 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111941374 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124662837 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094900171 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123730126 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099589883 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125838832 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095250155 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138094284 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092898908 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126725233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140492255 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093292087 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.1236294 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099573621 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127719613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092097006 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136670262 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097831341 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124586426 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132873685 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093398675 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125738647 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103335986 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128898977 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090934869 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128082244 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099116197 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124435358 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094176175 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12760647 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095585031 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132358988 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129482446 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098328531 seconds)
  done (took 14.950653272 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230827807 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217932417 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.240001748 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263840386 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137016423 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115890637 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213819711 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156722747 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124490661 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161663932 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163620474 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18229554 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140573684 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181416683 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142440634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122640077 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112687755 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166606414 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.218850986 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293039874 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113090767 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133564079 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163176945 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163716926 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107107966 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134886036 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140658495 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105961688 seconds)
  done (took 5.797229766 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109425797 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157975249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099176817 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145788951 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149767337 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094220935 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129124706 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094659983 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136559625 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136591139 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093412173 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130866086 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100764321 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132965763 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123237783 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104441031 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133181297 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095048895 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127139092 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09756757 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131804668 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102193057 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129006944 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122058178 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103143898 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122488452 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08687372 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143285976 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122664303 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115956256 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121976008 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099749955 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135043917 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094862095 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124711173 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095221954 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127069013 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096208538 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126846257 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092312651 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123547596 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078259336 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123343972 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137607167 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100727677 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080054601 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13153578 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129643929 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096016946 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121432258 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097712322 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126297378 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098270086 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131217807 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099501775 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125422978 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097500605 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117541828 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100032049 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12677921 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085263669 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122725402 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099864645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120493225 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102848035 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129754527 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091851021 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126691889 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098121281 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131528455 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096524372 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128523012 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.092335239 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127208821 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096487013 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129437801 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096847379 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123689118 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12387173 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096077674 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075831971 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12419072 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074395939 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127870669 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092735937 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124078547 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095529693 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131382578 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13903529 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095961468 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133136286 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094393495 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123983084 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097208598 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114388473 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096971258 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140490247 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141888777 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095732066 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122817508 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108511875 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127512705 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093109147 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107202338 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101577793 seconds)
  done (took 13.086179693 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129320123 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15539305 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095464559 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.14387822 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157277753 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158325039 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101721445 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132488247 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096044657 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143229164 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094759124 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133686331 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097896959 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138783485 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158231424 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103468085 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126808473 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107303294 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133125752 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171639514 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112283836 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144216047 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108698781 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126339138 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129156942 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111097417 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162897803 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108263032 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13925615 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143227361 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108490032 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163239427 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144005825 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098861063 seconds)
  done (took 5.538355589 seconds)
done (took 50.189959615 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.227107994 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445728169 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.218376019 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.199772701 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.243742915 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.24188166 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.230230195 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.21712137 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.796754775 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.219757529 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468259513 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.90836664 seconds)
done (took 60.565855258 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.337508508 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.349566248 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48540597 seconds)
  done (took 3.982756155 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.568978605 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162229772 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.477124341 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.217451936 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.218125557 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.508647116 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.902156425 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.58072614 seconds)
  done (took 28.21116392 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.218152435 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.6178221 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.964607414 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.960451193 seconds)
  done (took 18.909316566 seconds)
done (took 61.157539516 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.234443978 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.27716133 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226820832 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197562782 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.354106327 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.25225939 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.578849481 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.244807319 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.244336218 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.200299728 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.241582082 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.244290796 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.228944184 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.598804853 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.228864315 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.229526041 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.253764234 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.707947612 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.626280735 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.225818271 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.236894604 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.297066203 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.224348167 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.222664463 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.262017846 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.234024634 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.221783903 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.224772454 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.841632853 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.223051725 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.237560086 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.745989375 seconds)
  done (took 191.515226073 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.220388162 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.022485283 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.128596676 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.278163462 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.608718066 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.420739752 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.357381307 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.664376501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.238268125 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.247234803 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.387633741 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.219379184 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.44519845 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.25831226 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22900363 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.32673457 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.420541018 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.475160335 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.241232333 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.492968047 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.224460161 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.266497446 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.187225863 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.367769794 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.22981111 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.303624068 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.243220716 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.246743458 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414459254 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.326952 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.275468502 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232110818 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.853850067 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.083861485 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.246839727 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.259078314 seconds)
  done (took 149.593315268 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.515917997 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.222012037 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.222455094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.223503533 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.254626945 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.223287334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.809116559 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796912177 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.726164786 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.492527096 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.284831477 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.493967961 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.222139441 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221524654 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318007912 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.234629662 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.222149535 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.224025501 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.237921912 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.266370656 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.225909964 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.222418829 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.808479778 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.237068053 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.442309287 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229824446 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.223753191 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256682092 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.22309436 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614809255 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223576529 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257981871 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.558065305 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.27552671 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2249798 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.630809668 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.324106379 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.339093502 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227249192 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256905628 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.224622556 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505841174 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225002467 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.224701692 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.227374744 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.913309983 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.227379091 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812726476 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.227571395 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170913249 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22441897 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.225114155 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.63545172 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.938486883 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.242774208 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.224619084 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.227262727 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.225757962 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225287705 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258003884 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.58866862 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320748479 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.242873043 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.229581127 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258293779 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.22757444 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.417542851 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226200224 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.403692004 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.302124986 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.332209324 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.812051221 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.229513856 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324554589 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348099794 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.226732388 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.226716366 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.225782963 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.227091299 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337970386 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.227125762 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.648303285 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232610074 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.228064784 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287550936 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32488208 seconds)
    (86/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227229263 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22765692 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.649705503 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.230588467 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.227260129 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.997705795 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325336109 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.227983583 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.22734553 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227684369 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652263534 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801692857 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.506253858 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.230621188 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.69219518 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.230828365 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.672556306 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.792635973 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.941921188 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.232370845 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34109108 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23216192 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.229528684 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.228244766 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.256627312 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.246550267 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.286617347 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.228923848 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.627794065 seconds)
  done (took 349.298484767 seconds)
done (took 693.072764601 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.888000011 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.876435511 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.994033518 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870155069 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.853126045 seconds)
  done (took 10.638019123 seconds)
done (took 11.794904311 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.417535821 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.416101792 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290251414 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417526125 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257380434 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.435021899 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394602865 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.248700714 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.331617843 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313290322 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33103841 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282906492 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256230427 seconds)
  done (took 18.549383207 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562744513 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.54915478 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295504475 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55623602 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.272069151 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558701694 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438095101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.446274288 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.455848346 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264488362 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243089393 seconds)
  done (took 16.799976156 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597253592 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.560559891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299145691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.594930687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274128056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.569525028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.446816646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.456422201 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.451868417 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265072225 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241636658 seconds)
  done (took 16.914409969 seconds)
done (took 53.421120997 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.239761669 seconds)
  done (took 2.396976199 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.27359665 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.437368583 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.255069125 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.243611853 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.238851402 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.240106792 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.243898544 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.23827011 seconds)
  done (took 11.329279144 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.237357005 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.234656714 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.237270476 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.237091344 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.235510891 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.235421612 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.238154716 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.238857953 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.235385422 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.235352006 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.237963307 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.235245457 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.238015574 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.238258761 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.233764431 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233156936 seconds)
  done (took 20.938552207 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234969306 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.234604944 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.233209968 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.235155387 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.235336829 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233486498 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.235006017 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234266546 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232500282 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.233443865 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.233350928 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.234474283 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.234382004 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233465253 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.233628223 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.234303715 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.233738832 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233964185 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.238593227 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.233706636 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236449122 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.232726343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234079431 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.234624546 seconds)
  done (took 30.781260937 seconds)
done (took 66.604042024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.379755656 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.979250332 seconds)
  done (took 9.514795376 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.236503894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.235296008 seconds)
  done (took 3.628966899 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.237440592 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235471873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.2343991 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.236291619 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.235504189 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.236045807 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.235849837 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.235132674 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.237370875 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235066614 seconds)
  done (took 13.513690817 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.235674558 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.234725641 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.233995592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236087474 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235570781 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233134945 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.235660057 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.236014474 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.236139284 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.23309901 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.235711137 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233228539 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.235238965 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.232605639 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.23607424 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.233907111 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234110238 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233528888 seconds)
  done (took 23.381227293 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.235895913 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.235933011 seconds)
  done (took 3.627722715 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.233667194 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233971542 seconds)
    (3/7) benchmarking "month"...
    done (took 1.234687874 seconds)
    (4/7) benchmarking "year"...
    done (took 1.233303573 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.234322864 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.233890711 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.23419477 seconds)
  done (took 9.79432273 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.23839647 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.415243521 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493634982 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.856868668 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.238206888 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240302873 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.074961351 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240896006 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.242934346 seconds)
  done (took 14.197587128 seconds)
done (took 78.815015647 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.264229999 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.25164678 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.430683564 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.237128266 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.251341516 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.579016311 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269545008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.362802108 seconds)
done (took 37.804043215 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.235348735 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.971641011 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.976714777 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.23136463 seconds)
  done (took 11.337737594 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.218702297 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.188683287 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.217422574 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.240457013 seconds)
  done (took 18.024016118 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.282213788 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571161294 seconds)
  done (took 5.011447735 seconds)
done (took 41.767469071 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240599423 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236825491 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239104259 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239309894 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.236518308 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.239139136 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.237455396 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.236907114 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.240020084 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.24063747 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.239907203 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.23954064 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240738122 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237383349 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236828598 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239614916 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.239484139 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.236665895 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237060601 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23673719 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240629524 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.237089505 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.237813695 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.23718557 seconds)
  done (took 30.881993075 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.240377034 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.237868311 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.240270501 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.240350803 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.238331635 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.24033607 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240564581 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.237754524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.240571517 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241057774 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237708585 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.237391253 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240258197 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.237925128 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240091713 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238352556 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24083911 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237389391 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241345872 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239740833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241633922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238774854 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.239088989 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240692351 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239430164 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239491079 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242871263 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239985967 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241905176 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239539307 seconds)
  done (took 38.352875192 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.247740804 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.24902959 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241821812 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241559069 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.242610077 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.241196778 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.241519528 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.243267615 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.242149057 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241741194 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242483584 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242358766 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242995797 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.242895363 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.242274366 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242347351 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24269504 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.242863773 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.242467772 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242634529 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242692265 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.242580879 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244019094 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.242282757 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243199333 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243403782 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243263628 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.242455197 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243111955 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243541864 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.24359171 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.243395641 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.244184858 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243745615 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244069929 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.243354253 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248807318 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251033965 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.244826718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244210274 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.244714858 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243322216 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244273311 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244212157 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.244077254 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244047931 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244463665 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244298319 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.244331303 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245070598 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244698316 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.245325006 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.243471808 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244620583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244507304 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.243800914 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244967077 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.24410812 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.244523615 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244979588 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.244826408 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245349868 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245907815 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245226555 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245580137 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.245816891 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.244922073 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245540692 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246454958 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245451004 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.245806388 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246989115 seconds)
  done (took 90.739401744 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246830825 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243788271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244196195 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2428526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243543802 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.246485148 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243232931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245938723 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244210643 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246919139 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247000497 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244883608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244967277 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247431535 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247397022 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.245780354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245777545 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24393032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.246829773 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.247316998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.246311098 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.24454767 seconds)
  done (took 28.565912678 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247622932 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248686151 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244746886 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247332268 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.245123269 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247748257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247337536 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24966366 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246988826 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245352785 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244999764 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248341617 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245469375 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24596391 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245596098 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.25237842 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247918649 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247462646 seconds)
  done (took 23.614343092 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.247148095 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246072241 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.248569348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245809581 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246374605 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249382596 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246028172 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248792505 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249523082 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.246209109 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250124831 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248107049 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.248658046 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246938139 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248621291 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.246877758 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249293268 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246865189 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249332011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247704715 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246931209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248773324 seconds)
  done (took 28.619447426 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24972672 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249614215 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.247225411 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247622653 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24713533 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249667647 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250054463 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248108565 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.25122478 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250705514 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247775257 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250318711 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24951473 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248337037 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248913048 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248369809 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251349983 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249572552 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250666927 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247899535 seconds)
  done (took 26.152558048 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251591714 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252394045 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251873596 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252617497 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252499738 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251969416 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251913486 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25191363 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252063653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252924466 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25258873 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253062649 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252296641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.252827631 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252854794 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252188321 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253476243 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252570279 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253615106 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25308094 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252325088 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252535892 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251867224 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.252919265 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253997353 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253568723 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253186041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.25330716 seconds)
  done (took 36.244209984 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254377516 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25270821 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250102034 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251932164 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.249907047 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.250814505 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251339871 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.25177535 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25354047 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250562028 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254977395 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.253373247 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.253558295 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253399925 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253303798 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253829722 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254021262 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.251064269 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251771444 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250592123 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254736703 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255136508 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.2550957 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252384643 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251956846 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.254833882 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252260716 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.252854931 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254765249 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252073081 seconds)
  done (took 38.755536156 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.272651135 seconds)
    (2/2) benchmarking "in"...
    done (took 1.273263632 seconds)
  done (took 3.718965037 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25378227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254357067 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.254916519 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.253530327 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253574283 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256089805 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255842882 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253426609 seconds)
  done (took 11.20905366 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.255156649 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.256354836 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256003026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.256079452 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256991992 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255384428 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261851707 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.27660293 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.255341857 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256426781 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263286684 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.263435194 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.257881578 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255986682 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.255682674 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258013996 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256122625 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256901673 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257965721 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257438515 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257801537 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260254119 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258012029 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253799614 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.258094711 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.266509947 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280559865 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.257881465 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256330919 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259598435 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25644074 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.25350835 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257369603 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258228373 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257331907 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257954005 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266848575 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276860132 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263635002 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277858286 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258531878 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256219951 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259089372 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259457835 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258422198 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258015089 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259127464 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.2563537 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257699101 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262265263 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.26411856 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.257249499 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255608109 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262166189 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.25803415 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265073822 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.278530538 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.262413645 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.269086039 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.269552134 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.291231243 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284468118 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26079533 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.259490538 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26980068 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282090414 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.267177237 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277070868 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257660438 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260126854 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265329219 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292104472 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285886082 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260164322 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260750766 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261297213 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260862592 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259889588 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267957603 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.283022504 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260763442 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261200268 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270995929 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284175033 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260329718 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259861641 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260443885 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262769174 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262913835 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271127805 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280624612 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262633382 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.261104399 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.26180854 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262188683 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261208926 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261677439 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261985565 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259302432 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262190081 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261524138 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265865311 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269997149 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261908829 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261903226 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267463307 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.281790864 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261338532 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.268168411 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.263064272 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261537277 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.2649879 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268747822 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260214304 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266161958 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270228129 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262297093 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.265047787 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261947803 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.265006355 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273041389 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288160733 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.264213086 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.263775623 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.267879292 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.274987267 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263925854 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.265777715 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263722211 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261847107 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26206921 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.264733347 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264494566 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264421189 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.264110789 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26493628 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262089533 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264767509 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264204344 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264543029 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265040667 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264757321 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265132529 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266153879 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264782331 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266391067 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270078406 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285537538 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265121027 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.26647047 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.263032705 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265791539 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265665957 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266039712 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.26525099 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265577437 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.26636727 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266157873 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266703724 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.26708753 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266631891 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.26604386 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270215627 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.265572262 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26935201 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266009125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264172904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26644968 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266817034 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266281421 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26867281 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26616717 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269527669 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274352521 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26812296 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266697236 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.268954277 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266166323 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.267123751 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266799491 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271627051 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274902438 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.266545951 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273439203 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.286424435 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268326575 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268402759 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268464167 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.267592839 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26720161 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.272088016 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.276368974 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280051745 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293967815 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269982107 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.27262826 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.269816268 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272354208 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271988683 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.267761124 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269223308 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268224336 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268787669 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268333373 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270033358 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268283702 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268323912 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269679212 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.269501751 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.267797967 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270220313 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.268978173 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270042795 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268342372 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26934746 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268880742 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270750915 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.268232792 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.268694909 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270341565 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269679075 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26975488 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.27601762 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267427157 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270049361 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271074159 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.270547642 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268895063 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.271307235 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272531124 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269989573 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277236439 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289693956 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.270711069 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276544379 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.28938084 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.270361935 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.273698965 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271869373 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268852728 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273775758 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280027363 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271813565 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271673249 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.27266283 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271898917 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272386581 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.278639365 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.289620383 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270562565 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272984233 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274174145 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269845743 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.273621275 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.274124573 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273016018 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273609109 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272643517 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273778602 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273752358 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272043136 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.272324123 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27270664 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276885038 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279169228 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277293883 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271788224 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.27433463 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273946513 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277330447 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.272638522 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.272173475 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272473451 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.284651333 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.298736728 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.279466193 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294692933 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.273536263 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277051521 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294139747 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276872247 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272965839 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274061413 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.273268699 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272582236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272020411 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274523001 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.27504936 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27472884 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275162498 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279039103 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274111229 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.27387707 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.273824506 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275061284 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276051412 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274385768 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275288245 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276048203 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275988555 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272902706 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274539453 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281159379 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294850214 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275570564 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.27530155 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.275300006 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274992074 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276346176 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.27587278 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.279569005 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283802056 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280117193 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.286110556 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277856281 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285611764 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276936139 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280091567 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.28349109 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.27461239 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275327162 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276692757 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277138898 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283341679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295626281 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.279540172 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281522834 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277534511 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277082223 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27721686 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276051003 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278292696 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277761779 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285842669 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297621227 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281007999 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277989667 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275508235 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.278071156 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.278741146 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.275558018 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27978388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277419668 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277903308 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.277248846 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.278381521 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278187505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.277671304 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.279031022 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.276487039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.278395471 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285347604 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.299535519 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282109065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.279448681 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285108412 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299804835 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286563031 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298400979 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279284838 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278438102 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.280001594 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.280919185 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279213244 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279588859 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279444458 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279800455 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284835599 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.28039879 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.28113672 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.281167528 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279740668 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.279508114 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289534777 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304549796 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281129469 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285174869 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278246039 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281862512 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.28595903 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.280949759 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278887523 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283893407 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.291480239 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288418172 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.28133629 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.28124831 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28178497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281029574 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281073961 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.282045499 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280828653 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281357313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.28181209 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280209953 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284405965 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281465665 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.282011492 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282355842 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282773577 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.291806436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.3027626 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.28219864 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283049086 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284094591 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282612031 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282477953 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282599406 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282178655 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282680449 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.28302306 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289615915 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289921196 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.284667487 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.282601305 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.282928263 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283306096 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.28248542 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283205728 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282685515 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282439788 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284658599 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.283248795 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283836115 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282326204 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283718152 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.2834145 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283418759 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284327065 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29106501 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284072797 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.280600781 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.284760505 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283927633 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.283409849 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284005818 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290637464 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30778721 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.294583335 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.292396562 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288967338 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283982484 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285702125 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292786532 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283358516 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284114183 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283930054 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285729177 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285550557 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288953824 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284071537 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290648836 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.30566212 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.284433249 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293653724 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304873611 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.286248815 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.286394294 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.290473315 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.284900955 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.284776101 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285970848 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285445692 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29277637 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307461663 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286507798 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287549179 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.28524082 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.287668431 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.289389061 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28668497 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.286898044 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284931885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287096118 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286841412 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28766364 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284794082 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.287713525 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.28662755 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290120908 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.293818111 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285647707 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289213431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2874433 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.288112451 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286920836 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287668909 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285198126 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.28630277 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286498256 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28639564 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.288658802 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289710944 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287949326 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289617329 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28993647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288884421 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290896087 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297881733 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29696731 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286374186 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28795642 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.288140654 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.29005049 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289375987 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.288413636 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289193573 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.288655457 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.289080546 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.288798896 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289880623 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.29133507 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304569926 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30913437 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287957869 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288573357 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290635648 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.289319208 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286268873 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.290130586 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290153521 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292898159 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296959434 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289225233 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296363252 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309411679 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290713581 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.29563383 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293777341 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.29778844 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292676106 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290102564 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.290649922 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.296606971 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.306465068 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291200885 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300260635 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319234491 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309680972 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290834454 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.290570213 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289677393 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291996439 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.29255374 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.291988344 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292381758 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291195957 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.290871891 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292484417 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29771457 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293677446 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293723078 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291288871 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.291863221 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291774135 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290262783 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.292184519 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.291929146 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291788153 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291910451 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293009588 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.29290799 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30340901 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.321715813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292640291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.292681858 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.2902579 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29458205 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.294842392 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30331389 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301322469 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291844021 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293223598 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293474067 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.292766148 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292202823 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.293321851 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292371428 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292158537 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.289822781 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305785358 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319980906 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297612746 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293053528 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294589719 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294732038 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294179324 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293569084 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294184332 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294711547 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.296478707 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.297676298 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294592383 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294762313 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296549331 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.30188099 seconds)
  done (took 762.86817984 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292351529 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291484357 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291859046 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29115776 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291573007 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292116877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292474417 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292726642 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292730294 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29168734 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291951694 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292539591 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292552522 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293957613 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292646307 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292628314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292958284 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293287541 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292918121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293297574 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29298192 seconds)
  done (took 28.352842792 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294903342 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.293596555 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293170856 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29617344 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293384573 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29554647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293799895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297007955 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296451408 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294083372 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296237432 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298017051 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294729465 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.295297272 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293814971 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.29766539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.299045469 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295676058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.298038114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295046459 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298369229 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294451422 seconds)
  done (took 29.715197855 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297311498 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.297166682 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.297526684 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.296014873 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297813738 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.294889195 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297522543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.299565564 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297139818 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.297807096 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.297035658 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.297722696 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304616677 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.304096294 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.2987635 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.298582282 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.441885735 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297281827 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297542537 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.297461718 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.295550542 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30427208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.317234294 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295985574 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.296803814 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299138471 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298781037 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.298323314 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2983428 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.299288399 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.303219189 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.299012368 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298133277 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299992708 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.297772916 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299245956 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303610465 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298771754 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.29658643 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.300106209 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309225848 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.320350928 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300094393 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305524467 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.32134348 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299924309 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303133744 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.307362672 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297584992 seconds)
  done (took 65.086327909 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.299608631 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.30075378 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.297821931 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.300316548 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301001187 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300963143 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300764541 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300351941 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.29868268 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298336101 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300549739 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29876916 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298283631 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301555936 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.302112828 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299389857 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298544318 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.300078548 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.299390659 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298780587 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299689982 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.302058797 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.302379048 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299146954 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302588267 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298895473 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299114975 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302332834 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.299406826 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300085183 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302061822 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302666777 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302173713 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299984283 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29968305 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302280719 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302581732 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.299734431 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302246486 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299466312 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302550621 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.302754219 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302953369 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.302628953 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301100901 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300759023 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299263175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300513369 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302181283 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302661064 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.302764187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.300893242 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303544897 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.299723938 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303631267 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302943125 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.300599308 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300431673 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304041196 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301082119 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.300456543 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303051325 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.301954329 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30432229 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304333381 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.301605788 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301289531 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304343325 seconds)
  done (took 89.690883003 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.303219827 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303241442 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30371672 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302908293 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304122784 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303823198 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30374486 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.304459608 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304006902 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.303792017 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305123216 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304858903 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304642224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304424298 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304333775 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304733457 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30428098 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304348636 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305223819 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304366784 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304949482 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305177886 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304903066 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304699137 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306118535 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304354152 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304998398 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306019305 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305785066 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305975009 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.306098718 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306133807 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305788686 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306761209 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.305551859 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305848304 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305308558 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306441228 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.305013702 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.306370159 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306410021 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306276444 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30604991 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307629705 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305611125 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306535136 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305867913 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307607883 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307739525 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30675835 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.307868909 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307270144 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30750483 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.307248603 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307367205 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.308007389 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306876431 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306504024 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30698678 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307620521 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306851863 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.307957541 seconds)
  done (took 82.170251995 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307605936 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308337297 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.305744037 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.306323072 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308656711 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306161867 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308472841 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308612958 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310373681 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309503403 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308928994 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306596624 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306318766 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309323681 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305790496 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307012396 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306534736 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307077918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310147708 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.307217214 seconds)
  done (took 27.377696005 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307208077 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309621967 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307740027 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307029134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.310691793 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.307450492 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.310719259 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310231394 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307492301 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311282944 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310454952 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309653028 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308006027 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307623416 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311476549 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307940944 seconds)
  done (took 22.168613023 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.307758854 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.311606179 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.309477368 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.309658156 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309698411 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.308375147 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.310733203 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308243392 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.308723914 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.3127281 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310325793 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311439531 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.311300803 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309609055 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.309392804 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.311059552 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309112445 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.309402795 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311078284 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311067764 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.309657105 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.308320568 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311194671 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.312092806 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309744672 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.310394895 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309116212 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309507375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309942035 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312480787 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.309924948 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310349234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.309385237 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310453863 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.312577211 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311061812 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.311906991 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.313812686 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312671099 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312336825 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.313388533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.3108294 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313157424 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313027599 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.310681714 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.312389131 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311840711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.311268713 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.309568613 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.311832758 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313366994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.313167481 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312722239 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314158364 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.31411589 seconds)
  done (took 73.329222324 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313930366 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313598326 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.31208807 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313688123 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.313260973 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311850683 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31458118 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.313518803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311442218 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313840729 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312584367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315834085 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311950115 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315020217 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.313704817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314851712 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312875481 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.312554969 seconds)
  done (took 24.868223658 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313411824 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312832611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.314916472 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312576574 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313655767 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315367232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313036847 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315528468 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314951988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313867235 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313902289 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315601881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316417448 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31572045 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.314258709 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314399066 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.317378912 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.31579254 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.314002086 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313924413 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317060255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316989486 seconds)
  done (took 30.154445601 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.31479846 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.315878075 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.315779967 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.331592868 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.333797555 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.339227141 seconds)
  done (took 9.180553268 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322886239 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316595245 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314314967 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317492071 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31625448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314629294 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314721584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314611011 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316274374 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315666824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316585957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318017493 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317758112 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31459512 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317074577 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317330049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31438777 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315320232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315792226 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317738666 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315106499 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31862352 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316132303 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315860723 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315734289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31536539 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317899718 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315700416 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315440832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318592697 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319090121 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316013757 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319200126 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316329235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319505639 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319088815 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317502431 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319187244 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318669441 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317076652 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320143526 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320015325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319497478 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317052838 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320030704 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31726051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317087216 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317263043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31751286 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320728243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320955628 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317236281 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321008977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320783298 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320357344 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322858057 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318707722 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318937314 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321449268 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318500904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319068742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320964594 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318222422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319875668 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320823918 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318580247 seconds)
  done (took 88.234004561 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318573354 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318947338 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318608244 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319885722 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318336862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318580855 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318444273 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318406763 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320025357 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319299784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322227728 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319894124 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319211398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319460137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3189578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318790036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319217474 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320110509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319760231 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322596216 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319820712 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31945591 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320590081 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319623759 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320363116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321955967 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320078673 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320764165 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320142555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320248286 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319734808 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320500989 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320854 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320432929 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320966245 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319541488 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319892163 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320726112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320651294 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323898279 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320792432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322885535 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321337092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321422391 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321947667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32097787 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321813854 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321093465 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321903648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321241214 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322040905 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3220737 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322118645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321513354 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322655745 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321889953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322071305 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322538258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321991433 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325464768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321759175 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322995213 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32485628 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323166017 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323416267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322784063 seconds)
  done (took 88.414817131 seconds)
done (took 1779.625428645 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.373782751 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.321985924 seconds)
  done (took 13.933874543 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485918199 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.441062629 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.322861369 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.376374987 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.322175131 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.323996735 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.329933636 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.323284039 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323772688 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323944955 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.323775318 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.5092011 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.344923763 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.324300714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.324750905 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.418994264 seconds)
  done (took 43.067772276 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.353357353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.329482118 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.448010095 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.348661305 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354213989 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.524539647 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.383123446 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.329554297 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.508348737 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.372484338 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.964258678 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354554053 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.329212601 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.492338896 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.34805134 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.523469253 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.585146761 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.967763516 seconds)
  done (took 30.75637565 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.80387521 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.364855368 seconds)
  done (took 9.409962937 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.364343882 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.349778274 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.363846083 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.352259406 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.378211728 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.352717399 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.364454204 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.374836505 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.38426452 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.387081819 seconds)
  done (took 64.922312785 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.349721899 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.329706161 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.331388984 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32985164 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.321305417 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.323033353 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.328991542 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.326774801 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.232383134 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.460596764 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.332085232 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337061994 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.35122292 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.331120599 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.329170032 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365247157 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.484344249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.329109131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.328664491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.337497201 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.331131062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.415899552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.374275726 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.328644215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.461841442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.237019588 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.332539994 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.338082099 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.513840609 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.330989343 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.33081805 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330776515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333579092 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.946027686 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.824516085 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.340373211 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.354772331 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340619947 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328961093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489852852 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.333437986 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.338351832 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.323904597 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.81564356 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.460553881 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.448878062 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.636856555 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.349754201 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.332991926 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.393298153 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.332500981 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332572125 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361935427 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.099017501 seconds)
  done (took 111.946574789 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.362442716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.713353968 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495358185 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346281838 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.184098172 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.112602815 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.342917483 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.630660312 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.3661085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327194594 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628132585 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851964497 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.34871775 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.385823706 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.825334867 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.390848743 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327256049 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.167178047 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.344392942 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.330533413 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838997403 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328031838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327059384 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.58030022 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.365700198 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.797838891 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.827826654 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.807722616 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.346471276 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.326832051 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.818727663 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.352586261 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368157823 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.32803557 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596898479 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.702323816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696257343 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.350238581 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350953667 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.331727411 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331308453 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.806570982 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711074605 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.346455891 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344587992 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828376139 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.350941354 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.33602136 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331544169 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538381939 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.165268678 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.329570502 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.824367375 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.329120901 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.734927462 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.409139491 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.377834708 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827181875 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.34679081 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.526450465 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.376949177 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.329679604 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337016867 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332727301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.330598619 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694523969 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.634669197 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.336263005 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68970454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.833674452 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.350053507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883121392 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.246791591 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347004612 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.390995761 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.330411004 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.016778108 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.852531432 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.358970435 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.329693359 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681462802 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.351106488 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619850875 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.362450335 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.330029518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850183433 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.33536754 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.352396513 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.335659666 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.348357017 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.088443435 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333754658 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.622629492 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.35799135 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330141123 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.330855188 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.380316832 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.331676484 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.330670768 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.334122325 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877826448 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.360064044 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.311988907 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.350878735 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.344387611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.33217662 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.334205991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.333863405 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557949211 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.91269356 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.349182756 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334258474 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.334954102 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.333784174 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.580643711 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.334055699 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.669717072 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.357242901 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.331740234 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337336886 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.144599159 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359891663 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333575722 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.35709374 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230153992 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.540063923 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.351920255 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.334130319 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335602791 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.366286908 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.63632834 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.353679419 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.411777805 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.33413336 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063875413 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.390293903 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.351535108 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.829659031 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.341266944 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.272187586 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.35311219 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.336090372 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625680317 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608017141 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.607698424 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.336772461 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.351750363 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065868884 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.378920841 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481607181 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352737622 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337903576 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532850602 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.537960962 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.335888442 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.948659769 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.334973827 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560408367 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.335893688 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.634428535 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.853218535 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.358625353 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.346037699 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.070629786 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.047032884 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.008857741 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.342019544 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619611568 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.339576565 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.825438798 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.336568057 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.335161815 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.928248216 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.338744004 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.336607602 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.336112416 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.336819908 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.469123564 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511594896 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.517045084 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345053832 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82037193 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.403674623 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336728896 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337065639 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339377491 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.682655696 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.404767206 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.338946339 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.341756637 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.337704402 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.342083808 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841755916 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.293067072 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.337880099 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490708628 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992353134 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.358866705 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337796355 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.07047938 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.561647684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.916297942 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.412229374 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.67581277 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.366348528 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.376244501 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.13203174 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.434467039 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841956421 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.361963024 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.339125934 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963052796 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.360700507 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.441823607 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.338414638 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.340130555 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.903890392 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.361763542 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.344283784 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.650801492 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357107941 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.594748546 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.340270158 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.379118394 seconds)
  done (took 1113.861289538 seconds)
done (took 1389.136246405 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337564149 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.343759865 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.323139485 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.344416789 seconds)
  done (took 26.606836684 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.350019012 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.347071279 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347491164 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.346387054 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.349676726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.346909646 seconds)
  done (took 9.347833046 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.519603462 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344313881 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.344438001 seconds)
  done (took 19.467430519 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.562020809 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.708543812 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.725015214 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.71259432 seconds)
  done (took 10.969815326 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.348199066 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346697323 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.347521556 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.349032343 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.350704919 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.351522324 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.349649343 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.350303829 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351013041 seconds)
  done (took 13.403330937 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.522835828 seconds)
done (took 86.576610563 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.443389698 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.09921741 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.218660385 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350565818 seconds)
    (5/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.351091821 seconds)
    (6/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.355004762 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.608073133 seconds)
    (8/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.362011363 seconds)
    (9/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.353811118 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.383543928 seconds)
    (11/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.898793149 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.372908273 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.342173822 seconds)
    (14/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.364259218 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.404675065 seconds)
    (16/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.358575181 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.617620688 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.31644069 seconds)
    (19/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.155752033 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.785838346 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.340236307 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.37822268 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.196352623 seconds)
    (24/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.324202264 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.88016862 seconds)
    (26/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.36054186 seconds)
    (27/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.323642349 seconds)
    (28/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.99155281 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.363906585 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.34517752 seconds)
    (31/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.351483658 seconds)
    (32/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.347828714 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.855102263 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.153326629 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.365084001 seconds)
    (36/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.361781361 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.447742414 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.271241468 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.016347558 seconds)
    (40/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.555192577 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.332955687 seconds)
    (42/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.746303035 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.466279449 seconds)
    (44/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.999739429 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.891926796 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.413437027 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.6681743 seconds)
    (48/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.779708141 seconds)
    (49/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.719951695 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.479111418 seconds)
    (51/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.372992521 seconds)
    (52/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.378933894 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.710866407 seconds)
    (54/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240438485 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.456239978 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.965962745 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.627458429 seconds)
    (58/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.481514034 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.211551059 seconds)
    (60/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.199744451 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.32321846 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402925541 seconds)
    (63/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.454792917 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.783474632 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.326451601 seconds)
    (66/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.015771274 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.826456308 seconds)
    (68/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.344952067 seconds)
    (69/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.327101361 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.364808048 seconds)
    (71/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.736504348 seconds)
    (72/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.327584995 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.326654763 seconds)
    (74/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.325876934 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.159464887 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.229414882 seconds)
    (77/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.355599265 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.573591788 seconds)
    (79/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.638528198 seconds)
    (80/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.327089316 seconds)
    (81/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.153745219 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.591717576 seconds)
    (83/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.353295228 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432745382 seconds)
    (85/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.034509673 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.456003296 seconds)
    (87/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.847057096 seconds)
    (88/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.169454044 seconds)
    (89/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.362803763 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.330887799 seconds)
    (91/309) benchmarking ("sort", Int8, false)...
    done (took 4.448807646 seconds)
    (92/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.434181389 seconds)
    (93/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.433206029 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.36493741 seconds)
    (95/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.339385627 seconds)
    (96/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.466483404 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.040949906 seconds)
    (98/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.32776698 seconds)
    (99/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.099829092 seconds)
    (100/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.55173305 seconds)
    (101/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.151797888 seconds)
    (102/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.241351216 seconds)
    (103/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.587343581 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.858840902 seconds)
    (105/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.662870441 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.562611503 seconds)
    (107/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.357211836 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.164253991 seconds)
    (109/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.764602891 seconds)
    (110/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.503604411 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.348983014 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.474939236 seconds)
    (113/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.939502107 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.348945201 seconds)
    (115/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.437254416 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.76769868 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.02546976 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.405914221 seconds)
    (119/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.476048888 seconds)
    (120/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.534731245 seconds)
    (121/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.330509102 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.432735579 seconds)
    (123/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.878736662 seconds)
    (124/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.454879839 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.349095496 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.122754725 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.868056696 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.391655323 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.366352312 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.43864326 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.648000149 seconds)
    (132/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.377103518 seconds)
    (133/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.493009851 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.176275779 seconds)
    (135/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.369651687 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.613023231 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.364631534 seconds)
    (138/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.751913801 seconds)
    (139/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.475081094 seconds)
    (140/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41513503 seconds)
    (141/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.290414139 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.335319409 seconds)
    (143/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.350547525 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.453200231 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.368426832 seconds)
    (146/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.338673029 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.336331812 seconds)
    (148/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.721750453 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.371858204 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.350461441 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.587648657 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.368277823 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.919076889 seconds)
    (154/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.376047926 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.179073473 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.378431734 seconds)
    (157/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153987646 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.344512324 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.389449402 seconds)
    (160/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.603339548 seconds)
    (161/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.379547256 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.380313887 seconds)
    (163/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.766097231 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.11456411 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.378062436 seconds)
    (166/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.332017165 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.103155936 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.461965926 seconds)
    (169/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.351700533 seconds)
    (170/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.348544713 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.39768914 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.170439335 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.359410389 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.380741905 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.353440022 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.144685909 seconds)
    (177/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.496153346 seconds)
    (178/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.460641876 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.368416266 seconds)
    (180/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.39483321 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.600581425 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.763960018 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244190141 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.769560516 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.512947362 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.402873326 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.409735871 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.38095603 seconds)
    (189/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.337149583 seconds)
    (190/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.340428226 seconds)
    (191/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.847510805 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.400328148 seconds)
    (193/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.728197326 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.373537072 seconds)
    (195/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.48342106 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.469215578 seconds)
    (197/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.334749214 seconds)
    (198/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.872183119 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.374979931 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.401302018 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.338597124 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.338478466 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.430103249 seconds)
    (204/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.335595883 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.437152197 seconds)
    (206/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.024040837 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.006551515 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.420475625 seconds)
    (209/309) benchmarking ("sort", BigInt, false)...
    done (took 6.354570749 seconds)
    (210/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.420703123 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.355589107 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.759434285 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.774346412 seconds)
    (214/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.431847305 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.986268195 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.33588068 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.578058432 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.751104569 seconds)
    (219/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.980136663 seconds)
    (220/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.778438827 seconds)
    (221/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.355368175 seconds)
    (222/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.375587279 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.940455269 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.379949793 seconds)
    (225/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.389061767 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.628873656 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.32570366 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.398707056 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.36663787 seconds)
    (230/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.356472241 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.383003273 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.357068606 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.400011878 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.354842079 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.360706046 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.720957598 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.400657358 seconds)
    (238/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.337537213 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.302352548 seconds)
    (240/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.337946985 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.424131946 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.704649929 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.444067163 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.049855314 seconds)
    (245/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.35753232 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.475765811 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.47319782 seconds)
    (248/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.04407326 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.335863845 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.580515321 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.986912532 seconds)
    (252/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.846842536 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.591284666 seconds)
    (254/309) benchmarking ("sort", Float64, false)...
    done (took 5.722591883 seconds)
    (255/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.441508088 seconds)
    (256/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.365970529 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.389456097 seconds)
    (258/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.358635208 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.473976617 seconds)
    (260/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.444461676 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.346376991 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.793340081 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.768041243 seconds)
    (264/309) benchmarking ("sort", Float32, false)...
    done (took 5.386525421 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.642904751 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.098123684 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.036204528 seconds)
    (268/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.339402957 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.506477501 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.360622356 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.934429953 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.282933955 seconds)
    (273/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.424612532 seconds)
    (274/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386949681 seconds)
    (275/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.476563586 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.340737873 seconds)
    (277/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.360216435 seconds)
    (278/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.878674132 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.454242074 seconds)
    (280/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.341298461 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.004471653 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.442015837 seconds)
    (283/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.386332494 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.476554279 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.386804063 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.346150138 seconds)
    (287/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.037183485 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.230840212 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.017778999 seconds)
    (290/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.344090146 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.841226128 seconds)
    (292/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.878450216 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.443259416 seconds)
    (294/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.37255102 seconds)
    (295/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.365407773 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.422324421 seconds)
    (297/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.340210025 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.389248018 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.341070621 seconds)
    (300/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.816364586 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.903241531 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.341556249 seconds)
    (303/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.488423715 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.384806703 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.361453815 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.349822688 seconds)
    (307/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.481487246 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.387974611 seconds)
    (309/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.55099004 seconds)
  done (took 1050.660246659 seconds)
done (took 1051.92248006 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.398180979 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39393258 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.375921585 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.39683469 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.486912772 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.398381069 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.385505407 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.377968219 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.422719245 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.425403717 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.374629901 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.39788444 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.377391925 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.376291059 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.375000548 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391497001 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.476857656 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.37662892 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.393475608 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.387195938 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.393491271 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.37676359 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.425780369 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.397048639 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.378978205 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.378990006 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.380265041 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.397630368 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.489218882 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.380393487 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.380378345 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.388808045 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.47614281 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375316585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.371613981 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.397836597 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.390198159 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.386321466 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380371662 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.410667468 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.912054079 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.396462211 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.37970666 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.3787148 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.37768828 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.382512665 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.379119279 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384701137 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39365123 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394218375 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.898957092 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.412392302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.381646295 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37831366 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.389334829 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.380683042 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.383097333 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.398725756 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.400671117 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39991939 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.466252721 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.38333476 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.380492154 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394546877 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.387630188 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.936728186 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.392297353 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.382367197 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.908843771 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.403648175 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.936123532 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.407271786 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.380747677 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.393476374 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.41089327 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.476850693 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.375714316 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.378434064 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.388214749 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.379724927 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389926283 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394431273 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.385150243 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.380944586 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395629032 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.403711967 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.390836272 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.382360182 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.390755007 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.401556909 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.389858532 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.39498129 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384300119 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375845254 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.390787633 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.384582248 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.384751486 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.385893513 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.387738876 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.391046056 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.909199337 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.418653213 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.37878901 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.377592211 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.380987772 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.397190113 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.910237412 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.40205531 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.403223062 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.429232061 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.383023571 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.465810015 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.386591085 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402392249 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.392605833 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.386256523 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.378134748 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.469165318 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.904107844 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.416133152 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.384206061 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.381955139 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401915149 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.385314773 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.378891902 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.483389887 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.385145217 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399489437 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.504681557 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.393814831 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414154432 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.382659509 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.387611834 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.406801809 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402192743 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.416553259 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.386604392 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403038044 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.401086918 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.380280856 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.395774948 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.395071516 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385691971 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.38939217 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.378189689 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.406950897 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398854415 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39965301 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.404814055 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.50718556 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.381003101 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.470807309 seconds)
done (took 233.967555401 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.444174264 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.37263183 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.461749805 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.38008243 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.480513004 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.478330139 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.377444287 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.379156027 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.377042 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.754697832 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.377714898 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.376864262 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.378539234 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.376805961 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.460673342 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379774505 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.377579591 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.718387052 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380265441 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.456670962 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.380222564 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378214918 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.380951118 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.758924831 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.379423197 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.379202488 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.456880207 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381069241 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.724288272 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.379657777 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.38017321 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.723392339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.470080992 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.398558858 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.390970569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.387648622 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483272407 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.399806454 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461252681 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461955215 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46518224 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.41974711 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.378991761 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.373944992 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.382970576 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.382152765 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.379125257 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.408781174 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.381400191 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379674237 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.719865938 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.39110576 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.38074002 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.379394852 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.380226485 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.411542075 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.380282245 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.383056329 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.471622866 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.382120053 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44421316 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.761869399 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.758377113 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.384395955 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.383844433 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.382033736 seconds)
  done (took 151.580740747 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449546582 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.457339113 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.499626582 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.402011502 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.435558527 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.503451746 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402166745 seconds)
  done (took 11.441260668 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.388705492 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38573514 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.43292803 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.433666429 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.384600766 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.533349272 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385711062 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.395284302 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.382121236 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.43649708 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.384916389 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386137455 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.391472896 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.378812989 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.431923076 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.395846104 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.501097479 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.386218432 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.38434342 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536736859 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3836429 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.390994177 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.436965913 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.397242743 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.385742695 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.390655374 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.951595952 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384298455 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383987819 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.385852093 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382617303 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.42334567 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387542169 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.377771458 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383147151 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500827843 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.387311551 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383329778 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.388430457 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.385238365 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.387316839 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.387975273 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.387237463 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384052677 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.38714263 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.408779152 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.387815126 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.387930079 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386947178 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387723579 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436803824 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.38777319 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.386105008 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.385741363 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.442230012 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394192347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388503046 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.383787272 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.387768147 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385346484 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538221185 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.434759122 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.38823197 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.433294674 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388843101 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388015263 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387276478 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.388572279 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.440500139 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388589033 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435713535 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.385725826 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54202483 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.411259061 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389602306 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.390218918 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.39128124 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.388137216 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.387083403 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.393639415 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.386593973 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389182177 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.394243961 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38722061 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386705026 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.491160356 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.496499052 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.388278178 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40400066 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.395414539 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.387700218 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.441024209 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.390568676 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.387159118 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440959924 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.505265206 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.442871795 seconds)
  done (took 158.399535668 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.393017101 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.3968312 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.390448808 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.405084464 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.389891853 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389597462 seconds)
  done (took 9.663207223 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.392080618 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.392860926 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.39072691 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.390103101 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.39053541 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.39197997 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390558169 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393024084 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.395288266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.392010026 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.391579131 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.392094268 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390806282 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391748122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.391086266 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391818396 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.392277894 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389567783 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.392695561 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390878611 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.488279753 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.393239469 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391156188 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.394127132 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39778295 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.393667194 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.399951583 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.392213414 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.392501887 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.400709095 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.414320128 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.393902003 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.393711702 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.398566359 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.396761611 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.393832675 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397331554 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.393404975 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.391414156 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.394129831 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395030319 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392827572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.393781023 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394265177 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.395276967 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.397922804 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.39784228 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400809307 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.393481495 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395197857 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.394596944 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.394177994 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394474273 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.394792505 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.395975244 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.416569294 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.399392731 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.39696835 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.395428756 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.396421285 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.396074971 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.395251287 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396741362 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.398439006 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.401581782 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395355097 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.397426008 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.398685295 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.395402015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.39537848 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39601616 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.393544183 seconds)
  done (took 102.840336917 seconds)
done (took 435.213598247 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.493488501 seconds)
  done (took 7.797411849 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.594519133 seconds)
  done (took 7.901174381 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.229969535 seconds)
  done (took 23.539454107 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.395148265 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.443281908 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.424940494 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.406359802 seconds)
  done (took 26.974779237 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.900874943 seconds)
  done (took 8.205393079 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.393225843 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.387239719 seconds)
  done (took 14.08707203 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.577443511 seconds)
  done (took 7.88256708 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.024009167 seconds)
  done (took 8.333123964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.387362115 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.417342076 seconds)
  done (took 14.38208473 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.378719949 seconds)
  done (took 7.682951883 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.045765579 seconds)
  done (took 9.350959035 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.392334858 seconds)
  done (took 7.697257553 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.40568336 seconds)
  done (took 7.710501091 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.921875394 seconds)
  done (took 10.225742447 seconds)
done (took 163.075768303 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.389136937 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.391353122 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.391054014 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.389388029 seconds)
  done (took 26.865273729 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.431517331 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430331862 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.432229952 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.44077286 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432655811 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.430031058 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.422102194 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.422061188 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.441414256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.433631294 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432675314 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432871422 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.430764363 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423065298 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.433575658 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.434250827 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.442166448 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.432520951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.423932132 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.435400717 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.39766232 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.44226615 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.434916168 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39882936 seconds)
  done (took 35.617608116 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.920448877 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468863273 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.552773329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.449974896 seconds)
  done (took 7.697941849 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450596644 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.452772359 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.463923405 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.505106964 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.528441048 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461441876 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.424814572 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.420406767 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.406660675 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.452760601 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529319227 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.468908344 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.54070181 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.398810279 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.592265825 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.39849 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.398846051 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.451499508 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.504338193 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.520045953 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.399582712 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.452318429 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.455739268 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.468876139 seconds)
  done (took 36.453915416 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.399671719 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.407657678 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.398664253 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.398039068 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.406992321 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.398675406 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.400201211 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.400337132 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.398535071 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.406386733 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.397543378 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.411845237 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.39879531 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.399932543 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405887772 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.401354315 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405621393 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.400015581 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.399258934 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40477879 seconds)
  done (took 29.348749978 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.39230267 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.247259962 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.74619545 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.651160621 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.395271613 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.398179729 seconds)
  done (took 28.138806133 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.477605891 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.632511704 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.400632734 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.80432557 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.907361224 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.426110678 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.401200887 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.658260563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.015963944 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.012916178 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.466237634 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.473264728 seconds)
  done (took 20.987810834 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.403190112 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.398900367 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.40497636 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414800369 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459311587 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.421996267 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.408939899 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.39605606 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.465514663 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.482368488 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.422704651 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.461410643 seconds)
  done (took 38.451214417 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482916221 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.448261239 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.415127903 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39853932 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128594285 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608359154 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450086771 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846616036 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.400702848 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671844547 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400991244 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494515605 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.655359786 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402039623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399387798 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.455037401 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641948501 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900536578 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398691709 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697864977 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428620507 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400185066 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.816581332 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.437206701 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61055908 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.545734287 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658848588 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.175404293 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721012938 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416162759 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409725447 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397772625 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67304986 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106262422 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514600882 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409497425 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40310112 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.953813249 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.389261373 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.715972951 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410447466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40753602 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409622729 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398750845 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335126123 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406385104 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861418325 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.405060763 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.110397505 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398889925 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410660919 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494951535 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.403483448 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972743355 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398601732 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414315656 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.397565966 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425067867 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994497072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.140627433 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419087499 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.342226543 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417957124 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.797398035 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078644188 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.52165688 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.405647793 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.405900328 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336879527 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.773525809 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424429703 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539692751 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.42419838 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.063859846 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164525049 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431920447 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337391658 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977074427 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402967604 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.344237562 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630919021 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.179019961 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342435225 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.349260482 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338154056 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139325319 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412368112 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.81809983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.422341523 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.875692566 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.414207957 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419264599 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426969918 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.627324263 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.282195432 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40399108 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.403181155 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526176257 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425956185 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8575053 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336819241 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.407106129 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662280753 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.615686014 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403825201 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.488977673 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640470767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402974316 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.425658353 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404457767 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.421900989 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.023999697 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434770114 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274401525 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430674581 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.184350653 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167859814 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410923439 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50479014 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411060721 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665492714 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.187601174 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288690061 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472597776 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40816237 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403541444 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830490704 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007233739 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.286690193 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.401864673 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415837803 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.422594715 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.405193819 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364168039 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.403618161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416332266 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.192580676 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630366832 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406696376 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687931605 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340395977 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544192001 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422814459 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.629736646 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.738332823 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.430211656 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668117658 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414783665 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428537362 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424222457 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425563463 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507211274 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429544023 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.417562848 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671074482 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.410230361 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.410788819 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.853443146 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.191105024 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411594205 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.411826854 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4104252 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038738274 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398328305 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413665639 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.300221089 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.421096705 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474931561 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414300326 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419401522 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.42724538 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443907538 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.419995939 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.411241382 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629976849 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419241615 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.836369596 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495612781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.621075402 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036438263 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440292965 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.343522963 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.120249873 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.102202287 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408715209 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.599430368 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410040598 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420018476 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419848477 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41770121 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043032808 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428212194 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.760302242 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.420235286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420911783 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.41450552 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409717349 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.384693651 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.33640202 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429192595 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.427746549 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554492242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.422703926 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344987677 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927041774 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414894201 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409345081 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.189074736 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444684127 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.758804157 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916395567 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673336188 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41529131 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430858386 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.949414518 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.452941036 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414229571 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41307329 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429670091 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.426954154 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445529054 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.422580556 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.828879499 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.790400151 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981714987 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183906859 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01164425 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428322226 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.414607516 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31652133 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869989939 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348198862 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072089259 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616390179 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882948414 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370393774 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62852606 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.746380503 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.26431188 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424303691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641730567 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436905657 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.432893285 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432039717 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626714582 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448021248 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.427180604 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.349656897 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.930407087 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668990359 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420812849 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495554934 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873238536 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422992358 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.199498249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.472152925 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.791348584 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616691166 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961262058 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.808141508 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430078553 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431030716 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915106988 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42062085 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943308714 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082829403 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446713598 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.633904902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354593459 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.426928587 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.424933039 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.41006134 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.886263732 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.420239005 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.671800395 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427581117 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35160709 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.423807661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004378888 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.296062518 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.421707994 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415347662 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188522948 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425755333 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748851949 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.434780623 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.377983156 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437651719 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.349850558 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350230047 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.109241439 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422639649 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387326547 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937800159 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.42917492 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426769319 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432774883 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270474899 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.675590174 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.431373768 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059016375 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668868977 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428336595 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447296691 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.517428287 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429119494 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.405733814 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.320755207 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654366896 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424901317 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648725423 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.462780785 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.582582494 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.477377604 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630092849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.328042351 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.435323374 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.696868141 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.148366651 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.417065675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229413114 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467136587 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.422293756 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442971912 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439308263 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446516419 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510348548 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430959075 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.431087015 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.430831534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.605025668 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420820104 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425738347 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.433348353 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513099558 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.351835178 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.386539263 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.19241751 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06589527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229175322 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08154844 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455500245 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419321873 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429219958 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354759313 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572683157 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948556275 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693996308 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.538959943 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.422723432 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469170245 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433058237 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44192141 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638930589 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696055439 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395431638 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420138866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235919981 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.304428232 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432577779 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632216909 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949103386 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007290943 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535208187 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434347816 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884688538 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695977257 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.512886073 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422826646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01764095 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.426982601 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.847480897 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.452032086 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421987716 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575908421 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433680522 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144656148 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452537669 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.582979016 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.196668761 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890257665 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686442306 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.960291214 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.434757369 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073156098 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.227914215 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696417715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493908028 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433484692 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.533530451 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570231825 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.430687645 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.325861161 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422191273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.271150091 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.133777704 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.432619918 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071380338 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711651214 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.421138729 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.430621202 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453477689 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.434529252 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648538328 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166577088 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.648244286 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43565448 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426557042 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.00836175 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0707571 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462256682 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358513012 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.428550632 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698005768 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681960354 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447431414 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.87862283 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.136987276 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0070862 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401698609 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446429836 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431691429 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209355445 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076477569 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.421403566 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968125836 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090387353 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425709039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704769569 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.431217787 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42590872 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709145349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.43073448 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.431648938 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443782661 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.075470956 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289134677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.432450977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.854146102 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.368290935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.655880994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432777841 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368520153 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436769538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.615389887 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426642312 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5467949 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43912087 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.428976761 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444588078 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181488069 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.715523556 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432833057 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.419718718 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.411391452 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.432967982 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457867933 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707170238 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43347595 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.102080295 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.782160953 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685348833 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43421138 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.412551566 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.43196005 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427615745 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.154517298 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448775568 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437086092 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025368747 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.442738814 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.443524508 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433966566 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.645252219 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642009266 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440194551 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44561668 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442148495 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446892687 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.328932882 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203537434 seconds)
  done (took 1690.625043018 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459460104 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.472752669 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.444205271 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.50268488 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483863253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.486756411 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.533881389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495688971 seconds)
  done (took 53.220193532 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.428312545 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.59378958 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.461899458 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.445158339 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.442609049 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.433956224 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.925220636 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.457076869 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.43845826 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.440209023 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.43151986 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.441238433 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.118964584 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.439570522 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.4370539 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.417064573 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.4374935 seconds)
  done (took 67.138302881 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.445923668 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.882296249 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.452096507 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.435767243 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.015567041 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.463646633 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.770563179 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.479298885 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435958262 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.798705346 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.104021119 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.433665541 seconds)
  done (took 82.060253156 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.439271987 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.43938839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.438837109 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.439748674 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.440082292 seconds)
  done (took 8.539981953 seconds)
done (took 2126.453494428 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.676960191 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.186859984 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.142908594 seconds)
  done (took 5.672987038 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.578522978 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.62932088 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.810957195 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.76695494 seconds)
  done (took 8.129894809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.711223714 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.805308472 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.61887452 seconds)
  done (took 6.478574668 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.002758326 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.46967406 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.435936399 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.431590731 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.434650773 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.438301907 seconds)
  done (took 20.650518375 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.437850997 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.439974111 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.437073725 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.439540728 seconds)
  done (took 7.10107219 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.413172592 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.157358112 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.413266101 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.43152729 seconds)
  done (took 18.759086208 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.183142038 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.197111506 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.180740991 seconds)
  done (took 7.905038626 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.431302551 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.276088193 seconds)
  done (took 10.052212702 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.732009199 seconds)
  done (took 3.076823829 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.569735469 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.766528032 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.559674302 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.448006248 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.601030014 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.786640989 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.297842438 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.824394224 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.428790965 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.915457825 seconds)
  done (took 30.543812449 seconds)
done (took 137.298603068 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.589283571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.836942141 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.64146187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.56616862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.67576714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.641391054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.962448654 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.531180558 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.221638832 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.065261821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.607079502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.672386269 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.693792129 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838503263 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.693168398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.460343222 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.669269101 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.639294242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.294448472 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.450147879 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967101676 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.20298174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.437230008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.216657253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670933888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.592274768 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.780936153 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.461543629 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434993968 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.797309455 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.594027712 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443321305 seconds)
  done (took 199.695744551 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.436884181 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.452827176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437013616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.436799804 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.461551283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.435800366 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.437894289 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.462347822 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436147859 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.454601852 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.437251315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.4409007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.438635766 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.458216584 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.438112373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456007401 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.443982532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.436845702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4377578 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.457786597 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.438390153 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.467291696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.447565289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.451623941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.447894867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.456498141 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.437682186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.438121519 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.45478548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.459389021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438779197 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.467166009 seconds)
  done (took 207.651694246 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.438049588 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.457121234 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.439585724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.463791037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.449002793 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438090783 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.45761171 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.439716874 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.43977883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.470168046 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.43884181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.448527465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.44228393 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45609745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.440542527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.454635884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.448459944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.450012776 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.439444006 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.439267637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.460752269 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.439145466 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.439082346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.44490538 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.440271944 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.460004308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.44629978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439067814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.471715511 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.456415775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.443624863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448266874 seconds)
  done (took 207.691825448 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.645946175 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.447293086 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.450141199 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.406197979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.45031463 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.449045768 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.45098664 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.641344198 seconds)
  done (took 15.293921583 seconds)
done (took 631.680918702 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.956494252 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.665188221 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.669627285 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.477286025 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.327927037 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.495521285 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.469118905 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.65289267 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.437875595 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.668247941 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.836551212 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.487920285 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.979669818 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.467424598 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.735775995 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.574296615 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.425047162 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.547459279 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.809998344 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.12054504 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.755498995 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.040369438 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.681071842 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.434408306 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.00150137 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.992294903 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.254255866 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.400625283 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.488107526 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.81474437 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.329834956 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.526094575 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.537312682 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.535562575 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.59371546 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.573925326 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.489220523 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534343255 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.678283497 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.759403745 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.07687246 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.249984487 seconds)
  done (took 98.906207964 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.43328677 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.433400838 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.432489362 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.433416181 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.433758381 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.434443829 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.433002234 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.432926085 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.432880049 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.432323569 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.432856703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.4363031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.432053666 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.434557987 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.435026887 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.433627171 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.435240118 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.44026783 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.432332149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.433505677 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.436103271 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.432302774 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.434339938 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.433842566 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.434535418 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.435157959 seconds)
  done (took 38.641641228 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.453496445 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.714317903 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.887621771 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.459103981 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.453411252 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.456842771 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.539586173 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.454998353 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.456286902 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.457734015 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.630855677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.458060301 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492254132 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.917082312 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.455979299 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.455355091 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.46342652 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.454173314 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.720699796 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463625835 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.565393226 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.456598922 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.539460989 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.465346046 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.480492499 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455858023 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.460211629 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.980901802 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.477088115 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.631914771 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.353566069 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.546247658 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.928337359 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.925824815 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.355483313 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.466128391 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.457056584 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.635414086 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.458527725 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.456650652 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.541147249 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.457317473 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.90088785 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.092350639 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.475390429 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.457863111 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.001863966 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.655527606 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.730925402 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464978524 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.925616261 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.459449487 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.4584515 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.458993196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.728676721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.464236989 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.457162214 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.011089895 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.482142291 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.542123216 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.459432478 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45797058 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.737789924 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.457854249 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720735056 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.458845842 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.465797843 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.479082639 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.904169078 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.46009023 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.114397165 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.478308005 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.458840485 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.632916067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.719386913 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038694114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.482548655 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740795308 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944118736 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.563261739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.463226207 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.969730546 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.565927018 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.462917766 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.461949187 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.461713526 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459660415 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510803544 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.542823604 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.035635756 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125773536 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.033471467 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.567801273 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.471778593 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460028043 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.015127854 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.481665196 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.461453047 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.89981951 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112886771 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.481248288 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.469965065 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.125429529 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.481375047 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.545991298 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.465134032 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.911388828 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.460950629 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512066213 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.460910499 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.467166702 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485179844 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.547152689 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463485367 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.462435806 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.087652248 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.661330767 seconds)
  done (took 191.497343669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.454541742 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.472780203 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.455812014 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.453828867 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.453815928 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.462959848 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.45494146 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.456887617 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.46095947 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.456220826 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.456324379 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.453896379 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.455365794 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.461084856 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.466909561 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.461418618 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.069824495 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.455862193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.456330306 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.473488969 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.273864903 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.464771423 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.455740702 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.45527137 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.455628489 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.455850375 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.472575009 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.459086384 seconds)
  done (took 155.651275925 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.464540362 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.086233529 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.482963771 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.608586984 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.486846987 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.461780817 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.606191658 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.526566229 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.486105016 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.462470772 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.462879325 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.795023092 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.465983838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.029452859 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.677730466 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.629071312 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.030257974 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.484171213 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.462936092 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.462896524 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.61035937 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.469715486 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.808129801 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.094364317 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.485618828 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.090841121 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.449829964 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.466473561 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.463455545 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.088856351 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.482332021 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.797298891 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.549298027 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.532101889 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.141519394 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060060923 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.050202686 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.627651262 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.463721708 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.464628013 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.463676253 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.448477736 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112641799 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493429203 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.465686894 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.077269962 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.485767621 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.468265363 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.472290999 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.464841704 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.532522679 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.553433085 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.822642608 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.096379457 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.568207072 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47817099 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.609581014 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.849832644 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.468070412 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.034593737 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.449207525 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.095945687 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.487649477 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.448950076 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.468003563 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471405497 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.632226769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.611857068 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.037026063 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.486049859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035982203 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.651413177 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.466139147 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.466260421 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.469994781 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.099290137 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.055714972 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.650100831 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.615764651 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.685462025 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.456154379 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.466256272 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.452081657 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.552069543 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.467424617 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.097385448 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.057057106 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.487855207 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.470074931 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.470060081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.471137046 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.665791972 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.119791413 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.57226475 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.026251586 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823182063 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.805873211 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.469669071 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.535247347 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.492975771 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.807567235 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.47042581 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.534037221 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.927880239 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.811823175 seconds)
  done (took 175.600916499 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.733101228 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.775641566 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.567593651 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.613959483 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.1066747 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.047098252 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.787145845 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.622000145 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.587238587 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.746344407 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.712303927 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.560047525 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.654488863 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.548525715 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.250090914 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.564954246 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.586501871 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.631622768 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591464447 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.562522331 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.156031578 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.769176442 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.653994069 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.466835831 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56783789 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.322562906 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.077145121 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.008085221 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.65968536 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.890206563 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.041944781 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.666653481 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.484173847 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.196557713 seconds)
  done (took 70.584126685 seconds)
done (took 732.234202581 seconds)
SAVING RESULT...
DONE!
