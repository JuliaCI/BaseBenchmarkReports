cset: moving following pidspec: 23401
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363692713 seconds)
loading group "string"... done (took 0.562435541 seconds)
loading group "linalg"... done (took 7.741924528 seconds)
loading group "parallel"... done (took 0.173090107 seconds)
loading group "find"... done (took 1.18286846 seconds)
loading group "tuple"... done (took 1.874725693 seconds)
loading group "dates"... done (took 1.271162772 seconds)
loading group "micro"... done (took 0.236404577 seconds)
loading group "io"... done (took 1.24149328 seconds)
loading group "scalar"... done (took 42.490833564 seconds)
loading group "sparse"... done (took 14.398945859 seconds)
loading group "broadcast"... done (took 1.104127446 seconds)
loading group "union"... done (took 15.077584071 seconds)
loading group "simd"... done (took 5.179155993 seconds)
loading group "random"... done (took 10.43752829 seconds)
loading group "problem"... done (took 2.10403109 seconds)
loading group "array"... done (took 24.788431788 seconds)
loading group "misc"... done (took 2.221195923 seconds)
loading group "sort"... done (took 3.863834327 seconds)
loading group "collection"... done (took 20.9606393 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576793316 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147386081 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153378332 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.132582324 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.212126534 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16262703 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161729519 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100773884 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.99400909 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176638535 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156407301 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.530658341 seconds)
done (took 5.278068511 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.261223169 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094801055 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107091263 seconds)
  done (took 0.923944807 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078421405 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147319227 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097207935 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079643345 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098499366 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079971679 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097285615 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077940552 seconds)
  done (took 1.401045385 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086769917 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098926439 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082931025 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099142986 seconds)
  done (took 1.091410022 seconds)
done (took 4.485076303 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733254862 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.290983722 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204143868 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463342522 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203063849 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222716708 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.735306697 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.378930774 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.260976492 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100826401 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.147561694 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394180066 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141227186 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.739886249 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089749395 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128114115 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.202161519 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.516922092 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08277974 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112850784 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119364235 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.146845325 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.133867104 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093895168 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.19134262 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082030775 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197775079 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111310623 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080695723 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281748397 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203405102 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759349529 seconds)
  done (took 11.31128931 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112034529 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137497357 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100855416 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.141211237 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138887603 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103567276 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085780196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.099925646 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125661626 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181229076 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.135676491 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124305017 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098564761 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084401812 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119155827 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251218797 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123920356 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101550108 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104106861 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090162582 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142143383 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116982851 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112101004 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095869506 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17146397 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.227510416 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114314462 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129908448 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.100069743 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115360184 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145867706 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146332785 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097305782 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082427552 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176860604 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127957385 seconds)
  done (took 5.297718907 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.095208075 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.19846412 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126267104 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175549555 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082902684 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146869791 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096619212 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115871121 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260129251 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.201738289 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.493743561 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.144935693 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100129688 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10143661 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085284079 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101257951 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.624378428 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12638349 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149813059 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118483857 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105789749 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087247573 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.728536114 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099046451 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087036931 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100616609 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068280088 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16646341 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100999586 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.148991685 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105875758 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105644152 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137608812 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200773444 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130579616 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120612728 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100070659 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080133814 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.197858062 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091836354 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.100330598 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105698408 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138783237 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.139447835 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100041024 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084870565 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.217137886 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083061372 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11767523 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.975349674 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.185045642 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124599151 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102447866 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.317475999 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100807013 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101707647 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095987453 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281571253 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193141734 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.102172679 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081304284 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100472356 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083285362 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.755574355 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083569678 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.123607553 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085631977 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.111287592 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085727964 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100514829 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.107655912 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089853926 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118669511 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084085371 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103000321 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081546277 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.100196132 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082618717 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.099466141 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109657042 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.22559298 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081796894 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.101582017 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079293181 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120857481 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130843425 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086074523 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098917861 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133809394 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081124415 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.126568591 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103452319 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083284561 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.139576754 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101664395 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095003484 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104562094 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147941698 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.100247883 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.153838918 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081876248 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095795939 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111299147 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.105795063 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134983982 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118507686 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101279955 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.173263849 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081710451 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.097716543 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082794136 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098969555 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084470506 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.102860189 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09498446 seconds)
  done (took 24.418343789 seconds)
done (took 42.843411733 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.337665747 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109608413 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109411044 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109328062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105543168 seconds)
  done (took 1.571222422 seconds)
done (took 2.345956542 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.300469911 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.182892113 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100676159 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.174881615 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.097596347 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172870302 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166809876 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097030209 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.231076272 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098689935 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168493063 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078079315 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098948978 seconds)
  done (took 2.768797767 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096547824 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121827963 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086181582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114603224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079230957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115848105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094738659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120924078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114155655 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087207107 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098011503 seconds)
  done (took 1.899227852 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095321303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116966777 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084656416 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114182468 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079364214 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114561208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094513884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121617138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113585443 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089042703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097771435 seconds)
  done (took 1.887629023 seconds)
done (took 7.318284576 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093964829 seconds)
  done (took 0.855832899 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.970841039 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.931732096 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114950683 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.153512618 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330958582 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.177481625 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484824173 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129799707 seconds)
  done (took 11.278018814 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.119225707 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.118907688 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.107680841 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089325111 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.106267835 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088209712 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.103398317 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104265385 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086525443 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106502872 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084966043 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103836678 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105156176 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085923852 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103450918 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087832682 seconds)
  done (took 2.436123878 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1224872 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12075498 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.111355491 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.112587721 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088570196 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110307539 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.110014167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090978838 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106133691 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107813377 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092650534 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11033569 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106555274 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082735409 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110087094 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11175414 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089245814 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110654613 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110720952 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092759982 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.111498496 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099044906 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089461408 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110501543 seconds)
  done (took 3.396587949 seconds)
done (took 18.736796403 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16259031 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112935519 seconds)
  done (took 1.047920784 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097027619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117791428 seconds)
  done (took 0.988418168 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098297779 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100494027 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.126494842 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.114737172 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083124131 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.101318176 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123134831 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083298184 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101557811 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082347973 seconds)
  done (took 1.792621113 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084896315 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.113192796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.105207586 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099023048 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109770291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098248308 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.092154852 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.10383573 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.114798174 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079590251 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106646977 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118658531 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088629262 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119989733 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.109938042 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08497336 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.107164478 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102781476 seconds)
  done (took 2.623848239 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082243314 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100593828 seconds)
  done (took 0.963438218 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083941458 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098220415 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083451732 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101440995 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098452188 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079830934 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.097687515 seconds)
  done (took 1.42214887 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500718282 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140687234 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270063532 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105800059 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106244387 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.3117446 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.103371731 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.087033791 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108603959 seconds)
  done (took 2.578565103 seconds)
done (took 12.196279833 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095780871 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118900549 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116396009 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.474112089 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.11034921 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.10352204 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.150835981 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259117214 seconds)
done (took 2.218458735 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.146223194 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61510392 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.442738205 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.240874947 seconds)
  done (took 2.087766177 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.410861649 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.102553395 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086693101 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085714 seconds)
  done (took 1.478390332 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081281451 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102665589 seconds)
  done (took 0.976137309 seconds)
done (took 5.483658334 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082951537 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13512604 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.082230029 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101634153 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082873776 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.101223726 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079170594 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.103803002 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082377108 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.101595465 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.099331287 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083052495 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0978804 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082077887 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.09769757 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083640662 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.097988173 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080860522 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097978762 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083998122 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10155965 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080422535 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09827924 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083011916 seconds)
  done (took 3.044496077 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102360053 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.103027259 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107050355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089957019 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10666695 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087923474 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107188025 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101563885 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089553718 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104571279 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103796018 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.088790658 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104645355 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087364113 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104148089 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.106008071 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0899562 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102303576 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084858755 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.106502537 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106569157 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084389142 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10672974 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088385759 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.107132035 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106126195 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084730746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102840192 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106807447 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088672317 seconds)
  done (took 3.75468128 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087885256 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09793276 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081799885 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105711874 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.0816269 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101625904 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081170807 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100240384 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081701923 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.100175652 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082017319 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.101120268 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080661557 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100840939 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.081276921 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.10485305 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117066362 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082280625 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099641709 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082389261 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102935309 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081810356 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100670158 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080147909 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0994341 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080177173 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09973279 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081023036 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101014619 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082245759 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103573457 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084026704 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.100795436 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087241485 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103504814 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079961906 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105120299 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079902955 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100682972 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.098895582 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081754052 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098964258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082093924 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105731533 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082384044 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.102157971 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081973633 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.101977573 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081773169 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.104565194 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080940598 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.10033812 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082703331 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101737349 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.102445789 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081981774 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101014519 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.082259934 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100141706 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.081885695 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099865045 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081867017 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101843202 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082227107 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116574373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087602809 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.100321237 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082712782 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.101828701 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083315359 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.102879527 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.114234923 seconds)
  done (took 7.499713887 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084182864 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111240734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083360897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102903811 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079024769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102831844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104191816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083329876 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101849492 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088514699 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101552555 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082564946 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10288694 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112745417 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083578688 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101669782 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088959939 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099140105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081426509 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10551234 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082314802 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10637395 seconds)
  done (took 2.88840783 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214005445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112610689 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.149038408 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112203371 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085989155 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112647283 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10689461 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090634871 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108015824 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087358702 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106345802 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.223272965 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086034869 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105759825 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105358006 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089627278 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108563367 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087625169 seconds)
  done (took 2.895148866 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095592007 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.104004425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105699799 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104857178 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103739588 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087637441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109717148 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112875977 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087546668 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103548883 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09390433 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106530058 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.106314463 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085094833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106537951 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084545142 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105958216 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08414229 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113231727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109872647 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107736522 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095932538 seconds)
  done (took 3.021716465 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099660433 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105985241 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123694462 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087887991 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.101001411 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082972705 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111640861 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084312831 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112944002 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105259656 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085643579 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102977309 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09122807 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104597112 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.109049113 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085103846 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106523508 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084091522 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106412326 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079528974 seconds)
  done (took 2.779282188 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103828109 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106064855 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104048263 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095829184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106674938 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086055733 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11533545 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106031465 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084997544 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130647426 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105414247 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085451122 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115117388 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111891831 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104103967 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09708888 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115040743 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114424094 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086258625 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106546466 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131689556 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08631989 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114806562 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105845706 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085485548 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106271722 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106355068 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092238612 seconds)
  done (took 3.719690717 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085128332 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103323676 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082288736 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10155064 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.083061297 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101736117 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082513778 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.103303957 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085075339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101194363 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084877479 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.104421549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084869883 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.104081499 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08472676 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.104050217 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085091338 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.102169847 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081875975 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102095934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084262558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104197889 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083973509 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102018951 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081599907 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.104495982 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081846582 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102622072 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083773676 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102394017 seconds)
  done (took 3.611560917 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.0921063 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111526043 seconds)
  done (took 1.011887245 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081922082 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119953191 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082487293 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109594537 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089948608 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.107002342 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113691373 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090009164 seconds)
  done (took 1.604634028 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099844821 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.117121306 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087036682 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.120242486 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115343011 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.101687891 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.178168445 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.108665539 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.110512977 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084272669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.119564675 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084445901 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111190211 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084935651 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.112086324 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091205241 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103650033 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111259965 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.089600297 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103369544 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086344915 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114282296 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091510372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102940349 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.106798264 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096413261 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119438599 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085287923 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110139438 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113509305 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091492259 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099378761 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.085436213 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.107460275 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082789799 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116330071 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122778035 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087693107 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11503772 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105231641 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098482363 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.10083025 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090296601 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112053953 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115887928 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086943058 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.106744675 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080958968 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103353553 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087816993 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.101743978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085310079 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.10102363 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092517386 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.10976169 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116874701 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084417813 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.107176643 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088490496 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.109605411 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091758527 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10912998 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107536513 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085958422 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113253053 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090753114 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116543785 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09978512 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.080519412 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103515633 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097522041 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.130294716 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.111737602 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088240229 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106066255 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083849902 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10913779 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086372928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11309009 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.1114006 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086262738 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113306819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093364502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106794017 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.106737363 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094523303 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.103814365 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088059532 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.103816145 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123589303 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084870961 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103414607 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084260288 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.117780081 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089064781 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.1063073 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082900076 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115208788 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.099545586 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087813166 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106834804 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086716116 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118434113 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112239645 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093341461 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116820495 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113163833 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087089981 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109191927 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083596865 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107428354 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088313768 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114125194 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079353204 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109774934 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.086273042 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.107363818 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115728182 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08415004 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.106349684 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093518675 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.112612208 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102997979 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08340912 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.107891947 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086533574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110064163 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093926526 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.105710216 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081071366 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.103406642 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.108707682 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086725363 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.110048634 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092080895 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109960359 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079606043 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10588928 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.111877088 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096714043 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.107993649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086044885 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.113796414 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.106893897 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085377899 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113954606 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088528326 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.105893928 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091855956 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.107501541 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080370435 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111610471 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10824905 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.085024481 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109862942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090976432 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.109564899 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.106952719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086261462 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112911281 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087413308 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.105500612 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085656004 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.105659156 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.116784186 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088852802 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.10115072 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.083430843 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.114581048 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083218648 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.10659836 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084148297 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10981479 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10724587 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085051162 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.105786616 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08836484 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120265276 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11140136 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088402839 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111971402 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.099187096 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10783026 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087673695 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.106297179 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107199118 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087499348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.116713183 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.092039185 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112403604 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108719545 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083873629 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112904721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094746145 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.106809836 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083921766 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.107358998 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109554421 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094261967 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.11033627 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088263115 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105819688 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086595094 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11142686 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108929496 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.087759129 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106286812 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092985102 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.107488187 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11328331 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088881309 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117880461 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08964834 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.102916054 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089877294 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105567126 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.113108708 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.082330854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.104573242 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085434116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.108442049 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085573275 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110078291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079925555 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115313785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114227261 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087756756 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.105484521 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087292937 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114241388 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088213888 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11228673 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089991323 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114795195 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118326408 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086789395 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110850568 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098051087 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.108063965 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100240503 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093351177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.105148091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086001515 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.105742082 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083825634 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110948243 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117642062 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094988991 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.10135102 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.089642353 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.105785271 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08701923 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.10309095 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090679867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110620984 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107512273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094846601 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108720508 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087707742 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111777309 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085609438 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108688449 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.108380631 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091132137 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.110994028 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089258225 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.107316023 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090144884 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.1071384 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084401044 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110607316 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.108203981 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087555386 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113759118 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086372399 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108459173 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0888597 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.109547757 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107119031 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087575888 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.106338148 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090858518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108335336 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08718295 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.110679346 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082495866 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117071239 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086377901 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11668969 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107246907 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083547291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113918036 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08863362 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114006244 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108250687 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.088812731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108888607 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086700516 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.11103403 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093841708 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106081168 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119516925 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096215845 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108445822 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089391265 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.108998157 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088811065 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107482531 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106976317 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.089945652 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108040091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08756149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.11375857 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089764982 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.108858426 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088495604 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.110032211 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.1071633 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089502552 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101762863 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086963628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106960467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.088230748 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119504055 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107573282 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091020282 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106074473 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088411859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.107136421 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08346651 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117404104 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118286364 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088315228 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116086044 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086327584 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110352041 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119698548 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.081656998 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.106237984 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085129497 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10560271 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094944257 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.111094122 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.106009553 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109123482 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105814317 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085388627 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108984763 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085976636 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102904527 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.085318123 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112005227 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089812063 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107623989 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087422963 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.112226062 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108839654 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098568987 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.108233161 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087550593 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109996115 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083517717 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.108023759 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.105261025 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091575184 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108688939 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085284009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105287477 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087568976 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109535549 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088690293 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.109525418 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088392677 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116061674 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107864954 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091096936 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112552824 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082325579 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.112325393 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086807558 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.109118433 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.106192359 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092161717 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111182779 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088299207 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118991045 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086814849 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110351675 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107923599 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.085530011 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108540831 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.088054748 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108861788 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086092989 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110331874 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095070863 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107190714 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111484973 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088581938 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108013524 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095155777 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.110615488 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09041195 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117671358 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.11229434 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.089330024 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117581318 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091244748 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112749415 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109683339 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089727307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114937088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.08658318 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115953492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.087780778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110559883 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.109992775 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.086279807 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108236111 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087241506 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108139002 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093950081 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.110795454 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086035498 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108207972 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084560252 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110678365 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111787333 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095863179 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111401668 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090338693 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10422199 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084407894 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111734753 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105290787 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090438939 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.11163953 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094477526 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111528484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088289536 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.108182347 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.118739796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09467785 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112552186 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.085548814 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113129879 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088208304 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.112621425 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109205015 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090017406 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110106016 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092155054 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.110718066 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08768085 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117452376 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091319102 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111169284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10980372 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088463861 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.10881128 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083294791 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.110180372 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089545861 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116368448 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110803361 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088983844 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120616534 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087648003 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109312336 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091805472 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109878918 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112499541 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084431436 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.109759467 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089723367 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111304865 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.083425164 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.10877935 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084877307 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112304076 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086561225 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104335728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120289906 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09821954 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113110923 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085917986 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108802157 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082811067 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.106363329 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107201516 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090318315 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.110880013 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099430526 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.109779898 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086297831 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.105123604 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08719725 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113432736 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112684348 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.086028281 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104312006 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086635743 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.112779575 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093652642 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109839548 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087297367 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113291299 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.111168622 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086792469 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112683973 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0850721 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.113524399 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123014444 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089685561 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110173793 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095564299 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117985181 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088544691 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105510936 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.109657157 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092531427 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.110187266 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088789298 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.111414296 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125919907 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091987334 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.109123991 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087735144 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112049157 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087232042 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119053631 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109327443 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.091029329 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114841751 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090603514 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120487601 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089738756 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.120106568 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1122706 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092042143 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109491915 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088019376 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108384329 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085708678 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112040347 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.109816363 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094238256 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118556717 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08622812 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122511642 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119667812 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092950282 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.106159303 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086548354 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109831406 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082981785 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111764297 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085624409 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.109699708 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.10680854 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087902789 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.11250941 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094774582 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110843712 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089783327 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.110323771 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082394149 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.112784117 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090689473 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110963898 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.105835906 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.08997191 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109774552 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092516542 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114265704 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.088408909 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112508703 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088885909 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11221896 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.10421107 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096483359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108085119 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091246422 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.109384628 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088751286 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.112156086 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091156327 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117616788 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.112259631 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091132931 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.123328369 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089962362 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.109280394 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.106463247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095062468 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107900296 seconds)
  done (took 61.158153655 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153536742 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085669815 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105980347 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083256973 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120356018 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106162987 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085294991 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106378453 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08546418 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108898426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082875171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106761804 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11492433 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131015057 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098670656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111436594 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082752103 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108338131 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105494275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085655569 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116988902 seconds)
  done (took 3.050473207 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.110073508 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.125666643 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.123046847 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126112757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094717536 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.123050434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.121957086 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122336392 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105022614 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120196382 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125121469 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122216849 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096244255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.119218843 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117238511 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09808065 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126226496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.117686537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122762276 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100943815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121616398 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12209586 seconds)
  done (took 3.423085452 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088649512 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109309533 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090412375 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.104708829 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.088579709 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.104969822 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092060988 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.108486533 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091400247 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.110216308 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086152488 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.110032837 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.111177604 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.084212303 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.109085274 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086667744 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.161092967 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.115402398 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087297421 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.112910458 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.082931343 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.114062448 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.104687974 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.084620021 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.109462745 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.093164854 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.111799245 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085916911 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.111614383 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086003277 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.111867927 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085078455 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.112982958 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.109720804 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087721216 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.108842293 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089181591 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109836814 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084183336 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.108346695 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089257714 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.106407723 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089885803 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112914782 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085880336 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.108503973 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090114129 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.111508213 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.104264871 seconds)
  done (took 5.809451172 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107999007 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.169897394 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090706428 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152222422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129438556 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.121016016 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.09271003 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151165726 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.110386016 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086713178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.130591266 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.128109796 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.111444614 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093491437 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.118553589 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.110409574 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090965219 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11032025 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.115217259 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089916226 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.116094336 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.094735466 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.128209383 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.125806003 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.115903021 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087946944 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11109193 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.115105205 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102995261 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116424459 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.116224798 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094635471 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128059189 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.118196504 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086664272 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.114778594 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.130012662 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.110336876 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09291608 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108890783 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091737276 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.117193756 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.1181909 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106034039 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.11292022 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.116633235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088847475 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.109109979 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125335079 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091903232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.120822907 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127148513 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115121298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.090209642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.116365687 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.127143418 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089196615 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.11025318 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091678997 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.1248628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108835952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092322511 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127768661 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.113711239 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.118892227 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104837299 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.118154156 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.115691278 seconds)
  done (took 8.647701597 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09775212 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.118997645 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127779202 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128392889 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096019489 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.119393346 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.118370415 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.096049624 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118778038 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123544095 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117207901 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141177948 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.091534303 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.122732017 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11956494 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09687353 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119383428 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118353799 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096458235 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119229247 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.118756488 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127739855 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096020186 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128642433 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.149052084 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.113247946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095799253 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119116367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128954153 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117900296 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129510892 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096355317 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118826374 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128446241 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130310202 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095541739 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111397328 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117694342 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096852086 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119337232 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112875904 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105005113 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118932539 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.113546204 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095305476 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119431697 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128541459 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.131138699 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120996036 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101583351 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.120541916 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128365275 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118240497 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096248944 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.127893697 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.156176262 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127631681 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12793425 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118023382 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104680507 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128738155 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135656764 seconds)
  done (took 8.141813927 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110601145 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122647279 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.126037742 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.106372308 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089147963 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11664637 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086910394 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.110330613 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.121755615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099798129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125016167 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116939388 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096143054 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1250156 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117673936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119638841 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093569206 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117314233 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122957848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11498521 seconds)
  done (took 3.1199978 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.098206085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.132136755 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089063719 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120257778 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.116301907 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095715607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.115928516 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114852284 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091081759 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115643406 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100511017 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.124644251 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113454378 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096283559 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125159361 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11929891 seconds)
  done (took 2.649220782 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101346463 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125494449 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128801424 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08862357 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.113605488 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087329512 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113936888 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.108119673 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086420317 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.129164481 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088559196 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.116424781 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.112524254 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.088449668 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109361718 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092869361 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109292918 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086129543 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112671657 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127893417 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101547047 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.11197486 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.112958484 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092304924 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.113476157 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094936312 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.114234928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110441146 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088127021 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.112894403 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090884637 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.121351995 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108600544 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088792665 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.110130675 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087782136 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112862032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089625726 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.117084206 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.111968479 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0888473 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.112194467 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090095931 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.114975023 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084951926 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.113669671 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.107694419 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097393482 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.11065984 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089651854 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.113912294 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091634016 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.116399181 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.124012611 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093028747 seconds)
  done (took 6.650659199 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103255712 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117110904 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084706696 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111345504 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092911139 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.11610581 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.115484785 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094563547 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114789007 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087447102 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115544158 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094299076 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115227945 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116432994 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092342953 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116983199 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085770362 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115477766 seconds)
  done (took 2.780548961 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09431972 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.113002547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097207013 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11403821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088893475 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116919126 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085250067 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.112720071 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110896576 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.091128507 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11287288 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.092850338 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11206162 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091597419 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114273401 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089854751 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.116530825 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110906128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092110318 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108605447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093080106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11207391 seconds)
  done (took 3.158846462 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121672496 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.133774081 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097783483 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.245353122 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.109053865 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.141244285 seconds)
  done (took 1.740270067 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111724376 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123662371 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113490024 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11315233 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123768462 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091363208 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116526575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115715616 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125343894 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106693504 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116290017 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126352479 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124568308 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101336614 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122401665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122576452 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114731737 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093336435 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11392344 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135790972 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092130368 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125337321 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116163745 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091851779 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116111472 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125219973 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124732213 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128675099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093492369 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126226983 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122071339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093354704 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126171077 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129923473 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115632231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104046904 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115940879 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136817117 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120916413 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102239187 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118281883 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122305318 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102392356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122708694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125583292 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116069042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098302039 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116301226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115651722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143784145 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098704802 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125181549 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123569832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126258169 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102499677 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.165910712 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107705535 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125111382 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123125273 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129896489 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124803266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100025494 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125814745 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131497657 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123753933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101224152 seconds)
  done (took 8.632209564 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105256906 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134499929 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116761517 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129918548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102810704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116410693 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11540542 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092998635 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116683486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114210441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160406548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094062058 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126425833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126426206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091814541 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116306834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116589542 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124034184 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091982791 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143334627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116106979 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125554056 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124715285 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102816081 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130144683 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122420977 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1147683 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093494187 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116848976 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114155531 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098431014 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116656167 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12543637 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091396963 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125637216 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11689304 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09199252 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122212623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117098688 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122293937 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102747349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136939128 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116896099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115202381 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107356939 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116672202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115904896 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091796593 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117458944 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114971561 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107940993 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130287692 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130447222 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126137807 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11694091 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093216352 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117172132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115673386 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093610591 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124498448 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125863597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09233397 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142261651 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117893505 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116910387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126158706 seconds)
  done (took 8.540955627 seconds)
done (took 164.12417363 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.234126912 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.221088939 seconds)
  done (took 1.347678675 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089600944 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144317068 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101437597 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.209023536 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08601019 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.157896839 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147803981 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098360023 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.11067438 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089371949 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116034544 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092242203 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.220230361 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08611396 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.111326894 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11252736 seconds)
  done (took 2.877362855 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.115596906 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.266261604 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.131571564 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.113066715 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09670575 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117823141 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089734371 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119990486 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095259111 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11311354 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093242068 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.115594203 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08976442 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.11581797 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094057849 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.117752797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111917527 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094466392 seconds)
  done (took 2.989101779 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11531319 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165446921 seconds)
  done (took 1.18661019 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.257099894 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165290333 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.23613336 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.47931481 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277272205 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.372501401 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.208774677 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.218372977 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.172961157 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.215611669 seconds)
  done (took 3.505883231 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123786823 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.189689338 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.333097064 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.165626852 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112733479 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136938695 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166786917 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140292442 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.131756679 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106602406 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.134095682 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.127288366 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147053704 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099584667 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.124023167 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.125687928 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127444703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.123183161 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.122847941 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101696247 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147989627 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090022113 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.12457837 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.12243477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103547859 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128328633 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.114938218 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090689067 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125446734 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098575916 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.122556181 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135180483 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127144808 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164292363 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.13172099 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166865804 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126672455 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.097046186 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.123839508 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095752582 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127499545 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127601743 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133836015 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103616556 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114545131 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.10329667 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.114814578 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089868133 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.123365438 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127288766 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099746669 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.122888503 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164530758 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129351895 seconds)
  done (took 7.870403988 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.807984249 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.165867094 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096542932 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.911298809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139002786 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104436345 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.788250792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112140575 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256355531 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.767140164 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135120432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123577907 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207865161 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260826031 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.993340068 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291863381 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646909388 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128917492 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15509163 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15477019 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119520549 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115865281 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.133298748 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431810174 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118385091 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090445417 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119949299 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120961223 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16141933 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126655883 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093905109 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202248289 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250298522 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205625433 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094732276 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117135911 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094124537 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.201313058 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272345424 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196545382 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182442374 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110210447 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092174485 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126337459 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134349524 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090489696 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.19307174 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183082376 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1771285 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120684961 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125161867 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104351924 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129650391 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172451957 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.13024009 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.32925869 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.323876409 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092922014 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127768659 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128894593 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240888203 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125014915 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226780085 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140964096 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19209432 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.114125494 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.8150809 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.171655872 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112883032 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097003509 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121712213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117750564 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099950521 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168134686 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392476552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125980637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115506271 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090868573 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22629254 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103308153 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113968762 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163603617 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118500365 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123470921 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103285599 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124388658 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17182974 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252506896 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.10188545 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121364934 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117957367 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.104383428 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12041591 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21484611 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222199952 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164663349 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233709283 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100307838 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187608873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171034585 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121615573 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174608889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121950349 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102436137 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124831538 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219975332 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146576148 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125775285 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094776641 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120739897 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149218576 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128853873 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097315528 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195330481 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459455672 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169537394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111731325 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128918122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09833692 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185160225 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096901608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261018132 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12290913 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170378437 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120623163 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088014318 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122064718 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.166151655 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123826978 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120896323 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101264996 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121182226 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236897604 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217616043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121836106 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223329729 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18601001 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119926106 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177086879 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123056873 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171107962 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121386865 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098682542 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119273943 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785953419 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124957359 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099375275 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118048547 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192193508 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089593912 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127237181 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126297596 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089450458 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778113455 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130153135 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.123028299 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103384152 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120265979 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122872662 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097511671 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118054041 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165918033 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230411677 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122837352 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099430013 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.129325168 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164805497 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119764717 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.128332653 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125467448 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106217602 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124914395 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.117375594 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105520054 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193416412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.168105733 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224626444 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578303446 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115430165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.129414475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209079331 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118573871 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293154683 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119980291 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205174045 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187719599 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099974289 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314107022 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164813727 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189232971 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129290098 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173356479 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112355729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1195442 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168983875 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112369977 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097080309 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163925129 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12751904 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124828812 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964700954 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090432356 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247997135 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089642479 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172572357 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11910896 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122285902 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296853828 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091301564 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130283096 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166233129 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117835745 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127421686 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706201996 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127808342 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100306951 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120921266 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224964035 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164955697 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122385027 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121325128 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098517428 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.186294523 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209301454 seconds)
  done (took 44.589052395 seconds)
done (took 65.264434707 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284849488 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226609194 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280384314 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174236366 seconds)
  done (took 1.978665046 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179522851 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16216371 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.129153182 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.117392915 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.16127255 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090215921 seconds)
  done (took 1.773709042 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.369109816 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282094812 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248989654 seconds)
  done (took 1.842310885 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.303862259 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.262146773 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.495543323 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.338576268 seconds)
  done (took 2.466276077 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.221488321 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.143119071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.120822139 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11061148 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.214773526 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.260827491 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152661599 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.211335278 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.124846761 seconds)
  done (took 2.544524533 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.179553259 seconds)
done (took 11.72311067 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247837909 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.184500435 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.231766419 seconds)
    (4/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.272973398 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.290845995 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.233334927 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.253511662 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.160879392 seconds)
    (9/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.159629603 seconds)
    (10/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.225808544 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 0.210020144 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10566303 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.100617879 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103596044 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.129837807 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.215786546 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107188845 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.149674328 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.181546176 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.272306054 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.149619137 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.227363551 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110353543 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.151376143 seconds)
    (25/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.202031073 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.225241967 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.16042313 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.227609489 seconds)
    (29/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116419152 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.148961037 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.125331773 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.131259582 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.225362688 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126287431 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.246931663 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.104172011 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.126003802 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098429832 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117676325 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201749424 seconds)
    (41/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.096706812 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178733303 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.207474128 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.262590698 seconds)
    (45/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.224105649 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.098829055 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.127502672 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.12614199 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.101180442 seconds)
    (50/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09982805 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120000738 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.12331701 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.125895718 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.084320614 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109184066 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093674535 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.195966516 seconds)
    (58/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.072528691 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.120892124 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161415135 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.171955191 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104212396 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233472294 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.159046961 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146454349 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.0995539 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.197170875 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.215422661 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104434464 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.195772432 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.209565222 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 0.09239593 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.12485781 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.073464382 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.182353024 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.159068509 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094132777 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.19495688 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125124214 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096761381 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.146526799 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.201862502 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155040948 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.195242579 seconds)
    (85/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.104379782 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.201720083 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146981782 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072624403 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094475097 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072141904 seconds)
    (91/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.144886286 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072962105 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.099409698 seconds)
    (94/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.083256098 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.12428146 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.177979556 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.187126764 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.128024331 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.160200791 seconds)
    (100/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203348024 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.100298716 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.081943329 seconds)
    (103/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122023037 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124138833 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.150667801 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.143742265 seconds)
    (107/309) benchmarking ("sort", Bool, false)...
    done (took 0.192819959 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09244766 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.128394275 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151229272 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.101674223 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129874867 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.12105222 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.125124715 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116588853 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127170236 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.129674497 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.105994059 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.308313142 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112170687 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.070171453 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11967434 seconds)
    (123/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.124852233 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074151628 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100941129 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127962152 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.073007146 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.185374273 seconds)
    (129/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.082413752 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.10097877 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.073628055 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18684076 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092950715 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.119658435 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091175582 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.127919968 seconds)
    (137/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.128723817 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118773513 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.142450395 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119047172 seconds)
    (141/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.187363822 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066571522 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 0.248660546 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095458333 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11366202 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090222136 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.094148733 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.068505521 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.093551869 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.139364623 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.128880801 seconds)
    (152/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120770067 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.196226505 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.14626174 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.147094932 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089365496 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.187502493 seconds)
    (158/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121362057 seconds)
    (159/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092228205 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121636297 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196967943 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.10111832 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.15659854 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101756436 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.166991295 seconds)
    (166/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124274298 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.175688408 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.093933345 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092946335 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.152035936 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.133963454 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.093878863 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174600858 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070803013 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096084235 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.095115312 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112361672 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122217907 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.186445149 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.09062121 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121243098 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.126013665 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121759508 seconds)
    (184/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06980903 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.137604137 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.175045868 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15818477 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111769253 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068460642 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.130595178 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.175673127 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.121918481 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.154602403 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113977187 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.193268994 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119094468 seconds)
    (197/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090157505 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14758589 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152210539 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.094139121 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067369889 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120686838 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095165984 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136971829 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068341241 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112713948 seconds)
    (207/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068788159 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066862305 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.227533844 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131807624 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140354715 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088767832 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115509723 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093977316 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.106102731 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108894394 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.092291234 seconds)
    (218/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068746446 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085456857 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126878224 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078754332 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.095367859 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067637331 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.123784404 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116362898 seconds)
    (226/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.096936472 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.06837062 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.197899266 seconds)
    (229/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.09429546 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11938165 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.187542927 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103000657 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.216085022 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116488172 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094026124 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.114560934 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086484751 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.094232953 seconds)
    (239/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069080542 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086711848 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.162399748 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 0.179371277 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.078034982 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09606546 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.067389579 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.141630055 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087551352 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118317946 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091212195 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128121521 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077698934 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.129392881 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097263952 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.139390902 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114441569 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087865999 seconds)
    (257/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185238552 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088574801 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.177001319 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.133898691 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073445686 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094006399 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.122961565 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.068047194 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116247318 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.071588075 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.124257556 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068351476 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123930574 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089129943 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120166014 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.109814167 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113108669 seconds)
    (274/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.068093711 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.117117699 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071549901 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067284343 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.135300906 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067936409 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.113052899 seconds)
    (281/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094962902 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138712976 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06935669 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.094056875 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086298487 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.113508154 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098519806 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.122225983 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.140958629 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090190025 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112099028 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088230357 seconds)
    (293/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.104337757 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115122551 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.124486654 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069405852 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.122792919 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090202775 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.124020667 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.130641555 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098609204 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 0.150030334 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115696828 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091708178 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116944164 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.067446765 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.13305025 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112834331 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088639949 seconds)
  done (took 41.471847636 seconds)
done (took 42.412345704 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104885855 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154819569 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096268523 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138589052 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128538184 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09212235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.121470411 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09854174 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126557808 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.130963366 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09874368 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095722249 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096825683 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122684468 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096983265 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142976768 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.130670531 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094296157 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121480193 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085903296 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.122263837 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08621245 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115254707 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07048515 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125256264 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094153849 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119913208 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121551789 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088617119 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112420219 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092043642 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.120345417 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087460615 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127545728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093429849 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.122223163 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096703021 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123612404 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.090638354 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115138822 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120129269 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08902774 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.1219261 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096670858 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.118842014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093729042 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.122424261 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099579841 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.143504311 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123355417 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101460813 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.128618126 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096722158 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.121159404 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090883166 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124326407 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092319499 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14484763 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.127934017 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093258105 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.123747448 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094897196 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.12004458 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09460616 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.122747728 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.123261454 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.09931761 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119159415 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097054522 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118917159 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087290002 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.12252563 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090813278 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11433196 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09662311 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124586844 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112006595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096139322 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.119136154 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092894738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.112588868 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091365453 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.117537064 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094424286 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115256167 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072681684 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.121093294 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094892707 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.115369184 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.097496591 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120102942 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094341078 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115588175 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099566182 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115979613 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091966769 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114653187 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088712615 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117396562 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090312271 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.113431916 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090035227 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123478564 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08842631 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119486619 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125336199 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088270093 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118841629 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087231799 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11224837 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101916095 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124258853 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087268192 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119488573 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088036809 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.123796227 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086838315 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113651456 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086532081 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.114803531 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092927609 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113407127 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116217462 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098532414 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127275356 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087592668 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116351881 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090662605 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.115536889 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093821131 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.113394513 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088554204 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.117698816 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079199596 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1214069 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089556659 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.123490306 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089796426 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.125427274 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090501318 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126580846 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092900364 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122021811 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092331154 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113416981 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074691935 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118750866 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091985955 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.117922621 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086650479 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116417138 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088311185 seconds)
done (took 17.355484754 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088678963 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.189866358 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.1554567 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148014389 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109628041 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115190882 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123559931 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119740276 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117439263 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145976481 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111226707 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13573061 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151312968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087334784 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11407018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093158866 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.118415028 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102342068 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.150838535 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136238607 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.168920774 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.090469859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.155350174 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140882698 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.126387974 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.109045293 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.117209125 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094651656 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122545869 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113231696 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135859601 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091582724 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.115488949 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13894277 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107245497 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.126471722 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089826841 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.125252623 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090611127 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.115077799 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14615711 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137117661 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094382977 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.121148572 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092432929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.117319701 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089781667 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123812622 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098482361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11948299 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130462184 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158666858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09444668 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127003868 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086827022 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125884885 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124080501 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090636576 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114275895 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091312561 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113709959 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091917759 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129270811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145174856 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092949545 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124613553 seconds)
  done (took 8.860401108 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106570895 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142094058 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105578098 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.152275118 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113499753 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090084286 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.118093019 seconds)
  done (took 1.838374016 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089543467 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136198849 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112585817 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141769942 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13594574 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112835286 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129088157 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088943029 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133793518 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.091274688 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1379271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156931863 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092492964 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12664619 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.142770803 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.093515436 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.146114271 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.090894483 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125248925 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117104828 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120769604 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138646571 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092679611 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115925528 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106048208 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.120213303 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165763944 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094978296 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117288989 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092092733 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114428968 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168390987 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103072384 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127526718 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088495421 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132956167 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130417564 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090261015 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131883526 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094235812 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130202904 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090749011 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118716021 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088843263 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12200253 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12883296 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093133793 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119391425 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094953421 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142512091 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08994298 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.1301639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090362796 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122692334 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094777061 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122772318 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12499019 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092569545 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136776459 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0913857 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13349043 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112166307 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136448029 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137354133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09297422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.131124338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106088527 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.125701307 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094496774 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125071264 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133987737 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089887234 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.121908419 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105672903 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125651127 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121072438 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.148553611 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124078783 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.106663277 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.121962749 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094675437 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.120878742 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.115034862 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124911431 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095005892 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129016038 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09835257 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.123435076 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093693603 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127841984 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092299201 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118248553 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119140644 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094575781 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121795231 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107463074 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117565432 seconds)
  done (took 12.275711972 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092387125 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.117610982 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09455977 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.120330033 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.093494165 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1184112 seconds)
  done (took 1.656722717 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11545217 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120139993 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110551579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126514815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159359871 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10612743 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133947778 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127392315 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109234548 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131616468 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131693272 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.107473958 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.145742776 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.127687898 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104311695 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126421827 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.134055369 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10553926 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133444201 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097147994 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143125294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125497662 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09712617 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135142346 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.124131315 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100748607 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.131233287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10335539 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130004495 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.128104847 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098454067 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.121104237 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095937634 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125157353 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132684457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096338121 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124368188 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.123092757 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104486304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120860206 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105606437 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126307072 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.131795649 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094612479 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126979399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124148294 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095298083 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.130146243 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103227152 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122470438 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.12313421 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096316833 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120039726 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093674252 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12398176 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127491448 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096809153 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.13305335 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09820175 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124483072 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120115447 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095916914 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12717889 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118830898 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105857798 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121572807 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095889549 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124861777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125124943 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098138032 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121730894 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095496141 seconds)
  done (took 9.488719122 seconds)
done (took 35.118433114 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.704640283 seconds)
  done (took 1.724229077 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.737425154 seconds)
  done (took 1.754054751 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.870223739 seconds)
  done (took 18.8890941 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.518805001 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.606054811 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.837152446 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.188028569 seconds)
  done (took 3.16993506 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.998726796 seconds)
  done (took 2.039773982 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.302293223 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262952598 seconds)
  done (took 1.585643955 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.804141006 seconds)
  done (took 1.835840939 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.38367725 seconds)
  done (took 2.409702706 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337326577 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187254882 seconds)
  done (took 1.560205117 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.559795382 seconds)
  done (took 1.595344769 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.101261392 seconds)
  done (took 8.141978016 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267721486 seconds)
  done (took 1.313095518 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309025167 seconds)
  done (took 1.342963335 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.722434026 seconds)
  done (took 4.761106299 seconds)
done (took 53.156540225 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.10245882 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129257575 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102926859 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126802179 seconds)
  done (took 1.490870435 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.103926931 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123065647 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100393558 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123806259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126665192 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.098115281 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124814171 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101634431 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124152921 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096593453 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123710275 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.12117784 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100561163 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125192528 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094172295 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126852467 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098885621 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124088578 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125931975 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097188811 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121328734 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098236192 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128016757 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095092811 seconds)
  done (took 3.745131191 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104917073 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121136183 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097511091 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120463775 seconds)
  done (took 1.493380976 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102064251 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144539372 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.141813666 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.102417029 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145424585 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.141232141 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094265624 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.119195994 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095004024 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127298105 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091203792 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151960467 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.141355622 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09944405 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129839554 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088728029 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119469506 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139433511 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101140866 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129462571 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093112118 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128255162 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090060134 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.142070084 seconds)
  done (took 3.900407572 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174397917 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.15114698 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141230527 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095707315 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163734646 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143369042 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089187721 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.1436256 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087835491 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133013585 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120642551 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134221521 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131322473 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088579161 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116816314 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08903698 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130781322 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130625397 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091672673 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.143884583 seconds)
  done (took 3.552470255 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103809791 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119272271 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091960043 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118378836 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099843838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.123614806 seconds)
  done (took 1.707663368 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096828493 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.121385122 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093862744 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118551084 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097300211 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116818296 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.09027023 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116591828 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090505779 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118043438 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090617494 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115380942 seconds)
  done (took 2.31711988 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.470125078 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094626404 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122935596 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11695801 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.100104489 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.117242423 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104205218 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.121149352 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142317671 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090665498 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117232816 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092914095 seconds)
  done (took 2.741618917 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239941753 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128454256 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291943862 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279462272 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160357906 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175078573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286117552 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165714057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.22863596 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161719634 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204498161 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228296463 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153938672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190506083 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140521833 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118935685 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230640635 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240809374 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128341898 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231572632 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201041307 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168175576 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180252254 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152932972 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142453752 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174633077 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123704871 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133613719 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211665683 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203931817 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192246272 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164799271 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14969773 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240259292 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257063979 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196705675 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290134576 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140001859 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173581637 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142685635 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269950477 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142221055 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236193486 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158267132 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105888668 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222414933 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170270114 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178126986 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.153373485 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143939095 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19742888 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244148948 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19393148 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142001641 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239045007 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16291672 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17223375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20423314 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25410108 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197934674 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20821313 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095397511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219002263 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195285611 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185466891 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170590539 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.210490773 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124119841 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223817608 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19043021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16754074 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216324615 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.192672057 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143222615 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173684957 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175650324 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173568089 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259012668 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178594443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.125260676 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173497031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151781516 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107114127 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.200648951 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126885439 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211893499 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150157321 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165021543 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217987289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161653366 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162008166 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231317593 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198687544 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151357685 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111739094 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131673311 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158597537 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219203356 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113984389 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1605733 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16259257 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133831115 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181060726 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.127733016 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176734551 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.119620019 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175216394 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184315652 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128152434 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16263933 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126817754 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15154794 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174358253 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227166386 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142877342 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106924862 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237886811 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17908149 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15681331 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184408397 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206922557 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145750651 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151577454 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20196865 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246444871 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142919996 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201995973 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15859645 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137609556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133906327 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180954216 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157419088 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165590751 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108938945 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211550576 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208450352 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.128536295 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111809084 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214646719 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134549249 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112703726 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166504277 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150141693 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141901347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149042676 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155342069 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187261938 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181195548 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157111763 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170161696 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15516429 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260374542 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1452548 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150520023 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123423075 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123941154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195431103 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228435127 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104672584 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23538149 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173774734 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234365469 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170833523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108413245 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178557802 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133187501 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092844501 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224624963 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169016579 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163282307 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197279238 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231566112 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183480967 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210319048 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174675335 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176064924 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165603226 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159276945 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111971613 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16044377 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167836476 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126413972 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146036098 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135519844 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121664496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14526461 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135740284 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19696605 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199588097 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192707532 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16255695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152951006 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182623774 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129442081 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17623348 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179804599 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149626575 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199857988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221989672 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187596816 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14538293 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203897513 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.123052581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098466041 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144930247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171063929 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137384987 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136418184 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170202034 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182178297 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182173702 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177652353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243134383 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173665959 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191157182 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125732269 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171417322 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188333867 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179388386 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191360542 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14480621 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.123271621 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176821752 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159105465 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256926571 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169448709 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204283926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213011361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15241891 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133874331 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124701704 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218153071 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156034916 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180441563 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149658025 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14243248 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164592738 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.106689175 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160785672 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215754778 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164669814 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19146534 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154165929 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185401798 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131162529 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167881995 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160864907 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167319801 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081022598 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205423936 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20618621 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150853941 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169149601 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219593872 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105748205 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311461443 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24204754 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190247411 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140975252 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160918696 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162112113 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166693818 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174157838 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180334392 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16074892 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188255463 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159535342 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139795325 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142581369 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149533722 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124220933 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133581639 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150983134 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177677469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14291018 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185898532 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163365417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160597661 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172883351 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.153933402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14667277 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152363757 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215676062 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175647156 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242113359 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151071414 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.182966504 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206205867 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129610371 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133683293 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.106428841 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180058456 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138997989 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189481029 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.219425209 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209520826 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211295658 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189928133 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14172483 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093775765 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158717931 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17581642 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238476495 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155843268 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160966105 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204852765 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.145519536 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10418779 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201988231 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202611753 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15091132 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198569063 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109171812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282345945 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100997061 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135498651 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166963863 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237725041 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108932823 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188440264 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172680032 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170788298 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166623709 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153157346 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222625073 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221386718 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230100384 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18345914 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105054444 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157935046 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208091301 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19620302 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160706668 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141744471 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205777158 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194601228 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229061799 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142890879 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169681879 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169140165 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156962477 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192102693 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137197513 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208839151 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137707751 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193063534 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155394764 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145509624 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177575664 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.219507704 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115069708 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220051438 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180231641 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137610613 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10706058 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199808509 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180956039 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160313618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100410909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210251192 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098850708 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220497304 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233884527 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138177021 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156153904 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149707478 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10766429 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159321192 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160129783 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142661105 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169156473 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206881955 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137503646 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193289925 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234993769 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17199131 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175780835 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147447046 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695666643 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133759971 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195109466 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158548109 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236430352 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122261664 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203063731 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130555678 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169853518 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228055106 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163034059 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236002102 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194112858 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207779546 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106604716 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159957454 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163015744 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147219428 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154288794 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17117914 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162439889 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154957561 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180275318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171071346 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137812328 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141985433 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200668607 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159076817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185440015 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181551885 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141629517 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175587613 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188700602 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137524909 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180774443 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240245075 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14570223 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154897939 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.107145715 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156722116 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26387962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127608363 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203321146 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177151561 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16066185 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169676009 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148952213 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224277437 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160327514 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180303374 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14883044 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162615005 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157384045 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111001991 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133305707 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156557853 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170545161 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151146089 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162724208 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14190909 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221821816 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09751312 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147259793 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201170526 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223786465 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216983185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.139763215 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138606006 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165363506 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152193782 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177409159 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180070735 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13890678 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108739775 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.140809964 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.164482159 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120573277 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158239659 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200901228 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16936878 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239708413 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109273675 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279787711 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143957571 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160849599 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088228143 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136279526 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153895849 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148124838 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162277034 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19627382 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264706077 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149734069 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106030443 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15287446 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129349168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107464151 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167926051 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164689204 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20831305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14687201 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082809757 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161294126 seconds)
  done (took 83.733194017 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180623576 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149954099 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168359941 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221416392 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199403508 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286846064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236359406 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.278418217 seconds)
  done (took 2.85992471 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.099950132 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149407438 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157928655 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135863366 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093862478 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122052992 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340137304 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.140583304 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092107111 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.151026827 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.177817354 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.096945123 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.529088498 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.130633823 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.12454741 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.084598273 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.121348617 seconds)
  done (took 3.88392307 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.475230644 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.762774062 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.495545618 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.129167744 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.418299707 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.138913103 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.131998439 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.221992373 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.096435377 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.512609709 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776819631 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.196749873 seconds)
  done (took 19.498738021 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.106022089 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.125674198 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109569382 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.140797181 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099126385 seconds)
  done (took 1.725226217 seconds)
done (took 133.685358538 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.112990106 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418208069 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073915193 seconds)
  done (took 1.672309714 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114437125 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.14309572 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110106063 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141682898 seconds)
  done (took 1.665306846 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.107311865 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128495272 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1103959 seconds)
  done (took 1.497150512 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32884274 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.193718182 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.16717984 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112516523 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130597724 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104325711 seconds)
  done (took 1.499840257 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104500964 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129527335 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098776799 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.13180648 seconds)
  done (took 1.615231295 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098208209 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078195946 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.104161661 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075381866 seconds)
  done (took 1.503169725 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.120077755 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134034035 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104773645 seconds)
  done (took 1.513394477 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136532096 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142062627 seconds)
  done (took 1.433681597 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.11257333 seconds)
  done (took 1.264292252 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.124264185 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171367185 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.194231591 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.168165053 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.2336332 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.167853843 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.143739883 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114998087 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133045397 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145961338 seconds)
  done (took 2.751170016 seconds)
done (took 18.368740858 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108836747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.520291244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.417176812 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117763633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.726725792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381311215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.073569917 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148922557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167920445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094444126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141982374 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673259732 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025814425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.480926406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982932615 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376008794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.706638452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094570913 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121606574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095496723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.05614441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0927418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124086839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092406694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707046984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427561468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096067208 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376042893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093501385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128519816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383822335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125408955 seconds)
  done (took 17.300635104 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101992166 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176785343 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099370938 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140329213 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125580613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095299754 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126397744 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094422432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181956376 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125611834 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111114764 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124125152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127642829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098709635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144691344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09317945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127991244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093587086 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123448604 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123291091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115246574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122827304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095043663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.12480175 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094639115 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138401404 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124921545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098279415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123370117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099652793 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129821833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095025328 seconds)
  done (took 4.955709791 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148013001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185611734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.138092596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128447032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172178465 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126521553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202291934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118971581 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185992148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.127941989 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142517904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09707114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159230993 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126612987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115601052 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.124335284 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097951426 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124338565 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093129083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125700003 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142188808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097124073 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12416695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093812803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125632443 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109030839 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126503985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122614791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095167716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.129725865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100758517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12684501 seconds)
  done (took 5.298557027 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105049323 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127937531 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110563064 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142097467 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100991444 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128646957 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097644283 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127048342 seconds)
  done (took 2.099646539 seconds)
done (took 30.806403885 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118520804 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132858046 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112699241 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.143850213 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103598428 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136902874 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.095244363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.137550799 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.143666932 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107233206 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140680172 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100020519 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.129077419 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.0931133 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138737797 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102062181 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.14174944 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.108084589 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.143860794 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.138470716 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095862491 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.139789169 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10828457 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144308979 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108656728 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136656528 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.146437156 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104151347 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.128040641 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09551177 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.127665209 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113857043 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.134486191 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111055186 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.136325182 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100419559 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127079431 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094475603 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.135511387 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13953282 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105056608 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.14060771 seconds)
  done (took 6.292511412 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115304218 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.150700276 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.107724966 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.088769756 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.120146659 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080877353 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140499687 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.08676425 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112866028 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108977354 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081804168 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.113388552 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078661242 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103496889 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079039128 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075983853 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.11074609 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076450734 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076900049 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.108442244 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081163806 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07320711 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.111349727 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079007578 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074980728 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112869255 seconds)
  done (took 3.716721767 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.108073831 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140753186 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113233219 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186715263 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166967444 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100699754 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135193887 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142599914 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111115308 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122489419 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097166755 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152845875 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111919109 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14021516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.123192642 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111507589 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138785161 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.0948168 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13092148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11404246 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141737833 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103896675 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145794543 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135439397 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092602564 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126721069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096672103 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138389555 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.101794458 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.13774221 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127038481 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097727522 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.126135456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105610653 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128756832 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095210791 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.144450412 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133802408 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106349568 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.124266019 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.098193727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124388962 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114196212 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.177047769 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100811754 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132269621 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.131500903 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.108274925 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.126150831 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111456744 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133268287 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094167317 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13083592 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09204366 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.125310959 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107339872 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126316646 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125821648 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.107417131 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126715872 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107255578 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128371436 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109973033 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128377723 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100474494 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.124088967 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093322689 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124849164 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146134696 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101706379 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166595538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097525052 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127535999 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131920865 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102491338 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130153697 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09363231 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140963772 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106306058 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128355945 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102385803 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.128538389 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095787011 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143903442 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125676553 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096552077 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124483352 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101481655 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126959027 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094099904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139002472 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093434635 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.128378261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.142226141 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.097971739 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.12454878 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10115422 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.129775941 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092766777 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137762299 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09784229 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125827825 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132431992 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094093761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.126497209 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104277004 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129111805 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092378319 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129510156 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100546758 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125842408 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094548642 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128567494 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094957061 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134967374 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129288103 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099620544 seconds)
  done (took 15.178995224 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.238247343 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218357902 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.241725276 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.266158445 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.139031993 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115386336 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214867743 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.160842272 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125963584 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162916591 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.164435297 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183612284 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.141368105 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185390434 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.14369793 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124398075 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115782459 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16785569 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.217725568 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.295828592 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113638324 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135352284 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164764625 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163744183 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106809593 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13619822 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141879141 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106780522 seconds)
  done (took 5.877907784 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115706017 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.162385541 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099562157 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148424082 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151133129 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093792686 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130847755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096537045 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139266395 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137761428 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093812208 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.133599289 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100882718 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135158997 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12526894 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104550674 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.135196147 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096210047 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129245883 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098045468 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133056587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101594689 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129986386 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122918963 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10774701 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124093769 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087166809 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14491707 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124368548 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119972173 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123411874 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100925862 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135731562 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094656204 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125726973 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096625317 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12826274 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096310074 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.127671896 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091702581 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124589113 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078857667 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124635456 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13869022 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101276842 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.0803887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133396809 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.130576175 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09592441 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122514665 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097319048 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127606719 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098477214 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132365174 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099372361 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12699423 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097441885 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118580798 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101355234 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.128114125 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086372392 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123736875 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100449171 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119915333 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102360991 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131233146 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092504916 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.128946479 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098460626 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.132182866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096327014 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128684683 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091850228 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12894348 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096882404 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130916431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097044688 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124965639 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123520996 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098757921 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076255472 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125763207 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074321967 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129056762 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092391091 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.125839968 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096297127 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131958218 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.140049807 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096804943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.1344875 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095642032 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125764031 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097749582 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.115816705 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097805527 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141758543 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142982818 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094886765 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123430457 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108644825 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129223081 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093963612 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.108842003 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102954502 seconds)
  done (took 13.235526888 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.136669095 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.164016977 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103092054 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.146012152 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159645477 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.165704844 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105962125 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13582048 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103295734 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.148825201 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.103008176 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.141719221 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098024664 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140607479 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163640939 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.111449689 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13557457 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108767921 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.135539936 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173963871 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.117172945 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.152467892 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.113235538 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128118862 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.13047507 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.117092242 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.167792487 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.115097389 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.146290122 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.151904592 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.118553131 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.171383613 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.147399897 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.106821847 seconds)
  done (took 5.766603235 seconds)
done (took 51.22918121 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.305076712 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.498818154 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.258646975 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.331549081 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.30201515 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.287325588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.270596077 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.267007028 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.444002445 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.26024446 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.527262731 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.99351858 seconds)
done (took 59.93641126 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.400084515 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.401041596 seconds)
    (2/2) benchmarking "String"...
    done (took 1.534252279 seconds)
  done (took 4.129666651 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.631044823 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.258791659 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.523050407 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.266473131 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.285902283 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.55367695 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.134365828 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.709766608 seconds)
  done (took 28.916912752 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.269024411 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.691158074 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.381690275 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.387664099 seconds)
  done (took 19.917797752 seconds)
done (took 63.182307927 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.268779051 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.338660021 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.287069995 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.242582311 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.38975442 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.298228397 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.423772006 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.373749407 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.28814443 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.248834064 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.269275643 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.276615982 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.273368464 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.393722066 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.269635927 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.277623672 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.356442709 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.9050678 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.706901329 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.287812592 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.272421719 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.306205465 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.292600786 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.264840862 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.28362385 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.266350078 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263091264 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.27185727 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.18585554 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.26744341 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.307244885 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.523782888 seconds)
  done (took 192.868175436 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.27112273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.356359177 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.497270196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.316279576 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.712454687 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.485601324 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.414707503 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.921005053 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.292639366 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.29690819 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.360819773 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.263179441 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.444329797 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.306298283 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.27996855 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.277855346 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.599394273 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.477678413 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.287119293 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.548393402 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.270821035 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.255629929 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.19198914 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.342289591 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.306658234 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.396004258 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.277590093 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.272287503 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.469141344 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.500275837 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.296511611 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.314208849 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.963291695 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.133295523 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.288822112 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.293518644 seconds)
  done (took 152.16964618 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.588669747 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.270276355 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.271823801 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.27292788 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.3080955 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.271492429 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.927425537 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.928813629 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.822363708 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.650998131 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.336750796 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.655845707 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.273270996 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.372039454 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.279745528 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.270153956 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.290461201 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.317610721 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.274174285 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.273986383 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.931010141 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.288961534 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.289775385 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277879551 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.274259976 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310153729 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.669027626 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266815202 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311423058 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.61674959 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.323203076 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267914566 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.749992973 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.593429298 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.39080883 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.270506303 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312667917 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.275006033 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.564977483 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268925679 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.276850233 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.278453895 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.026224256 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.275050149 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.931668647 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276313946 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.303836338 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.269610235 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275133718 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.882816321 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.098270032 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292662464 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.271693782 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.276838817 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.275683199 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.276067877 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.312739969 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.768680301 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.374115047 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.292919267 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.279582091 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314204304 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.275445972 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.658625953 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270087028 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.520362829 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.344674194 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.489521559 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.935048319 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277184357 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379168262 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.395679389 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.270949288 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.27597736 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276460114 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.276717702 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.391077794 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.271779088 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.27642032 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.745568601 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.277190356 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.279892775 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.337711784 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.374711332 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271629878 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.751528343 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.27745053 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.276229265 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.09479379 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.271040172 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.275740551 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378408145 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.272130489 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.275422673 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27668443 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.746030446 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.930325285 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.621122877 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.277258163 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.955154207 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.277761254 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.276969079 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.765299411 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.888364624 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.043512595 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.279470042 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394336683 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278341273 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.280805112 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.275485373 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306530926 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.296513593 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337046002 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.273497608 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.681472577 seconds)
  done (took 357.355493737 seconds)
done (took 705.169367862 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.958424205 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.938957612 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.069280628 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.962590901 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.926169611 seconds)
  done (took 11.050074772 seconds)
done (took 12.246791282 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.497144691 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497825047 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.350286555 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49919741 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31357833 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519606879 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476172356 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302248783 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395586518 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.375208526 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395733029 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338654166 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311558319 seconds)
  done (took 19.468167184 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.624896893 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.614251127 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341415049 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.62210694 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.31685239 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.628251742 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.491753103 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.502683976 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.527426353 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312619941 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.295008705 seconds)
  done (took 17.473920409 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.632756172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.624493858 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346540548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.635092056 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32003178 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.638442134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.509784973 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.52254683 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.508811591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314312617 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294198244 seconds)
  done (took 17.545019536 seconds)
done (took 55.684089037 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.291276974 seconds)
  done (took 2.488573408 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.32687099 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.497592925 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.311513366 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.297383262 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.293395054 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.292849128 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.297248758 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.292791859 seconds)
  done (took 11.808611913 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.286855276 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.291029822 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.290162288 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.293082499 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288135043 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.292064173 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.287706198 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.29237357 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.287878272 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.293126212 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.287680947 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.288804791 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.292508293 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.288727107 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.28983978 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.292945591 seconds)
  done (took 21.842887505 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.290312433 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.289026215 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.290038203 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.290440363 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.288854058 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.290563084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.292482104 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.28852871 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.28861317 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.289257896 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.29099402 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.288354214 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.290630249 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.290368392 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.290068145 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.291242687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.290850301 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.29022315 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.296875962 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.290913586 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.290087471 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.291764743 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.292215271 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.290824789 seconds)
  done (took 32.175724899 seconds)
done (took 69.514246559 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.685936907 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.287758475 seconds)
  done (took 10.174159722 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.292830114 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.294527933 seconds)
  done (took 3.792664261 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.293355633 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291950945 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.293376528 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.293123738 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.293266772 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.295054511 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.294457381 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.293436497 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.294687408 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.294544834 seconds)
  done (took 14.139796498 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.293762534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.29406997 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.291254269 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.294865278 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.295160764 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.293094871 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.296455686 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.295634187 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.296275152 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.293419305 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.295679207 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.291484438 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.294507874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.292336397 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.295931702 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.292597291 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.294144192 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.293230005 seconds)
  done (took 24.496427463 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.294769413 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.295041169 seconds)
  done (took 3.793836395 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.292511646 seconds)
    (2/7) benchmarking "second"...
    done (took 1.292235625 seconds)
    (3/7) benchmarking "month"...
    done (took 1.292454684 seconds)
    (4/7) benchmarking "year"...
    done (took 1.293607957 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.294307358 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.292402396 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.292946886 seconds)
  done (took 10.254141137 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.297731457 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.47119324 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.554273681 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.89159746 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.298103116 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.299449685 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.147378525 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.299960799 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.302576925 seconds)
  done (took 14.765904175 seconds)
done (took 82.618723758 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.355614084 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.300148021 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.633670014 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.310316614 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.306777051 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.637954617 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.307956496 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.426449201 seconds)
done (took 38.48625031 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.297379389 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.136637119 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.144848116 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.289750793 seconds)
  done (took 11.77633614 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.26961573 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.349218106 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.27420677 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.376805674 seconds)
  done (took 18.477085566 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.478767393 seconds)
    (2/2) benchmarking "read"...
    done (took 1.632014754 seconds)
  done (took 5.316021259 seconds)
done (took 43.073400412 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2968695 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.296252299 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.298573036 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.295052678 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.298271901 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.296748867 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.296305973 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.297031608 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.298409087 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.297263805 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.300810779 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298937997 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296438808 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296087741 seconds)
    (15/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.295711097 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299111465 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.297054462 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297688225 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297160503 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.298343712 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299595399 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.296378775 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.296041323 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.297155303 seconds)
  done (took 32.343062839 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.298803882 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.296059326 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.297191217 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.298506121 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.294881636 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.299852745 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.295990523 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.298203902 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.300024822 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.300815902 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296467097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.297243183 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.301498462 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.298614804 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299907308 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297784308 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.301150648 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298251917 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301232969 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.297002544 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.302093848 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298540645 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.299407719 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300543017 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.299067316 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.298834637 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.301624463 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.298630101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301530214 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.298927968 seconds)
  done (took 40.175563174 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.306788917 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.311571481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.302456835 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.302835492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.303097981 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.302513352 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.304092291 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.301755441 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.302965903 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.302038806 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.303600251 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.301243577 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.302914804 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.302088029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.301874508 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.301789995 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.300499257 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.300613586 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.302270037 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.301062834 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.303068031 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.302677363 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.303026174 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.302747872 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.302521193 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.303152128 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.302730731 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.302686355 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.302239582 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.3041118 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.303834425 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.303842207 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.303959709 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.30316531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.302217868 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.303250361 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.307832851 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.311380655 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.304003712 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.302293868 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.302701891 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.303916783 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.303195335 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.304921269 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.303969174 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.30169441 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.304068653 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.30449135 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.303883689 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.302910618 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.304475691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.303687367 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.304437775 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.302424847 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.302590564 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.302798086 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.302937845 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.303290748 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.302555329 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.304110337 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.304914294 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.306307553 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.304991684 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.305173774 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.304588278 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.306273246 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.304542558 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.306206973 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.306016062 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.305370343 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.307314831 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.306588978 seconds)
  done (took 95.082628238 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.304175191 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305236386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303470214 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303665299 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303191691 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.306557278 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.304954977 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307934202 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305024813 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.306568676 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306502001 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305022704 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305015832 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306488007 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306200995 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303187336 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.307702009 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303586244 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.307526935 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307772094 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306097819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.30457972 seconds)
  done (took 29.934622369 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307711146 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309474099 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.305562433 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306719237 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305519221 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306611152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.306868124 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.310192048 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307740772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304232503 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306970855 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309407976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305494868 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306102708 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304913024 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306682266 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317004861 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30686077 seconds)
  done (took 24.749763892 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.305953169 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.305797924 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.309724489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.305660618 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.307403837 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.310163877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304725916 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.308861909 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.307419803 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.305567741 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.309776251 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307534582 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.307918384 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306632318 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309871603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.307452575 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.309056657 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307649206 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308621879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306636657 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.306461813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308830781 seconds)
  done (took 29.983808336 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309338654 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309656975 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.308038496 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305681984 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.307201294 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.308686701 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.309127963 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.308854258 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.308383057 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.312098993 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308546828 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311678802 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.309396059 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309412232 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.310182601 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306539621 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309468293 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.309221088 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311485233 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.308347814 seconds)
  done (took 27.398969377 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310709578 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.312945661 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.31285769 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311189281 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312556798 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.312808914 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312349163 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.312257993 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.31339996 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313586794 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.311790328 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312742646 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.312551758 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.31307367 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.311805227 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312862368 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313305103 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.313730507 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312883016 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313314969 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.313946521 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.312983526 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314447632 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31303828 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.31423496 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314917074 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313812528 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.312747338 seconds)
  done (took 37.981284548 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314040291 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313786231 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.309827337 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.310593482 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.311505663 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.309952122 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.310989989 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.310671134 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312816251 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.308892085 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.314259207 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.315062259 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.313799615 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.313412735 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314478702 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.314315748 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313818767 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.311786264 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312246356 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311725244 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.314479848 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314704947 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.314462887 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31202178 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312122403 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.317028533 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313172267 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312011637 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315419788 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313007205 seconds)
  done (took 40.607108618 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.33563767 seconds)
    (2/2) benchmarking "in"...
    done (took 1.33409705 seconds)
  done (took 3.891783643 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.311004911 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315334176 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.317100513 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.313850572 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.313923136 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.315677223 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.314998515 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31465431 seconds)
  done (took 11.739466598 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.314710897 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.31621224 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.31650156 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.317935106 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.316526051 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.316758412 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32305928 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.335449811 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.316539739 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.317787743 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.324730602 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.325174431 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.319976311 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316095617 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.31512692 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31837774 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.318147084 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.31690124 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.314755824 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.317306581 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31704742 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318566117 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319585573 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.313927924 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.318056635 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.328390466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.338858863 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.319005366 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.314787159 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.319881689 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.316220024 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.31585669 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.319546019 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.318767557 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.316568873 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.318915179 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326334597 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338892827 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.32391803 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338776193 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319910795 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.316244551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.317992031 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.319220646 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319892903 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.319823943 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.318254805 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.31660968 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.31890189 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.321453348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.326412176 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317865163 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.316820735 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322881743 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.319753903 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.32598678 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.340379004 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.322777907 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.332458089 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.332405714 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.351478411 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.344656844 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321931956 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.320667157 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.33128844 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.350548698 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326769556 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.338217255 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.320125806 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.322455085 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.326392875 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354191221 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.346391023 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.322421611 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322421648 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.321377082 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321280844 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321942547 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327664719 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.342891421 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.323709227 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322997849 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.334667495 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35003828 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.321219206 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.321645198 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.324234384 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.323732268 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.325286136 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332513763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.341205123 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.321539128 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.321125761 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.319964787 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.322647215 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.322594529 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.322353515 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321422417 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.318816111 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.322787464 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323674581 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327427719 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.334280974 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323343553 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323111723 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.328970808 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.342313244 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.321510294 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.327522019 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.324403738 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324068439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.323708258 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.328933905 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.321029298 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327275389 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.332383266 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.323549615 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.324016131 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.3226554 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.326472954 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.334871097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.354911589 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.326551726 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.324240305 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.329981019 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.338475023 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326042683 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.326239125 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.326188546 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.322048609 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.32204385 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.326185949 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.324838883 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324052037 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325375423 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323865577 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.322824761 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.326716811 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.326364884 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.326465016 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.32639985 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.325686238 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.326007855 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.328116505 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.326801498 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.327664835 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.332620777 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.345545847 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.327520522 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.32604335 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.323901655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328642838 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.325851975 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.326918058 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.327219105 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32798061 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.325517165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328064861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329294509 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.326256611 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.326484149 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.326553313 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332020906 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.327097198 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.330612916 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.325727971 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.324066388 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.327563396 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.328208607 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.325965768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.327388195 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.326149184 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.331112105 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.338420003 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.329096643 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.327466076 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.329441699 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.327380738 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32751569 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328210906 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.3307 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.337818921 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.327591003 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.33501612 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.350531276 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330000344 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.329500806 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.328234183 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.327151853 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329663731 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.332269449 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.340145981 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339756808 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354833234 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.329724167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.335175043 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.328452421 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.335489507 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.332568314 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.330782914 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.328837899 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330355658 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329104763 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329915034 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.331059488 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.330413485 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.32896418 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331535349 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.330932597 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.330695 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331463926 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.33024429 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331602759 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.329076128 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331155654 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.331738836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.330139909 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.326753468 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.328673565 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.329540922 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.33124415 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.331713193 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.33602846 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.328870942 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331248611 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332556406 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.332046454 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.329996468 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.332165654 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.333288749 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.331265097 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339507542 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.353057008 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.331767875 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336821581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.351155221 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.330809837 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.332726148 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.332882895 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.329381201 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.335907608 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.341787623 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.332257279 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.333899758 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.333572071 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332149673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333250176 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.337532074 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.350874291 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.331875085 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.333846325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.332964096 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.331136561 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.333930446 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.333263015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.333761482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.335285676 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.33561811 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.333849356 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332211721 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.335480724 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.333806522 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.335185909 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335851892 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.344289092 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.3394147 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.333123882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.335754792 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.336209939 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.340228404 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.332347387 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.333959746 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.334788712 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.346706581 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.359910847 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.340834024 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.355190303 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.33565438 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.340743618 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.355294908 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.339268705 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.335095575 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.333496487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336278805 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.336114063 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333575212 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.334142015 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.33741163 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334556698 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.336036215 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.340950966 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.335536638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.336518954 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.335961624 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.336773944 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.33688839 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.33303156 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.335918242 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.336930913 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338413521 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.335458133 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.336615845 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34290835 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356113999 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.335551154 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.336376111 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.336249 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.33658421 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.337825892 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.339600475 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.340929222 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.349141207 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.341621732 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.346618862 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.340126417 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.346858395 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.338497471 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.343150242 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.349546001 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.337169167 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.338698599 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.338052282 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.339082955 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344142383 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.358466822 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.340868525 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.344489537 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340124694 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.340425408 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.340580094 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.339813971 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339038029 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.339161363 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345715902 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.361402114 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.344842042 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340276956 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.336923318 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.33852069 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.340959746 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.335883475 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339504516 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.338656025 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.339657329 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.338351335 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.336719551 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.339825397 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.339792051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.339720407 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.336872933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.340791064 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344729552 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.360753918 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344519732 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.340094218 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.346792222 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359365001 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346895865 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.362237654 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.3413813 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.340738065 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.340104203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.342012674 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.340372767 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.340595575 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.341913978 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.342468986 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.347914665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.341271886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.342508084 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.341603883 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.34215256 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.342389512 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.352356986 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.371675599 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.343604942 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346455285 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.341158032 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.343322926 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.348325858 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.343788013 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.342464226 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.347555714 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355621436 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.352723463 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.343508301 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.343287049 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.343837303 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.343595722 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.344106632 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.344082695 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.341739086 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.343342688 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.344631921 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.343676642 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345516306 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.343821106 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.342469197 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.343398334 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.344108207 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.354888016 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.362939959 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.344587076 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344891678 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.346310556 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.34356958 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.342970453 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.344716753 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343730621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344919148 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.34636008 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.352150422 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.35265358 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.344056888 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.344851249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.344229602 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.343600753 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345770018 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.345699376 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.345612249 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.345320592 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.344487855 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.343959996 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.344139292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.343491734 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.344845633 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.343895051 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343524916 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.347754564 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.354895547 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.345999112 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.344141024 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.345396783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346897212 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.343827541 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.345076549 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.350459618 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366684992 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.360311963 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.357773515 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.351361687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.344829818 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.350245331 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.356284859 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.3456923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.347543531 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.346023256 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.346951763 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.347572151 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.350281582 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347852716 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.352918835 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.365496032 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.347165916 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354218027 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.368244914 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347439672 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349062042 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351534952 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.347363227 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.344473337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.348165433 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.345540018 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.352662556 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.366893184 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348105934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349082224 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.348251395 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350376536 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354496154 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349286805 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.346565073 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.34543013 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.347562561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347509017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349026947 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.345287972 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.347539147 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.347665475 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.351180307 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.356665453 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.345645424 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347572352 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.347340677 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.348773365 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350932091 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348733527 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346700204 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.346175929 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.34973976 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349310508 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.348262283 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.350424883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.34900456 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.351701037 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35318535 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.350272432 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354992452 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.363441838 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.357724685 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.347672598 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.348645816 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350124932 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350009479 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349773095 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.350548344 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.34990911 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.349953201 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.349104984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.351623292 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.351440517 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.354685409 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367805725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.372108002 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348448576 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.350872878 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.352565943 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.350272467 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.34863117 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.350841764 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.351397957 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.355156867 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.361302936 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.352597169 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357893936 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.371150969 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.352050873 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.356351716 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.354633326 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.360998726 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.352251246 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.354507113 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.353446892 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.355628178 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.371263112 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352977961 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362856946 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387489263 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.371985072 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.354828365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.354311321 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351360932 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.352979692 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353923215 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.352897841 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.353944712 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354006148 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.353039426 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.354826057 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359758718 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.354303015 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.354801708 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352877293 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.352389421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352880945 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.351829504 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.354450813 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.353739835 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.353862208 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.355439213 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.35323078 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.353305037 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366261482 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.380109532 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.352540104 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.353527336 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.350919979 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.354515124 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.357116758 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368077178 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.365212785 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.355625561 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.355306061 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.355360428 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355735472 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.356204225 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.354228273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.353013507 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35368724 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.352563178 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.366122609 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381594488 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.35848021 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.353760067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355331386 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.355081382 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355765913 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356292619 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35593136 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.354706694 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.358245061 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361006492 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.355654478 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.356873407 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.358453749 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.367483303 seconds)
  done (took 799.552598551 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.355116452 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353102761 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353531291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.353272626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354914559 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354716573 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353819604 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355797106 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.35517809 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355639987 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354598867 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353412437 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354569555 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.354694746 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355432485 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354243391 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355102227 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.35337687 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354965275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353964544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.355416376 seconds)
  done (took 29.7056181 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.357538827 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.353759333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355467607 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.358768958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35624436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.358267563 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356638955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358453612 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358562284 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35554073 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.35994511 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359931794 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.355528258 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.356551711 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355490674 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357937496 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.35954832 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354852945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.358334372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355063501 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35904708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.357031732 seconds)
  done (took 31.120653196 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.359042207 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.359376034 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.357967331 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.356265957 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.357836161 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.356443308 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.360418602 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.359729749 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.358673081 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.359391015 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.358025283 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.360230353 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.368956881 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.366477083 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.360302592 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.359835434 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.504707706 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.360656842 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.360959587 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.359165577 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.357409032 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.364486534 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.37569423 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.357985096 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.357757207 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.360238977 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.362178248 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.361421163 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.361843557 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.362606806 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.366615468 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.361241253 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.360805642 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.362427102 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.360790345 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.363835052 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.367271049 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.360688075 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.360022479 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.361536019 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.372376224 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.387815172 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361913062 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.366526032 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.381601276 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.362604143 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.365369701 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.371440913 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.360314073 seconds)
  done (took 68.185542892 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.363215287 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.363065792 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.359829284 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362166256 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.363025684 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.361981998 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.362285796 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363737168 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.360115124 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.359968391 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.363029542 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.360619788 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.361434717 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.362860645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.36326436 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362100753 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.360944246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.363218889 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.358690739 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.361828847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.359881133 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.363918384 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.362336713 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.361199849 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.364230986 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361492707 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.362222216 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.366184944 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.361258105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.362942344 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.365812054 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.364670147 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.364523456 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.362130702 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.3618235 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.362869815 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.365328877 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.364188723 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.365279147 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.362529112 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.365273018 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.364866515 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.36419192 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.365269856 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.363415008 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.362164982 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362219397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363752701 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.365053482 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.365819496 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.364505204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363244918 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365427627 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.363218898 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365724518 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.367710287 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.361944888 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.362364217 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.366596665 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.364071603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.362291941 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365529443 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.364473489 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.365691833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.36706127 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.365297567 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.365402198 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.367925279 seconds)
  done (took 93.979946251 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.367830462 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.366223394 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.366537021 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367594876 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367783213 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.366706096 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.367445974 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.367863936 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.367516119 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.368416705 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.367698436 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.36836197 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.365395205 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.366023106 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367265908 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.366707795 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.367476067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.366147099 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.367242155 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367135707 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.368298846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.367630552 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.36954592 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368320181 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368761812 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.368078258 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.368323292 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.367480663 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367271573 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368037899 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.369226546 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.369040845 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.36763108 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367317259 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.369843978 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.368901719 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370293994 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.370095619 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.368607481 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.369230767 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.36817419 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368133032 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369980757 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.368711322 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367801957 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369903794 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.369004925 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.370612809 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.370610218 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.37003987 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.370177441 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.370593358 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370106878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.369642377 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.369629907 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.371925728 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.371379278 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37072634 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370814052 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.371388984 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.370722796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.371875741 seconds)
  done (took 86.12899101 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.370546949 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.371899433 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.368371732 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.369146191 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.371533869 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.367827662 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.372035997 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.370903262 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370542516 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.371787787 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372723788 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.36912581 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.366953783 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370963227 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.369775989 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.367777314 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.368935349 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.370505882 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372746887 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.368350516 seconds)
  done (took 28.676856455 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.370815967 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.37251383 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.370183422 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.369603417 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.373195444 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.370161756 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.373051187 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373157374 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.369907164 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371696015 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.371708806 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.373982001 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371631015 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.371229663 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.372862291 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.371947609 seconds)
  done (took 23.221520154 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.371417616 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.371899508 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.372466914 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.372588493 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.371008115 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.369952258 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.372658264 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.369403604 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.371151353 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.373673636 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.372278978 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.375229753 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.375223357 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.37254966 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.371700851 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.374360455 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.369730803 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.37160291 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.375080372 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.372723466 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.370847331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.3718928 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.374649549 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.374116189 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.370075322 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.372983068 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.372603612 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.373183834 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.371069574 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.37517242 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.373592085 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.373664532 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.373223269 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.372877703 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.374523418 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.372702442 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.376502797 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.3752279 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.37512274 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.375623208 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.376597408 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.373029103 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.377032125 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.37528065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.372145994 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.375939257 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.373632019 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.374711755 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.373283543 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.374512009 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.375773512 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.376225689 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.375677535 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.377300967 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.377128961 seconds)
  done (took 76.822118212 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375806093 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376803729 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.373576328 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.377026242 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.378264886 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.374903592 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.376461522 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.375766755 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.376268589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.377486782 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376763108 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.379451794 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.374769664 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377666739 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.377235257 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.376872544 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.375369992 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.374365767 seconds)
  done (took 26.053988508 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.374281638 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.376479147 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.378515409 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.375839155 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.37460558 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378874106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375258756 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.378321124 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378203095 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.376824093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376748771 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.380092591 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378512492 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.379148358 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378001476 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.377424296 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.378093936 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379072316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.375490902 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377579314 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.380147317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379197708 seconds)
  done (took 31.586763189 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.378200811 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.378090626 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.378222245 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.396122156 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.402187119 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.403805896 seconds)
  done (took 9.617744139 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387974901 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378327827 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379174192 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380997911 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380556582 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377355646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377335424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377320628 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37927716 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378747725 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377183667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381012834 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379430332 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378696844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382495932 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382681988 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375894323 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378438313 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380232258 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382626784 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.37825102 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38240321 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378378444 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378730767 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378137042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378443124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381057356 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375772122 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377376171 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381972578 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381867148 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379242306 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380435581 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379479178 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383877634 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381668261 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378737653 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381348031 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38042688 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379001964 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381764947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382047265 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381432266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377826432 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381328142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38036768 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378333732 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381199631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378953439 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38367187 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383288347 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380197421 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382809992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38207718 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382431169 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385116261 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381743689 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380077039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383050931 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380761233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381428879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382812151 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381835735 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3818621 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382034015 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378555545 seconds)
  done (took 92.421122021 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379895717 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380194968 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381208135 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383108179 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382395575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380622497 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382040762 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381099653 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381942133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381135373 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383081338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381753183 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38256077 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38124996 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383170563 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381938279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382785262 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383664188 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383925667 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385182598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382437343 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383250913 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383099129 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382883096 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382545217 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385637924 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383029506 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381757635 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381808814 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382097831 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381759867 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382131981 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382221965 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382874837 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381729455 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383076055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382416541 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383424198 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383491135 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385237163 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383340188 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386272568 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382259137 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382532655 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384806169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383515107 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383480148 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382255915 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384317325 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383251832 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384633171 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383796709 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384865139 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384153623 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383387193 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381924156 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382820089 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383800907 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381633554 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386773066 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383215105 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38238265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386083923 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383504642 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382413033 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384069313 seconds)
  done (took 92.562955357 seconds)
done (took 1864.730688793 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.361058482 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.448199416 seconds)
  done (took 14.097533272 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547482722 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.50180826 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.385313668 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.45471643 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.381304405 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.409882513 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.401949271 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.379597738 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.3864675 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.384994948 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.385456392 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.584574391 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.381736438 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.380697156 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.385044669 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.481060193 seconds)
  done (took 44.130371378 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.41559156 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.389002702 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.531256244 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.41005247 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.41681423 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.611441937 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.45332246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.392866857 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.598532123 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.431589281 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.226842972 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.413436207 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.388419535 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.697354334 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.406984585 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.613386839 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.681478986 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.226082057 seconds)
  done (took 32.594248944 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.935721672 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.420727461 seconds)
  done (took 9.647373974 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.41309713 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.425420463 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.385199365 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.406484163 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.402546676 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.401619532 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.397648871 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.391092584 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.392389465 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.46289603 seconds)
  done (took 65.376895095 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.412996397 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.391803557 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.390521095 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.390796445 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.38035484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.377282534 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.389865091 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.392509404 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.883157458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.549348654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.394099165 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.399481228 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.412644819 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.393420692 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.391568245 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.434495964 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.564580277 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.391816187 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.389473811 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.397279988 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.392336259 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.494435845 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.443827883 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.392823128 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.550544011 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.901933769 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.398184354 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.400045835 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.540502076 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.393364691 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.393142158 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.394308679 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.395039419 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.049010975 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.920038344 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.398821108 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.434606256 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.403345155 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.391312119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.560285819 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.396718775 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.399147503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.385878474 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.90933504 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.555837535 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.534423283 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.950987171 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.41406893 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.394192449 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.463664885 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.395636157 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.396129944 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.429904443 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.220485001 seconds)
  done (took 117.116644674 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.407721799 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.776341173 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.563447764 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.412514929 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.147822187 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.145505209 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.398623474 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.741713807 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.431245982 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.38723963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.702266221 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.958212716 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.402658615 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.443248088 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8823929 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.426364213 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.394770081 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.330440512 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.400538964 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.382802087 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.948989131 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.391473673 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.401487212 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.565429069 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.428199947 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.911568151 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.060091593 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.876770232 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.401443249 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.383418305 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.922554362 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.403458257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.40344599 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.384649377 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.683393628 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805225493 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795216849 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.406510503 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.398041105 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.394046891 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.416117539 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903780129 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.804641964 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.402349432 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.401486957 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919688603 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.402414026 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.399006585 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.398933169 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.61285713 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.045562276 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.390309143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.161519567 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.392590516 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.755167496 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.442947662 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.448796615 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936494354 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.403467531 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.558426678 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.436539099 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.393420492 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.390246204 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.391552733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.383739442 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.795437967 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.628270223 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.393303662 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799211468 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930764399 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.403303069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.976392581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.293936513 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.415390664 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.444306254 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.393109271 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.126383388 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942322721 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.405643925 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.386432336 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788484066 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.408581437 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.705328479 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.405708752 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388091607 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.955432224 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.398893436 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.398251703 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.407032823 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.387419034 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.161447473 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.396083205 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.695257483 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.457664224 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.394575248 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.390817621 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.435635771 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.390177171 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.388432739 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.40147715 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.979447795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.413121994 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.412763438 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.415992237 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39589674 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.396100432 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.390716283 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.394603501 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630848843 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 4.052970564 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.414817183 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396508561 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.39705583 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.394006988 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.559019865 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.40232184 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.76203476 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.408889659 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.3913804 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.407557646 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.125933601 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.421558602 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.394197948 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.392675563 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.335578338 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.602616106 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.417120774 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.410713701 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.396863679 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.416171007 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.835139151 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.410258696 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.481754885 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.395187102 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175459222 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.452353249 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.405734794 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.704848966 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.403091762 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.398118156 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.410736522 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.398907742 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702777196 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.702196971 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.557116461 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.392939877 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.409063832 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.144486201 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.431854508 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550463666 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.41483894 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.39384416 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602563398 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518347887 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.394996918 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.010726734 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.398342205 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.626975737 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.397182936 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729337329 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950017872 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.410436966 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.399475098 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.173345856 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.128967027 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.22941893 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.39943792 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.702390042 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.372935535 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.885039896 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.398233636 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.39808359 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.972141236 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.399460326 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.395122616 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.400333603 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.397928133 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.540668884 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.577182164 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.604995833 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.396868386 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918989935 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.47052674 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39597285 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.406664291 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.402096169 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.745709786 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.417127444 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.400600369 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.39600655 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.397657964 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.40946624 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.939432955 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.395253582 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.401415426 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.557643886 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117924844 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.419847086 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.401895311 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.207306091 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.619535536 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009056299 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.447462928 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.77424119 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.416463354 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.441845861 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.182716701 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.435040401 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.933616182 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.416287627 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.403346666 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.084531815 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.417335985 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.474646994 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.397321868 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.404022017 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.046095284 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.420038113 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.407271254 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.974450542 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.426464687 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.671240994 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.402538823 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.40421399 seconds)
  done (took 1129.209595857 seconds)
done (took 1413.463004576 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.401783217 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.404499662 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.38472946 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.405298995 seconds)
  done (took 26.90388451 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.414176726 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.40968008 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.411001414 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.41007551 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.411630946 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.409526303 seconds)
  done (took 9.77868716 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.556663571 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.405283413 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.405108099 seconds)
  done (took 19.677435097 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.658217924 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.929303022 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.839259614 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.06659827 seconds)
  done (took 11.804724544 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.4101456 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.412019602 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.411364702 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.414525196 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.415082042 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.416013228 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.412283822 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.411754027 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.415046563 seconds)
  done (took 14.027293872 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.162335386 seconds)
done (took 89.663097675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.422017292 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.490846713 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.840012345 seconds)
    (4/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.617400513 seconds)
    (5/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.412430269 seconds)
    (6/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.381199237 seconds)
    (7/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.473346685 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.740510104 seconds)
    (9/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.433623222 seconds)
    (10/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.372405575 seconds)
    (11/309) benchmarking ("sort", Int8, false)...
    done (took 4.457382919 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.448081744 seconds)
    (13/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.403956015 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.431144049 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.432658371 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.729503718 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.504217565 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.447373535 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.165731491 seconds)
    (20/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.399670988 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.34254564 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.40059985 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.325732423 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.398899399 seconds)
    (25/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.601677455 seconds)
    (26/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.561381208 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.865637846 seconds)
    (28/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.419699059 seconds)
    (29/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.432286939 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.406572215 seconds)
    (31/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.528837906 seconds)
    (32/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.846381734 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.381654088 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.525495605 seconds)
    (35/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.434605028 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.536506942 seconds)
    (37/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.43284168 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.425610404 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.83946593 seconds)
    (40/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.428402548 seconds)
    (41/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.490503054 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.388378852 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.41994091 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.414893007 seconds)
    (45/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.950349525 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.514448925 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.433870289 seconds)
    (48/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.435450511 seconds)
    (49/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.68958478 seconds)
    (50/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.251331666 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.44076151 seconds)
    (52/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.422563583 seconds)
    (53/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.165418077 seconds)
    (54/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.381994322 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.437857895 seconds)
    (56/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.478412003 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.38805777 seconds)
    (58/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.598648892 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.460944303 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.332288049 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.397562087 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.512499128 seconds)
    (63/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.016026508 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.832596796 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.417265675 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.304094077 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.383996385 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.404724038 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.40340629 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.382671189 seconds)
    (71/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.40202914 seconds)
    (72/309) benchmarking ("sort", Int64, false)...
    done (took 5.721588639 seconds)
    (73/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.65990484 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.772941407 seconds)
    (75/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.402210887 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.088282629 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.485316233 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.391418827 seconds)
    (79/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.408025262 seconds)
    (80/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.463111706 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.876254924 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.400551552 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.384898293 seconds)
    (84/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.263783054 seconds)
    (85/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.109727443 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.445507007 seconds)
    (87/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.488297377 seconds)
    (88/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.091634911 seconds)
    (89/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.258888789 seconds)
    (90/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.396600808 seconds)
    (91/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.621464588 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.391180233 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.426283016 seconds)
    (94/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.99805734 seconds)
    (95/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.273158792 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.405234324 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.423088637 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.415632854 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.38614597 seconds)
    (100/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.981768897 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.387377385 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.838162174 seconds)
    (103/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.4711662 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.392756729 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.47455298 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.307045617 seconds)
    (107/309) benchmarking ("sort", Bool, false)...
    done (took 1.945819154 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.746507027 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.45465369 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.412082757 seconds)
    (111/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.666242777 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.079403855 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.311958009 seconds)
    (114/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.333137243 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.445719846 seconds)
    (116/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.693108595 seconds)
    (117/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.496405314 seconds)
    (118/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.414521308 seconds)
    (119/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.952669112 seconds)
    (120/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.417577453 seconds)
    (121/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.393338118 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.136178641 seconds)
    (123/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.5091548 seconds)
    (124/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.393485506 seconds)
    (125/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.451975188 seconds)
    (126/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.086719884 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.716791334 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.514839617 seconds)
    (129/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.175327082 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.385636926 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.797421723 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.908765466 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.413946548 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.336180281 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.317939407 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.435623537 seconds)
    (137/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.823500612 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.365900478 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.921786668 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.445172657 seconds)
    (141/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.769563448 seconds)
    (142/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.405856645 seconds)
    (143/309) benchmarking ("sort", BigInt, false)...
    done (took 6.408027987 seconds)
    (144/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.431701675 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.807585309 seconds)
    (146/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.49269203 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.705181612 seconds)
    (148/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.389352683 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.973592306 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.176644372 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.513679326 seconds)
    (152/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.614181017 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.428723503 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.355961418 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.767022074 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.485366408 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.409703221 seconds)
    (158/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.512444687 seconds)
    (159/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.540455335 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.415595587 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.430603488 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.438587391 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.482045129 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.000819734 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.408173923 seconds)
    (166/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.557490658 seconds)
    (167/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.285088313 seconds)
    (168/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.402915602 seconds)
    (169/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.444062519 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.319095453 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.477097955 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.396382444 seconds)
    (173/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.390030212 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.466257657 seconds)
    (175/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.493099524 seconds)
    (176/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.410225886 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.317379667 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.453550132 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.438688552 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.52422631 seconds)
    (181/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.503916711 seconds)
    (182/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.007200704 seconds)
    (183/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.438847293 seconds)
    (184/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.395125257 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.93932551 seconds)
    (186/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.415874186 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.410235961 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.469167659 seconds)
    (189/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.034836921 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.103531481 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.513056624 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.131212652 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.984467371 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.456091957 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.41279996 seconds)
    (196/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.498377908 seconds)
    (197/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.520282828 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.401349215 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.39358798 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.171358114 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.2324947 seconds)
    (202/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.088655135 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.618693116 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.419260591 seconds)
    (205/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.638455676 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.969787304 seconds)
    (207/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.990417936 seconds)
    (208/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.019908043 seconds)
    (209/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.411802158 seconds)
    (210/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.29990674 seconds)
    (211/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.440320462 seconds)
    (212/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.458472863 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.497859146 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.437590489 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.147569577 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.366536126 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.393511839 seconds)
    (218/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.203195866 seconds)
    (219/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.462724176 seconds)
    (220/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.110288301 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.412084733 seconds)
    (222/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.746423536 seconds)
    (223/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.474025822 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.462327863 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.421021741 seconds)
    (226/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.852336442 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.889296104 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.440265529 seconds)
    (229/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.561525045 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.155551306 seconds)
    (231/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.411081645 seconds)
    (232/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.205367444 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.43571538 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.474137931 seconds)
    (235/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.44432704 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.441875993 seconds)
    (237/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.106332561 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.394772194 seconds)
    (239/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.303141223 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.370455575 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.512503349 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 5.515183503 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.506070461 seconds)
    (244/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.394300309 seconds)
    (245/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.768680344 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.222025139 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.807745842 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.461706254 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.48690617 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.255571185 seconds)
    (251/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.330923607 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.443077355 seconds)
    (253/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.510396123 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.329110693 seconds)
    (255/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.438429407 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.752538767 seconds)
    (257/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.237512908 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.502743741 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.530839872 seconds)
    (260/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.569255713 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.403265609 seconds)
    (262/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.504153641 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.444389353 seconds)
    (264/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.21286902 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.561109404 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.404064219 seconds)
    (267/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.444232517 seconds)
    (268/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.740755338 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.824552023 seconds)
    (270/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.524067919 seconds)
    (271/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.431518551 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.375349813 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.451497169 seconds)
    (274/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.345116789 seconds)
    (275/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.445348554 seconds)
    (276/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.39921669 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.014226864 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.910203174 seconds)
    (279/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.417024902 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.302630978 seconds)
    (281/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.445311253 seconds)
    (282/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.440494676 seconds)
    (283/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.409965337 seconds)
    (284/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.619251992 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.408919069 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.523858996 seconds)
    (287/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.434779988 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.501106121 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.405677458 seconds)
    (290/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.543641392 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.507874864 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.536480059 seconds)
    (293/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.854853134 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.907740885 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.284854596 seconds)
    (296/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.40213543 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.461612473 seconds)
    (298/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.434916579 seconds)
    (299/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.44420362 seconds)
    (300/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.417425102 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.422875049 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 5.887539895 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.437057271 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.442753172 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.488508449 seconds)
    (306/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 6.138122585 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.282261376 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.418161782 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.878043607 seconds)
  done (took 1087.088827688 seconds)
done (took 1088.39971397 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.459144339 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455681361 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.437247161 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.458758754 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.548576705 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.461719235 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.44736907 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.439608168 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.485498329 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.486643052 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.437048324 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.460062509 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.439004905 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.438895609 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.436373002 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453231672 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.668717862 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.434159665 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.454673281 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.448429619 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.453562784 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.437354952 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.487785001 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.461074666 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.444097314 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.442369962 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.44311099 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.460611541 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.551080862 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.442575484 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.441837508 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.451321021 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.669343865 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.431993559 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.435500375 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.460743558 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.4533545 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.449207326 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.445619387 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.473490752 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.161793202 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.451243396 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.442284389 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.442200465 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.440477086 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.443991165 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.442088395 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.447850942 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455840513 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455634797 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.146850029 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.46899363 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.44458759 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.442062457 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.45263797 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.441555686 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.444417819 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459793112 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.461627616 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459724959 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.65416043 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.439140287 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.443648957 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.457815622 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.449754783 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.184595365 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.448545531 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.446439753 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.155954959 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.456447759 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.177314654 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.461565825 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.443647534 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.456736935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.474990036 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.663246568 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.431070624 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.441518453 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.44949716 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.440343895 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.451893853 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457060624 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.447717908 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.440971444 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458353649 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.466470108 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.454116494 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.444418274 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.453366795 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.463934054 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.449734875 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.456262237 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.446127366 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.437981019 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.452893279 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.447862942 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.44620633 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.447129141 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.449630997 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.453908537 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.151048948 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.475544429 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.4405593 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.440260961 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.444570555 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.458914308 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.15400818 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.456182713 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.465692446 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.493453054 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.447304305 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.654930838 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.442055392 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464135027 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.454797301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.449136713 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.441280598 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.654504437 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.142533021 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.472793737 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.447389995 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.445032632 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46416075 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.44800482 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.443175558 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.673967737 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.441276158 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.470492435 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.566589175 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.456440581 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.478544789 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.446123791 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.450282838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.467780789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465826163 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.478654139 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.449527375 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464183223 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.463232743 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.442143059 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.458691611 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.456333777 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.448576615 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.453322148 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.440462244 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.469946859 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.461253738 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461388328 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.467839619 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.567668704 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.444968738 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.66136046 seconds)
done (took 245.892802692 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.506147436 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.437388503 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.529431818 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.444010713 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.551057957 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.550052486 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.440694019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.440579598 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.441138139 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.826323114 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.442507002 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.442984613 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.439674081 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.442285235 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.527638406 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.442604333 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.440686065 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.785641438 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.445000655 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.511514772 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.444960951 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.442207838 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.445610478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.83295003 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.442861202 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.443799144 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.513729597 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.444468832 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.798443567 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.437977008 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.43851738 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.837789272 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.534470846 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.4641379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.454438569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.45192415 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.55252553 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.469472618 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.527664909 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.527735005 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.531547371 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.48313823 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.444215477 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.444193082 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.448376053 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.448258245 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.443105468 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.471722728 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.443722366 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.443579953 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.786597908 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.455357894 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.45324323 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.444130083 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.443739462 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.466204449 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.445095191 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.446195088 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.535439968 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.448553784 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.508871376 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.835068205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.826768932 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.447998943 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.44448756 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.446356204 seconds)
  done (took 155.970064976 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.51294495 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.518695559 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.575323481 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.466190426 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.498870442 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.582792612 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.467134237 seconds)
  done (took 11.964746639 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.453277439 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.448147939 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.497480646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.497101463 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.448243179 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.595193016 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447991352 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.458397367 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.447837274 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.500759358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.448633798 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449226718 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.455180792 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.441186236 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.498973985 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.462230756 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.562861223 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.449252096 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451484403 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.60070008 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.448220702 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.455973033 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.501453069 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.46038966 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.450797325 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.453675847 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.020019702 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450083675 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.447330142 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.450847152 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448191433 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4882087 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.450795088 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.450881855 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.447933117 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.56412883 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.449843436 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.448861286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.450258919 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.446493915 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.450173783 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.450189501 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.450246969 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.448088949 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.450272358 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.474285961 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.451648364 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.449812884 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.451485079 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.450325299 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.503339565 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.450653098 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.44923028 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.448613686 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.507279068 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.459439181 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.451915497 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.448790841 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.452213364 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.448755387 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.6027392 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.49988664 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.451107239 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.498972918 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.450953117 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.453932955 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.452135974 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.451480241 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.505037665 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.452512147 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.499362361 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.448732563 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.606576703 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.474381728 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.454421862 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.455586755 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.455110276 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.455198111 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.451193177 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.458560157 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.451781915 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.455758118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.459655777 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.450566827 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.45126873 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.556499207 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.56225341 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.451370085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.464693376 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.460315436 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.450540557 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.504795052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.454458319 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.451316164 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.50423919 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.569562045 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.506319156 seconds)
  done (took 164.675155122 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.457929917 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.462663696 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.454221109 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.470242166 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.453547322 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.455061541 seconds)
  done (took 10.101626727 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.458554697 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.457036226 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.454486326 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.454758957 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.456143957 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.453236297 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.454629813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.456426988 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.459804021 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.455947135 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.455504736 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.454412248 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.456157712 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.455495798 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.45617021 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.455490917 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.456496091 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.452721546 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.455796868 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.455603536 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.560924335 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.45624504 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.45618314 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.457605542 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.460897527 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.455863319 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46433512 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.45763925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.456238263 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.460664272 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.478824629 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.45767589 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.456932078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.463695082 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.461647757 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.458978845 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461545785 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.456571055 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.455240233 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.456479495 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.457298824 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.457757194 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.458740216 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.458224779 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.458739053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.463299724 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463267089 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.465335525 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.457925632 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.460719136 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.457461877 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.458720429 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.458136129 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.457618311 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.460551766 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480095501 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.463901776 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.459300677 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.459295222 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.459787398 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.461384774 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.45825637 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.460377726 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.463191152 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.457362575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.458474657 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.461286278 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.464585185 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45882855 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.457993149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.460079852 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.456752585 seconds)
  done (took 107.496278559 seconds)
done (took 451.548241955 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.673316509 seconds)
  done (took 8.02491839 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.895523529 seconds)
  done (took 8.25024934 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.554616973 seconds)
  done (took 25.914981471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.572890414 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.466080909 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.484520517 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.454740413 seconds)
  done (took 27.334183384 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.057921798 seconds)
  done (took 8.413628702 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.45422984 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.462678467 seconds)
  done (took 14.273970669 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.029468492 seconds)
  done (took 8.382809659 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.485613834 seconds)
  done (took 7.845918444 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.468409685 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.974749926 seconds)
  done (took 14.814354721 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.44236709 seconds)
  done (took 7.79675437 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.972667435 seconds)
  done (took 9.328495598 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.451810482 seconds)
  done (took 7.809011474 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.491344815 seconds)
  done (took 7.848120497 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.862820315 seconds)
  done (took 11.21864673 seconds)
done (took 168.610388624 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.453126137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.456228918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.455684289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.455779221 seconds)
  done (took 27.174084581 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.496828794 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.494617939 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.495636194 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.506109401 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.497778285 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.4968072 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.488830191 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.488517568 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.50701308 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.499077698 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.496047033 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.496401246 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.497596899 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.487599429 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.496940395 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.498615289 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.506647227 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.497666488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.48808805 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.497972119 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.463065068 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.507494626 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.497882042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.462845462 seconds)
  done (took 37.224689327 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.98450633 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.53236295 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.615915502 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.513436962 seconds)
  done (took 8.0017316 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.512863849 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.516233477 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.528355381 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.566935311 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.602527051 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.524772058 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.490891282 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.485773939 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.470457222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.518316566 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.59127847 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.533501462 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.621196702 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.464509244 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.653893705 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.464351108 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.463541957 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.517310152 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.567484462 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.583133311 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.465451102 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.514004638 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.518945144 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.533983495 seconds)
  done (took 38.067407758 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.464454521 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.469928007 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.464744136 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.461390789 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.472148407 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.463560698 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.463859844 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.464571582 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.462426264 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.469571547 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.462360463 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.475178791 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.46286124 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.463043803 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.470369443 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.465276453 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.470264684 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.463216147 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.464504897 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.468056225 seconds)
  done (took 30.680902825 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.456770513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.313692834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.809148217 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.712095106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.458961233 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.450977781 seconds)
  done (took 28.562720083 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.553212033 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.732796565 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.458238807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.939599914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.039272299 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.486520227 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.466175214 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.761547135 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.182377209 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.176834484 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.52999581 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.551677649 seconds)
  done (took 22.240651761 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.476981126 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.459492056 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.460200126 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.49727862 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.535133387 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.490218459 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.468693623 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.458766627 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.538260075 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.561523712 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.490062811 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.539544442 seconds)
  done (took 39.339793789 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549591611 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.509356823 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.661465416 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485724417 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.214174198 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666903217 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.536211022 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966445472 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.459751305 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735934992 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463276914 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544768366 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.720025946 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460959978 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464402882 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.668160847 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709885235 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065807592 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466926806 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.246359187 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48775406 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.471893642 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.36931051 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.498415922 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674864255 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.605698724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.723363044 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.241001962 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835153346 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476709915 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473305537 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459499558 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735403349 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209071471 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574324218 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470457579 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481106354 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.00697778 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.444156649 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.24862107 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479679694 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462185618 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472452925 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464349696 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.399455057 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461288752 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955903267 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.463704824 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.177787942 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.465719207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47583693 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55904783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.468213212 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.039641589 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46789649 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.467626727 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.462921378 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487550012 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062809058 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.628224905 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473422228 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.401609492 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467729347 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338545142 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215027114 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.581921819 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.47036021 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469291887 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41397575 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.31573689 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484189115 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612188313 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.4821324 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15892779 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325576322 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.488856776 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402887212 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130236622 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478528155 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.402198332 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694692206 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.24550474 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408061604 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.410795049 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.40151903 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337256361 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477380836 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.060618983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486976416 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.981897394 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472152719 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483124348 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490307389 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.69445846 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.344844087 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468617021 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.481152986 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.584290931 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482700371 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95618004 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.409164298 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.4649614 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728773281 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.67853461 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482321667 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.689736768 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74953779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473079212 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.485481994 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.480247847 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.481716535 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.181870675 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502780274 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.625026215 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479419627 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.248014671 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363259176 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486084145 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.570789628 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.482016845 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763823735 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.39124393 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.357093389 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538389998 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.474592517 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.470188409 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369297697 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069842789 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.353632188 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.465033939 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469964654 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.483153236 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.47092487 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467277976 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.463964964 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480279761 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.243810719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.695995479 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481859605 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.746265871 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407628028 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.612261312 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.512430446 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.688969747 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.985411857 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.485324542 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.733550362 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473724244 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477238472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.485189036 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489952859 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571291763 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493304947 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.491359153 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.730929125 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.472259216 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.476396178 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.407129475 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.253811835 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475132474 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.479201887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476285746 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204800176 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481120922 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.47360636 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36704918 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.486098126 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540094716 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.478005922 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481947214 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.774722127 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498395448 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.472291908 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.470637532 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689648913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484989492 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.383311394 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554915288 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.717660858 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186215358 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507523241 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.409656674 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.185711543 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.169137385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.473257834 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.66739781 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.475090971 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48242615 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486466377 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.473050229 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.206124871 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496160511 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.297272058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.482498316 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.486054636 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.481231837 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475387865 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.766694185 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.690044746 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46840965 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.506904542 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619820127 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.488275324 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.410340079 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.991130852 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.480738515 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4758496 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.252661461 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508261303 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.307900491 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01414482 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730006431 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478910348 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.481275047 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.515456485 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.516236369 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.479211974 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495506541 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485853095 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.489051858 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496506637 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.487130994 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.209356259 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.877001688 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038940974 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344709651 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139698479 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667152171 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.494364022 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.381046782 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967723876 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404712419 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.138943226 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719401683 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994878293 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465591714 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.724837531 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.906847284 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.451220952 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.489965213 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707347539 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561311871 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.477224206 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484134942 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689802175 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514293444 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.4803855 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.419913001 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.988197742 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781204536 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.490057444 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549076958 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99745677 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474786155 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.254071896 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.529479022 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.036141956 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716382091 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.02817955 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.906538945 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.487802173 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.484648335 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007458917 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.478843363 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.010174594 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214445287 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.504593871 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.727855769 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413127412 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.491454363 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492003236 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.476310911 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.248448465 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.481565909 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.730268634 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490012591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415041424 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480384188 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145779176 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.35653715 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.486752842 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48112997 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390536211 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483959193 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854339322 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.496867598 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.675294225 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499248366 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.416348765 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416804274 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.174235619 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485898927 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469949672 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096896757 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.49166486 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488719911 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481949553 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334986 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.741027197 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.495353795 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.214712308 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.729688365 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479654499 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519941392 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.583152163 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.495064877 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.455047436 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.391185326 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.720060533 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488893687 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.727059982 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.710333007 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.383547543 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.542362243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.688176579 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.370935412 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.502732515 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775921422 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.207123245 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.493343774 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342441152 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519806213 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.503588076 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.525657598 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.475260293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496583955 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576503525 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.495309937 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.494162327 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.495274203 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703486721 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485205531 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480578747 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.497864757 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579052185 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.680483013 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.668336669 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.250253167 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188346005 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374559052 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197680406 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510616603 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486912936 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485059194 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433132346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630874362 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.014746646 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761664876 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.609189905 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.481456736 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522447974 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484086079 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.517740919 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701310673 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761961931 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463190111 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490167256 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.275984186 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.368747255 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498645627 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.698599483 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108008455 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178244758 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600211134 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.486844209 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.974860528 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753847216 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.580162343 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.486362429 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086161721 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.508234653 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.031651774 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.51449894 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488045525 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628199433 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496831924 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232146046 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510396052 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.649881783 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.261515142 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426499511 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.747594329 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.045277594 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.493113529 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224455096 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383824468 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753091545 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554033571 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500295399 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.600418333 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.630683281 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.497368351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.379929242 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487198954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336164005 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.19886503 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.500038107 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197638184 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766941881 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.47903611 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.495466842 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503650318 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.500126969 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.714686541 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351851188 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715386031 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499533203 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493955672 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.064288634 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189335296 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520354904 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43527221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.486308022 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783795091 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741747611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514309546 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.945754383 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.204473936 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167587004 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.467141554 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511405829 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.509243967 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360226923 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186890408 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.706316002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.106196379 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.15359437 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.508154144 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765467429 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.497023859 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.491885608 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767690902 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.494662456 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.499130695 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504315406 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.19517863 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.43063387 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.499590066 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330005975 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.430672873 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.721996875 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490358843 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436369372 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495709611 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.716700333 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.493277424 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.618761324 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495823834 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.497424898 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485846093 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.248579006 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.807180926 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.490901776 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.486564638 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.464626841 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.507688443 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517315167 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.814904744 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492679206 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.168819474 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.84584643 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.75077388 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.491928245 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.471863483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.497823097 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493015041 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.249732468 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.517487519 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486087611 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20195145 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.50201428 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.504680315 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498204505 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.712208887 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708204917 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.493624979 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499809637 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492626943 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530838487 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.400508842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.297525958 seconds)
  done (took 1736.526889388 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.49452076 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.528448922 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.538483377 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.538507083 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.558364862 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.570351049 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.504062618 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.605306641 seconds)
  done (took 53.729354117 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.505354824 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.658181462 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.522826311 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.498712784 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.497988008 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.506372457 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.066780971 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.530561338 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.497194159 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.500165907 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.514351592 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.504316746 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.289575028 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.506554015 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.497084235 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.486812935 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.497503979 seconds)
  done (took 68.480094269 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.495871487 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.767004661 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.545448381 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.492588294 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.54465948 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.523390574 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.651409899 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.583079998 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.49112908 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.910884349 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.151553766 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.527625973 seconds)
  done (took 84.080293011 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.505854946 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.504180972 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.505579113 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.5043361 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.505778204 seconds)
  done (took 8.920697155 seconds)
done (took 2184.385774642 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.743319335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.399563308 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.276258058 seconds)
  done (took 6.069642579 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.645703682 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.694904595 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.82211764 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.850084032 seconds)
  done (took 8.410755778 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.782394925 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.867023038 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.687821866 seconds)
  done (took 6.73341938 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.282340318 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.516972406 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.49228924 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.500961002 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.500665283 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.501983895 seconds)
  done (took 20.903360342 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.502735589 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.505014003 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.503451672 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.507670353 seconds)
  done (took 7.416479675 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.478912763 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.202553862 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.479872097 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.496138669 seconds)
  done (took 19.054706279 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.25035996 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.262685472 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.246270005 seconds)
  done (took 8.157893398 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.510654477 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.341727786 seconds)
  done (took 10.248404801 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.815924252 seconds)
  done (took 3.213856241 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.634752364 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.838888556 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.75327415 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.690688843 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.770385372 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.309127639 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.658450426 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.038379134 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.659164866 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.381931574 seconds)
  done (took 33.135259113 seconds)
done (took 142.774774566 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.090004737 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.896163921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.706529718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.058488685 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.725006003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.708142695 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.001259423 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.027453565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.573986595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.551997148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.099508972 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.726736467 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.723155556 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.904438228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.722384927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.515482326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.734953906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.139143775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.500351265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.493003019 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.993520368 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.69372023 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.932215282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.711783166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.725155543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.6565476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.278575341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.516041249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.520112848 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.293302103 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.653013016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.502856811 seconds)
  done (took 206.774015085 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.512319527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.495068553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.515216896 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.495338492 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.514928045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.496103344 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.514916906 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.509041963 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.495854443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.49580039 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.495851919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.495405794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.517336524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.516037125 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.495024465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.495362971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.506704352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.495388203 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.496327548 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.495350126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.498423034 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.496931805 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.514405527 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.534296552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.496328996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.520958777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.497014867 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.495593197 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.515688133 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.496913917 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.499248746 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.507974186 seconds)
  done (took 209.529852131 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.50281487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.496413921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.497996299 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.518852284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.497953588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.512035505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.499792346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.534771218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.499567202 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.498394471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.516031425 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.504959733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.499129273 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.499497187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.500093343 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.497454865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.502089954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.498184303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.52995835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.50159529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.500556223 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.533784561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.49746214 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.521993756 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.522195512 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.499338341 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.498512414 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.498615766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.497853953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.504691062 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.49862477 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.499252057 seconds)
  done (took 209.584504306 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.710922131 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.514584777 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.516256348 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.4720243 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.515214614 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.5149976 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.514680181 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.709085258 seconds)
  done (took 15.873141552 seconds)
done (took 643.16157046 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.13152023 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.899873049 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.739163902 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.52813082 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.464291925 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.547581833 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.535805435 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.751838056 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.534219568 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.758036105 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.91835751 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.54524581 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.076674037 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.525942177 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.839696534 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.654939278 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.481923252 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.654656977 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.910299658 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.233054934 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.835661406 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.234979887 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.762100137 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.512208523 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.081654176 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.155721748 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.506522458 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.515007684 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.555655589 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.920201808 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.480358444 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.773277729 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.618421694 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.604738355 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.663940083 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.645497341 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.756896459 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.615725184 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.758572746 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.905308049 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.225462879 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.321158793 seconds)
  done (took 103.585804867 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.497316242 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.499647912 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.499742099 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.49960787 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.500192515 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.501031445 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.499687518 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.499460623 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.500380496 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.5012789 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.496783039 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.501909121 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.499720504 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.499481804 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.500143316 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.499664527 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.499098027 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.501856529 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.500103305 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.500713797 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.500219593 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.501080679 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.500759871 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.500534654 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.501483287 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.50245047 seconds)
  done (took 40.411952033 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.520123537 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.804305265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.984817148 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.518626807 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.520073404 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.525867377 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.623807643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.522863556 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.524834962 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.522858162 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.714600969 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.516298068 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.560167072 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.027492801 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.515715462 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.521130653 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.52207395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.520425292 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.810546408 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.521553561 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.649148613 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.524400799 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.623102534 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.531644671 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.547846938 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.522796932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.525196275 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.0730587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.535274022 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.714049066 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.531374038 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.62183739 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.028824138 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.010419448 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.530413269 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.524458688 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.522586861 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.717119282 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.516090185 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.52221447 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.623554989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.523726604 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.995316116 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.181643482 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.53822517 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.524148019 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.092858717 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.729866515 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.839616085 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.534297541 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024580535 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.518519927 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.525760139 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.52611284 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.848869674 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.532635672 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.522383295 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.109066519 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.544211523 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.624352418 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.522491172 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.525390118 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.819609688 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.516767035 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.804305888 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.518003617 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.532539624 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.545910477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.998918321 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.520733513 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.207237079 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.540572718 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.524767141 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.715320416 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.797114282 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.118491162 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.539583527 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.820265414 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.024412683 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.632450258 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.522151408 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.051939153 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.640617702 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.522148102 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.527944491 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.527719734 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.526401025 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.573845341 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.619941035 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.127767334 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.208770286 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.124355386 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.639823893 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.531417468 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.526530565 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.109957608 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.544213668 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.527359431 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.99249587 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.197705805 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.541752372 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.534699194 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.213744834 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.542906775 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.627028226 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.525754429 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.00709661 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.520605482 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.573861645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.52950704 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.534938734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.551990378 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.62623905 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.526302051 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.530237814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.182999104 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.738964463 seconds)
  done (took 200.420789201 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.522245912 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.537274427 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.521133417 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.531953703 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.521985189 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.529976051 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.521713152 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.521130563 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.528342063 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.521121864 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.521736561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.523467294 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.514640027 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.524465913 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.547231411 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.528575813 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.136726868 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.523834338 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.523722836 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.514847855 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.374222134 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.524740491 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.522975731 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.515929734 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.524678048 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.523727936 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.526543543 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.518759897 seconds)
  done (took 157.566611152 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.532025689 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.227027366 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.543380707 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.695041923 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.548785107 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.529414685 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.695199867 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.595643128 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.543308364 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.527940455 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.529881882 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.901761653 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.525280327 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.170172991 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.770384392 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.715986106 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.161809383 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.543861911 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.530989805 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.530309118 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.69463504 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.53041906 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.90538669 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.222192699 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.54505025 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.231555558 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.50796346 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.534188703 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.53058674 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.235880736 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.542556369 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.908305351 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.625485835 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.611865398 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.2549279 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.188531043 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.190377335 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.712957071 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.525664558 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.530510683 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.531195476 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.515798241 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.232807228 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.545740653 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.533741472 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.222881845 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.548494661 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.535060826 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.538238904 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.531194557 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.611003877 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.63026395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.928782148 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.232335096 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.647475195 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.546080075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.698577682 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.933732818 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.527171141 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.181909305 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.508326721 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.238971284 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.5473212 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.515438411 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.534338578 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.538860441 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.723917314 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.691083749 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.169436106 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.545493267 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.175556093 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.734766903 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.525716267 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.534760107 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.537068447 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.239131143 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.192017064 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.738842844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.695202017 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.77731792 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.519866631 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.533626228 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.517820808 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.636711402 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.536142323 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.24249327 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.19075223 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.548910177 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.536381136 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.535177139 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.536026107 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.765469656 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.265992735 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.648210192 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.174147052 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.927620135 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.903648414 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.530003707 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.612837589 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.547028308 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.919461513 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.53012664 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.613079668 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.008233382 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.913618423 seconds)
  done (took 184.801909707 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.822453523 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 3.014712461 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.646262552 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.68802548 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.210625489 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.138003848 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.915750573 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.692771544 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.673471848 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.844298742 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.980345772 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.626477158 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.757362529 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.630444798 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.344075932 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.637094519 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.667923023 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.701227598 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.677317742 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.639234232 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.254542886 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.847489598 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.735514461 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.717505331 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.650966972 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.465328934 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.151612284 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.10929846 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.728424032 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.115107218 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.116383534 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.765386095 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.620454084 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.326236896 seconds)
  done (took 74.339710724 seconds)
done (took 762.53365752 seconds)
SAVING RESULT...
DONE!
