cset: moving following pidspec: 4538
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.461450181 seconds)
loading group "string"... done (took 0.503038106 seconds)
loading group "linalg"... done (took 9.350731734 seconds)
loading group "parallel"... done (took 0.168086799 seconds)
loading group "find"... done (took 3.168217297 seconds)
loading group "tuple"... done (took 2.122778155 seconds)
loading group "dates"... done (took 1.422454699 seconds)
loading group "micro"... done (took 0.195472707 seconds)
loading group "io"... done (took 0.519051889 seconds)
loading group "scalar"... done (took 58.290925225 seconds)
loading group "sparse"... done (took 14.165796801 seconds)
loading group "broadcast"... done (took 1.301421321 seconds)
loading group "union"... done (took 10.62843897 seconds)
loading group "simd"... done (took 3.676350095 seconds)
loading group "random"... done (took 13.890845698 seconds)
loading group "problem"... done (took 2.437762664 seconds)
loading group "array"... done (took 24.389358544 seconds)
loading group "misc"... done (took 1.130397932 seconds)
loading group "sort"... done (took 3.795400066 seconds)
loading group "collection"... done (took 21.994893774 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.707291125 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125448409 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201062464 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.196882104 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272131618 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.16388123 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157396847 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.126181289 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.64332542 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.207309193 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136018752 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.361477343 seconds)
done (took 6.071156298 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.30312367 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060130458 seconds)
    (2/2) benchmarking "String"...
    done (took 0.191797529 seconds)
  done (took 0.960383842 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076197334 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156572261 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106184261 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092434092 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092468214 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.107577542 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092768821 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107627028 seconds)
  done (took 1.459242529 seconds)
done (took 3.50351277 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.493991794 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.970838589 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.544457029 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.187664682 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.365535962 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304615018 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.262639973 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.231050163 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090426421 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084724522 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195709054 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.499357062 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.398327784 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.019345895 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068557746 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094672468 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.159221123 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.849186961 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079076673 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110215667 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.518612741 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.218113155 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115305419 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106179964 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185020305 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125807776 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.13932421 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101342847 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.731026932 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132020571 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210810196 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082066237 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.137244943 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.162235038 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216771498 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110080636 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.73858256 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198290187 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095542474 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100472914 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.739322622 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121870858 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208396364 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106174136 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068173379 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17241942 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.113086883 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077815786 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092938425 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100452806 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168688289 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.46612524 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105391078 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.196404339 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093236496 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.76114081 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09556575 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280015084 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126263706 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095663533 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090405485 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087916944 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166399383 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094400538 seconds)
  done (took 20.796098118 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.190351348 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.208774518 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.099005166 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143899329 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140713597 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081433662 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087045958 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094579061 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.113596443 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.194644753 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.124557643 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.215507178 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075451937 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108621846 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.166370076 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251849633 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106924069 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122264335 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089716558 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.09370056 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142941933 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095830444 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.093727867 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110666023 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169229036 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.202648085 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109828544 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122236259 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089431336 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09722761 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142899227 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147022084 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091522666 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088914159 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172614916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122570368 seconds)
  done (took 5.434393096 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235330437 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103365154 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.215887924 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246894834 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.188991445 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127475377 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183132181 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192919302 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.305712 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.256672793 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084507387 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16217971 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127376435 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100856597 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09577725 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079867445 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07846733 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.831985572 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.15272504 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.163188327 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.189623959 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111632438 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080693459 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.722298404 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101044229 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.084553894 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.110253577 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06476279 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223303155 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095176524 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.476605457 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082069307 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114854677 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112855679 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207483068 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122254086 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121148893 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111658711 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084834944 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.208515047 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.099124465 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.10015538 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077656649 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078013268 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13257526 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114427129 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106401301 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120179776 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.117795605 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.10142613 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107998616 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.078273806 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19557163 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.161466129 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102719254 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.278920112 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106347402 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097549833 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109617417 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.788347847 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134702301 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082259618 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094027621 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095061708 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079115734 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.827746158 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102642697 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.488572078 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081592022 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158346669 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095104117 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.114467562 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084853411 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084389916 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124391378 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084697718 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078517834 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102626019 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080141235 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086644931 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129150291 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085280739 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096178104 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145846304 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095877033 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120802155 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108080452 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.103564513 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085273718 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127306417 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082274552 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087206186 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.204462614 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.11357551 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.11289032 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.083965615 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112284328 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143227467 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086446353 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257321614 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0977946 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122902394 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097534554 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115084793 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111414629 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080830469 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083059218 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095334081 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081544704 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14746356 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099795477 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080828623 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.087809069 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109906487 seconds)
  done (took 28.149926829 seconds)
done (took 55.079795168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.428275745 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080315943 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100550462 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081581853 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080647161 seconds)
  done (took 1.548841607 seconds)
done (took 2.302078136 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.29843755 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.195958274 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087616107 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186710791 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086840615 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192677535 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162599007 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.118284479 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204538023 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084690139 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.187620535 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084969211 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086385598 seconds)
  done (took 2.756910898 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104837973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098689362 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102764393 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119778305 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086212473 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101770609 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119240528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10944928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102630804 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111575791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086863982 seconds)
  done (took 1.904733327 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100731747 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097489595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092963736 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117527524 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08697185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098566899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116032553 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107247357 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099456747 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111644309 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086474176 seconds)
  done (took 1.873369976 seconds)
done (took 7.288865807 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.205246837 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.005965897 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.181731849 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.247770605 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331815167 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.299329093 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611517052 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202961893 seconds)
  done (took 15.97308084 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.224852174 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096128477 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.089699046 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097133993 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110861225 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090741792 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094870981 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.113146407 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096894271 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091884324 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115142092 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09206267 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091597087 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095736454 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107750855 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095308828 seconds)
  done (took 2.524537338 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.134966967 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116480001 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116337336 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0992606 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095845019 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117315419 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102046415 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.097076015 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113800324 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094827248 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.102640754 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115320903 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.097769893 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094739528 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115723017 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117628574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.094523945 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115395947 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116764141 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098962195 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116143879 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096932999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.097376413 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116546044 seconds)
  done (took 3.426518074 seconds)
done (took 22.683947943 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.140561573 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084806782 seconds)
  done (took 0.988463193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.168334343 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184919549 seconds)
  done (took 1.123225615 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.11194079 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091086678 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137901047 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103735185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091331257 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109563677 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115264516 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09165872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.109099356 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092067196 seconds)
  done (took 1.825868157 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094486558 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09640541 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122389285 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16071438 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119177135 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093097249 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096036953 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.114920441 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.09712887 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090531704 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115082658 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109766793 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096144299 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12706489 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096009681 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.09626008 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117449333 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095035037 seconds)
  done (took 2.708292895 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.09148527 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09175476 seconds)
  done (took 0.956522875 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094666926 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09032233 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092479133 seconds)
    (4/7) benchmarking "year"...
    done (took 0.11035056 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090555253 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090359593 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107510331 seconds)
  done (took 1.449080881 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.523117285 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.238568985 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.374485921 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072946491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121753471 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30358699 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.122515086 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072587927 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091723757 seconds)
  done (took 2.728028633 seconds)
done (took 12.548671347 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091709533 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.208332088 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.612036413 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131742612 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09279747 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.146940836 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.345031065 seconds)
done (took 2.40920317 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345741893 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.1795813 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085704361 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093122475 seconds)
  done (took 1.479340836 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082667419 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098577804 seconds)
  done (took 0.966646271 seconds)
done (took 3.230793756 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090387306 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089395829 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.111799276 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.109379126 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089344652 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.090024419 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109674267 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089706155 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088781084 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.091917322 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.10979572 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090288795 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088810311 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106189532 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089566515 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088718978 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089235349 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.106521082 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08885633 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.0893479 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089365346 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106638088 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089044818 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088950348 seconds)
  done (took 3.099533575 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112425583 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091755473 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111022332 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094207731 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094266336 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.234106563 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094097516 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091396198 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112094267 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.09207942 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093309594 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.094004494 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109820352 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094210668 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090845787 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.112912769 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094268536 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092328576 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109679526 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093951299 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.094141781 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110217943 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094105947 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093609759 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111678345 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094616482 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091795789 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109919163 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094690046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093922539 seconds)
  done (took 3.888321588 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096352298 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.087233045 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089380944 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117219604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.08743921 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090603758 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104682655 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091132251 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091237725 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090119122 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110780815 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090734605 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089187265 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108427325 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091834521 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093915351 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097799343 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.109818416 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.089951637 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090950028 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109900742 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090913424 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089920459 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089740437 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.109291217 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.08815093 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090349922 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108220189 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091116879 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089681196 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092561878 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.11175679 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.090218418 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09882997 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110635586 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090585346 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095185058 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105345517 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092592626 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086366842 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086950436 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107904769 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091080218 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096137934 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.089650384 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.109261242 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090091182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091787548 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10852204 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09345191 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087062238 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090490536 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.110960945 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092077124 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093166654 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.105978633 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090596505 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088314226 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.108617845 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090623177 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088142476 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086561229 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.113792943 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09160982 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.104224887 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114412861 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091198505 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091563881 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090966382 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.113617331 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.093190256 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100395723 seconds)
  done (took 7.74436542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.113865855 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099526419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110912534 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09213607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091414426 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090403979 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114112978 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091120877 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092177479 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115108532 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09180687 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092413185 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109303951 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093058996 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092039293 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091644493 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115010097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091388461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090612455 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110560669 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092101244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09500717 seconds)
  done (took 2.97172204 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216435245 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11631287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139797585 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121903801 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107056193 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120640981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095398445 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096501786 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112643827 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100902365 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100104012 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113680944 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108532374 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100054512 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118582148 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102288562 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09493668 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.119925123 seconds)
  done (took 2.882732322 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104001653 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09230776 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.154624081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092207612 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092620111 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112128236 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098100269 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112023612 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111425046 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093724688 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099956346 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110936447 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094169399 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093095294 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094024016 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112105054 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092601127 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092744645 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117864526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098103722 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097281091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117342582 seconds)
  done (took 3.080110363 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105143379 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093291601 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12789858 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097108485 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092388818 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092007961 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116210433 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094355341 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098171337 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112409017 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094475225 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091681786 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125198962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093748429 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.098224909 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111027013 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094126628 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093868274 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110873022 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093708359 seconds)
  done (took 2.833749749 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.187136632 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128224956 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109698154 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115887578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128249751 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109003129 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135344953 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109522078 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10940614 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138383654 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108677875 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107911646 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134588941 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113708937 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126110464 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117167843 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1154009 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137999744 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108358729 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108854922 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138235497 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109732605 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134141431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108308997 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110223787 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128762572 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108806003 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113097724 seconds)
  done (took 4.203375262 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093726452 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092457735 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092582052 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109591991 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09231266 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091496125 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091390032 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110351741 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092175432 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090968746 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109817339 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093220608 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091945105 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.092118271 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109618483 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092015634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091735217 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.090983354 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109889568 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091347332 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091012262 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109807592 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092070271 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091325402 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091669931 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.111611666 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091678271 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092476309 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110628201 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092099271 seconds)
  done (took 3.707750102 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10391694 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100648455 seconds)
  done (took 1.008614147 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099209792 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105707045 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.09109324 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110948803 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098526835 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091968101 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117932131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098722626 seconds)
  done (took 1.618990018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.185850603 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210674119 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.116144701 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104128285 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.210502662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.189703382 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129981701 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097367458 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112106228 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085302044 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.203770846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083686184 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090440943 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110481395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092407916 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097336436 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.113186952 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.102359137 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099583228 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113780647 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098402053 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096260488 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112706679 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103604651 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086033052 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114466875 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095119755 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103124144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107773738 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093922306 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090570472 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.111876047 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096755475 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0969425 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093573997 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.207546755 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119687474 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089065204 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092779863 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118109828 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127007467 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093063 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113744137 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091931305 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.096014012 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115230454 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097860241 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093923177 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104358511 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089577998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09477048 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087812074 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.112246296 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093373061 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091852482 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117729972 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094629556 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089919328 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108033892 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089077556 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090961988 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106659582 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095944702 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095561172 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11136691 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094051437 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092272017 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.11230565 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095064085 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096172832 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091597753 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126365943 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092996571 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09690102 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.117692764 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093778884 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089811876 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118180884 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091472283 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093492838 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.117133998 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.123078513 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094425889 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106809483 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088601689 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09999974 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113270683 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097071946 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086268914 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12034068 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096547969 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094833726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084624703 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110341473 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089359943 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096054551 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.104167717 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094304163 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092083306 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097062691 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117089462 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091437476 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093206886 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118163674 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.098483454 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091396228 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164279178 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089812946 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10996289 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094273697 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098271076 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108020755 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092724951 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09341915 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089562122 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109492162 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0979697 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092324194 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.115533736 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.097378348 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094170916 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113873523 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.095038514 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09252965 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.108965042 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097787765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101692343 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093734846 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115646422 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095036823 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094480273 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113122335 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096752291 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089790315 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118626487 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091287726 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09489968 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114117451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099231185 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092670449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088725131 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.111453272 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093694173 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092181123 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.11705773 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093726693 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088913417 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106320814 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09407152 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088401304 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114737194 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101950886 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088996283 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.115511827 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090274245 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101445903 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108149972 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099336953 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097139773 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099105999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117983416 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085711819 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089808049 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.116107126 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095874424 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.089617906 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.115636451 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094859983 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09982798 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085474555 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.117162049 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086116097 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089993386 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118661764 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095375289 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096805277 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108179039 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132344083 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104570156 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118373308 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092427459 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093108454 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.11859209 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093270086 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097780358 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097941015 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118707144 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090492725 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091975235 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119135722 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089756031 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095008243 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111876081 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095359707 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086096582 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.11536572 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08655024 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09785262 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.096697787 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.118307363 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098850169 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095690374 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112537878 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101598762 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089423741 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.117577552 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08646865 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.099397252 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.123780211 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100174948 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100432476 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093874599 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112364739 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095389234 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101249068 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.116981641 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093906066 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09525659 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107344709 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088245689 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100794117 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.115997422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.091626558 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093846506 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094403725 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115550796 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.091993814 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.086269938 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118794519 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096893802 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.088678218 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114733269 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092706515 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091313493 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121353692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087918884 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090578066 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115193423 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099606428 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09378862 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093522643 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118312091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099539094 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096269285 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.116451705 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091192936 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101462236 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111092939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094804377 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090096724 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097650035 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107561036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.09615116 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093997437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111312758 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090204655 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097092502 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121066484 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.099608717 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092537174 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.118684022 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100403499 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100209056 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111752522 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.09989766 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.09089197 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087776288 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.110509323 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.087184933 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096215596 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110582731 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099653622 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092363104 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11312565 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.098938233 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096419427 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111028104 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099757244 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105328821 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108184519 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087890398 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092236423 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112221319 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091458234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091494197 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097081193 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115757698 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098173741 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09651677 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111220374 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094427298 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101083826 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.109893729 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100792101 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.09995234 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120057885 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091068493 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098597873 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.09153283 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128344986 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088082775 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094705907 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113265967 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0946738 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091296756 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.112883358 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089746579 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.0880213 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.111144759 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101106568 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09353897 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.098710914 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112988513 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091856584 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090784918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111123615 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100445162 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092771508 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.120696089 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095013446 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087908303 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.107447383 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.099916924 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094923571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100004397 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110261935 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097715532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0999518 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.118534712 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096251627 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102046992 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122450034 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101351468 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098368232 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.107673103 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092064846 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098824097 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.125326108 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.098710144 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096450274 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08874402 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117410433 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099740631 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095996915 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.113370638 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087827824 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096694892 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.120377741 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098677103 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097084241 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096715143 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116392695 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.089467737 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098678716 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119969211 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095540798 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101224998 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113505205 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098987628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091189999 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119764251 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096760687 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.089070978 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08769068 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.112512613 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101095526 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089049094 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.120729657 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099788101 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091327434 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.092310555 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.119283384 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090889308 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096873198 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120051718 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091703818 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104757166 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11656503 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092540803 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099837826 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.118808216 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08820034 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093172213 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093222907 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122006874 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091972469 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099707227 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.11470191 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09944353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097850176 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.12100882 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100964967 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101292648 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108000713 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102349821 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098231094 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097366461 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.112495359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092272841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089950489 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.114135406 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100282345 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092499652 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124230352 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.099493919 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093459422 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112254303 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101656815 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093425296 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101792844 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112422461 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095593387 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088535624 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117971217 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093313873 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101695674 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112715497 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089425983 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100604065 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120448574 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099913956 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09662266 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120807411 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089776045 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088212034 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097496095 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113332096 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10498929 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096784217 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113837822 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093474773 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.09755148 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.116036541 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101963531 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089194769 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.091179088 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.115385696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096131423 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092826572 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110932138 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098809067 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093285858 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116777512 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093977776 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.089959063 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114025681 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10237036 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093624319 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110891949 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092779857 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10177427 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094136344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112886226 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088575192 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100555018 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.118426526 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101151878 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091614853 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.115711035 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092451234 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097423637 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12179907 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092744898 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095850118 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112449983 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1009877 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099827675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086821884 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.112803399 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104333727 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099412323 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.116583381 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097529974 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.093377709 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122115879 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101769472 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097478731 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108719427 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090503746 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093930026 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088718315 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119014413 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09945298 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093307896 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113535153 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099045996 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098812564 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117408057 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098262468 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088674982 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100770302 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113221078 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097394306 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087963104 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109805226 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097282108 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099923554 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11342375 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095783613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096701811 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096944662 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.110696425 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092958717 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09717673 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121050841 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101497937 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092711271 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.114112852 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098433931 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10429751 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.116805524 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094585707 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102017806 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.121025844 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095520912 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094039585 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122277515 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101882011 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097257366 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.100535299 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.114375643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094460875 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100984556 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123754818 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103851134 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092968747 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.110266463 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099006997 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092521559 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10988155 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098651926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101502171 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.121602169 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094874536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091726065 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103175532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12103434 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094949536 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091565894 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11374452 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099215138 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092125698 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.119406633 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093161268 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103151733 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.121828019 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101769899 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103168139 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088439426 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121313735 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097669729 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102882837 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.1188952 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089445159 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088973347 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117691476 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10208445 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101204903 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099138575 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120360501 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099536228 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094795692 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116701128 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092227696 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102331516 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120602836 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09713183 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096512726 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113712501 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096665809 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097332528 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100637897 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124745871 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09579745 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105365283 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120983934 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094518392 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092148343 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117310989 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099193778 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09584599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11934714 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093244082 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089310946 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100247817 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123437048 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094141673 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101701131 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123373092 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093644884 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097656094 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12484957 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099850813 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097626392 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115332697 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099266779 seconds)
  done (took 62.111708274 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143251891 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103744649 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1192016 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097859204 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114130536 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120743544 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097821561 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098994425 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119129367 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106652453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09733469 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118675544 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112310939 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117484511 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135350962 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107332757 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096960975 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.119827642 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098513805 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098726405 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132925946 seconds)
  done (took 3.217407196 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114437539 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109981966 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130810263 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110716792 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104079627 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129341136 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109359813 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128886335 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110359205 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104937722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132018139 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108262822 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10514154 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126437078 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105716843 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126426347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111649375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104200242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130142635 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10965119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105468296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.12908242 seconds)
  done (took 3.405063654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127589432 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100408848 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09573067 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118505465 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100494452 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09783949 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121378507 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.0987348 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106644462 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092461316 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110204324 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093770222 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097398972 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117690303 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093150076 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097759021 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126507414 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101560432 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102736327 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097514068 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109682117 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098387579 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097992513 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109311961 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104125323 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.102251639 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098330264 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122451379 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089363014 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100486854 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119453654 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092572308 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089212641 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088678191 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110133819 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101498085 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100484895 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.11990249 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098801707 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089547997 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118541608 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103721142 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089501705 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098004657 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120940823 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092053051 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101243362 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.117946969 seconds)
  done (took 5.84381333 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126280607 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155954427 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102059347 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126203983 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134767755 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107358102 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.100280515 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151162944 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10032686 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101060468 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.136118705 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111438178 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126160838 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104862753 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100770899 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125485186 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103726945 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101345904 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128536004 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102396444 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106283308 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124954211 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111790981 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.109768321 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126418581 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102511276 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100555141 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127697767 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111162931 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106123863 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.127336722 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10611757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.132608199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103913547 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101403445 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124748325 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113367618 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103115497 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.124947524 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100496148 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102656263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125445127 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104597843 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114058268 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124429863 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104592995 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102381341 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120796026 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110535862 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.102826948 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129872187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112653389 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103850601 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.379591296 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10543352 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132492763 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104055801 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102585015 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102545041 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131665056 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100597352 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104235093 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133317307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102264852 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.128166202 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112502558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.103804531 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126052951 seconds)
  done (took 9.013908238 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131432553 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105781105 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134668642 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113719795 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105040206 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128092354 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105676023 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104920956 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.129091315 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11020496 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105209825 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.238544406 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127473304 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110310985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104920405 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.129383622 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105467406 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105318904 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130029253 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105709828 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105278677 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13529759 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106837022 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134156606 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116755148 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102877873 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127761089 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105984623 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112018791 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128249339 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116199144 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127568929 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10664036 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11311289 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.138235523 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106906359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101422546 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128098722 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106374116 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.105394283 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.126040945 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114589394 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109383986 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125225728 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106500449 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106230805 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135118487 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.115355098 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133067468 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110833832 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105618924 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135804222 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105749061 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107083879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.136159848 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11955713 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135495405 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113400421 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126232827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113663242 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112845376 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142900569 seconds)
  done (took 8.266541027 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100328765 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099665564 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09900758 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121318653 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099657507 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098977618 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099274553 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121690989 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099630169 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099074636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120555351 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099894415 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099452782 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098917263 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121977872 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099217131 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09949309 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098267395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121078177 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099911701 seconds)
  done (took 2.974482089 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109356859 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117534682 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123078267 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107840587 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101825372 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128616569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102256439 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102106015 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101923748 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126422084 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109566041 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108773457 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123686652 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108415176 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108525844 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130166972 seconds)
  done (took 2.689619307 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118632304 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117072919 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.204008291 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105037324 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.125224662 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108304509 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102260367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126608004 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10137472 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106912664 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129476111 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104476424 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102195459 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102934771 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125751515 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104556296 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099475688 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127786872 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102802175 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207614071 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105356629 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103448886 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.126147766 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10573778 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103296098 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129789989 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108074851 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102336005 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125884355 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.102564536 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103306787 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130089195 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103762993 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105889422 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103260837 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126125791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103480994 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101328442 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126054734 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102056645 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104072156 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12481502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103730479 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104006347 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.099998414 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.125048349 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099979724 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107302651 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125165397 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103062221 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101552255 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129238014 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106805262 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109619775 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130818764 seconds)
  done (took 7.199024955 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112844258 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103407827 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.135576126 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101701762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103377408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102649152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127680115 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103925135 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102775332 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123463483 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104508213 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104015889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125700003 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104642324 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103969079 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103022532 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123420344 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103848684 seconds)
  done (took 2.873886003 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107435286 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102294059 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106527899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125300515 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102285178 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10208586 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123067225 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101800236 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100856378 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102127183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125135741 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102529346 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100601513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125573316 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102746118 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102056619 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124393411 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102149308 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103079928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101189129 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126145845 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10204755 seconds)
  done (took 3.279158944 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112862778 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.231493489 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10763771 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237947969 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098889867 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12281093 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.1086179 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098430089 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138953729 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098526149 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.121095138 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099027397 seconds)
  done (took 2.465485363 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1291186 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139969405 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126721585 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103644559 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111143108 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130552867 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108102723 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107277091 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137300247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117570629 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129569824 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114484078 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114926433 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137472141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111365493 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110075625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129032819 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106748561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103204278 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143249782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106914571 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137396964 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107688027 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107015093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128897288 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114672707 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114555568 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138924252 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10740753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1369194 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111736332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106628472 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138051802 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11773607 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125274879 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114546501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107473625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144214136 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111659566 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113911134 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126440752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111041091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1369432 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112027668 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114452698 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131290881 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112182067 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106930295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129519576 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126856204 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133873234 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114911423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110699167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138351741 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114137594 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150021058 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117806853 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136164097 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112364288 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116695797 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137847666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111082235 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136650722 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11787876 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111399291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137394626 seconds)
  done (took 8.903023482 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140712368 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10446642 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131777774 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119831521 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113975157 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130613231 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108881559 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106849867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132230492 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10517787 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173714218 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10820268 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115973222 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138293664 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107319926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128841214 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107818249 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115708149 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126608775 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127277809 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107858291 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139299709 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11455209 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1384714 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118539228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11123218 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130835668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108563371 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106922224 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129634546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112689429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130992296 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115865119 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104189522 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137553611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1077566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107820995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135188084 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107815189 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111336691 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138917409 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121462732 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131311751 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108369994 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118228137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131204463 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107701549 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104159886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130819283 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105080835 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117772941 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140316836 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118666725 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13757807 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108084087 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110695948 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12991835 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108947293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106934477 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134513308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115245748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130848069 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128137613 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107911899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131278418 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115253821 seconds)
  done (took 8.857220267 seconds)
done (took 168.925460778 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17540061 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215893463 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200307212 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.185249354 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093412666 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.167635989 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134178979 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202376864 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093744488 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094164998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116793395 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096468543 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.200426581 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093369607 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.119136232 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096620141 seconds)
  done (took 3.177357672 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195175505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343044338 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.1349298 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098387436 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101892535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098860629 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121202523 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101086449 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098020823 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12904479 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09972368 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094813632 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12803041 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095641315 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098445531 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121640259 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106983629 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098891398 seconds)
  done (took 3.169960307 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117229486 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151477713 seconds)
  done (took 1.173237098 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127796359 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212699842 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295486644 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170506505 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.118778414 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140310556 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147692968 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133477596 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188888493 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134266107 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11098822 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096568643 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148832788 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104193454 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114728166 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120796126 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127932595 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11286462 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135789935 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100817118 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122206078 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124178448 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104491446 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136836707 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179833961 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132918914 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103159931 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102104527 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123811466 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113342979 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105177011 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13832581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110712727 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177744665 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102522845 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.17495026 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105319841 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.1218415 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113394468 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099230425 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124285394 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102894211 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.111355758 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119554123 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103033427 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105000128 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126295804 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102280682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.106869882 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129452889 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108590428 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105501806 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.172085082 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128808935 seconds)
  done (took 7.886012761 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.90848065 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.146047913 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099068108 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.065104476 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144386702 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112391147 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.902447059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148690745 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249128261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.930856253 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115414 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106637723 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.262750975 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257280607 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266647828 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359882313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.766015455 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111019364 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131046714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16557975 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103817004 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139528355 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114273483 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455387597 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100720408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099311329 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126731151 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107245181 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176631292 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100276844 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102437518 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19568516 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.292891112 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212579521 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099728902 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121189351 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099029719 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186555718 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269176167 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21861569 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.16661451 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119892033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098870323 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103952455 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136784467 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097106364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182265809 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191424908 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168279352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126505994 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107676478 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.106558289 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125928598 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178070672 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098019521 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3590758 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36165078 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121545904 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105212705 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111686496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268841813 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125249597 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240124922 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121374751 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214871922 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122060089 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836135491 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163994514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122648801 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104127215 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104008674 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127713042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102352057 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18303314 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407705678 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127787127 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103773597 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099454298 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22786756 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099810869 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123087426 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.156524446 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124079042 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105369677 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128951593 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106678733 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190039032 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.246997062 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128026175 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.105409426 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126821832 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109907761 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101197213 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230698761 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229677639 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.177423732 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22763797 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104467622 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180832612 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162915615 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126870926 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189696586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105162627 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110525505 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125629091 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22881781 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135244937 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125184743 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104119509 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10555373 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.161273148 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103337036 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129744466 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165815152 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.493627182 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187931269 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097238863 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127550018 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106243553 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179123288 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105922767 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262625154 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106479506 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186245749 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12752539 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097781421 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106294694 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180356042 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10720625 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129194443 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103610663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108918741 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279424948 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219900941 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131786174 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248213931 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171330871 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127317136 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169273953 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128992002 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161964447 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132762092 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104042256 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100102149 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.818609533 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11050206 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105307386 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127410323 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182812488 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099538814 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12527248 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100111308 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097428017 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786916084 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126991955 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099029664 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102604286 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.126954344 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106355169 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10548325 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127135007 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156685134 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.272492008 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108765257 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104968038 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122931423 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155163599 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124929195 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100622308 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10039437 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.122662383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108062492 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104824546 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12632379 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16429933 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178016287 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231880627 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566810791 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123665556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100555068 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242667032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100157619 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.349381938 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106128384 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236119117 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182363793 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098046412 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.358962679 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.184150236 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205952376 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103611124 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.191127957 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098504528 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106027662 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180137984 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099877284 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130810056 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177621459 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109848151 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106802498 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273109079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123781974 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247429161 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0987369 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190406524 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102301227 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104990764 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327373321 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123810425 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111669084 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18110036 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104640338 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123371878 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.952034015 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125191109 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.110045295 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104476139 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.258725072 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.159841111 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130189287 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107163206 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131516211 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157976893 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227685565 seconds)
  done (took 46.602272854 seconds)
done (took 62.911784119 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.224306486 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166113502 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353581764 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.147944634 seconds)
  done (took 1.913013008 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.259505427 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16489864 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.244119337 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097025535 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.251213757 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.096473729 seconds)
  done (took 2.045867031 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.16970834 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165702455 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142419282 seconds)
  done (took 1.413074489 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208258461 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208078818 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345991637 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2330167 seconds)
  done (took 2.012512406 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.276602795 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116089435 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125630603 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.228607222 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.244009262 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.206815882 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123034283 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175122961 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.129841629 seconds)
  done (took 2.603200253 seconds)
done (took 10.917834541 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.371101331 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.352905962 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.402810341 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.13215268 seconds)
    (5/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.220449723 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.243612511 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.269059765 seconds)
    (8/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.158315218 seconds)
    (9/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108323309 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.136800393 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.40816006 seconds)
    (12/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109719644 seconds)
    (13/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.390178109 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.286800384 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.259289334 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100869705 seconds)
    (17/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.179265196 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.112134336 seconds)
    (19/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084766353 seconds)
    (20/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.109382365 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.147554628 seconds)
    (22/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172989996 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.203248588 seconds)
    (24/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.34471216 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.13161159 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.12189082 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125318042 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.254116756 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.131502794 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.276583577 seconds)
    (31/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077994902 seconds)
    (32/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.239303625 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.327000557 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119835615 seconds)
    (35/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.122325194 seconds)
    (36/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.263730205 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078363291 seconds)
    (38/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.178059534 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.124034269 seconds)
    (40/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116179267 seconds)
    (41/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.232463596 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.200072021 seconds)
    (43/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161694303 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.205849461 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.162086702 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111888293 seconds)
    (47/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148799185 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080596619 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.144749759 seconds)
    (50/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.143501919 seconds)
    (51/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.31978104 seconds)
    (52/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.217843943 seconds)
    (53/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106248011 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.187875543 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.306961245 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077843173 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.126690554 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.240556482 seconds)
    (59/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.197059508 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158760974 seconds)
    (61/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.143640544 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.115555176 seconds)
    (63/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.150616026 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.196355859 seconds)
    (65/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.136860135 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084336023 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.1068364 seconds)
    (68/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.217216101 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105930425 seconds)
    (70/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109634266 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.131475974 seconds)
    (72/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.085528167 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080648538 seconds)
    (74/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083757181 seconds)
    (75/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.157624328 seconds)
    (76/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.137880938 seconds)
    (77/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109032399 seconds)
    (78/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.167574991 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102300251 seconds)
    (80/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079684434 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122971896 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14541272 seconds)
    (83/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100133236 seconds)
    (84/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.078629241 seconds)
    (85/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.169488512 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085530249 seconds)
    (87/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112319549 seconds)
    (88/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109451153 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14760698 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093434966 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105773574 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.153474599 seconds)
    (93/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080042185 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085635166 seconds)
    (95/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127382948 seconds)
    (96/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157641208 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086352421 seconds)
    (98/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.138379189 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147177398 seconds)
    (100/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.165928071 seconds)
    (101/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100470067 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120278303 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.109858165 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.205625126 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124840537 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111353988 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081762023 seconds)
    (108/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102067819 seconds)
    (109/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.111920905 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.104459551 seconds)
    (111/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173084959 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.154188527 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086724859 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100140086 seconds)
    (115/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.07837377 seconds)
    (116/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.109693966 seconds)
    (117/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117425794 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111135477 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127950732 seconds)
    (120/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12930829 seconds)
    (121/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.085065249 seconds)
    (122/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.136919292 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.110983045 seconds)
    (124/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086717361 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10414772 seconds)
    (126/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.081840586 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13542013 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082975021 seconds)
    (129/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.082430811 seconds)
    (130/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109739556 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08633195 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.11182741 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104899638 seconds)
    (134/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.132984967 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.199586831 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081516304 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079341074 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.222912946 seconds)
    (139/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082981523 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123234237 seconds)
    (141/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084121928 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148673998 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.135489763 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.080224686 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101824424 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128138754 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079251472 seconds)
    (148/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.079658867 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10359442 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136608031 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.08234068 seconds)
    (152/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080192906 seconds)
    (153/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.081794101 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128899273 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082319294 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110376367 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103662492 seconds)
    (158/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.104455051 seconds)
    (159/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081738994 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.086619482 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0807328 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080289022 seconds)
    (163/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.104930934 seconds)
    (164/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.085896522 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114151135 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100439489 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129822551 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.10126798 seconds)
    (169/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110134685 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.128836107 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.087071656 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.110189177 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.079470949 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086303105 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150451011 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086101371 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110017278 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.127774227 seconds)
    (179/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.1142891 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123487473 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079161409 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.129438803 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.103872022 seconds)
    (184/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079456113 seconds)
    (185/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081814533 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.107807338 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082968472 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081819467 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.103494423 seconds)
    (190/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082599847 seconds)
    (191/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.127818968 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113003294 seconds)
  done (took 27.511253406 seconds)
done (took 28.450292626 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.225125147 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132570761 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110899897 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110085601 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234505286 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118455532 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.153892759 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111930898 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12134897 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.1382453 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101529216 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124049393 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137589373 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.247110684 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11482844 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102731339 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101649992 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148498687 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.125919509 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127179382 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.234958147 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12975318 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122332489 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102267581 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237569862 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10348126 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136729136 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112976432 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123601893 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.13785826 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112513112 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102937975 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.151836245 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126761204 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101385011 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.110975522 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125766823 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.086704814 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112358972 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137383002 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.125347375 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112241567 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136648764 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103938004 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112414354 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.135390241 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101813437 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.114486252 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.099986982 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137874575 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103911504 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126470543 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.13708854 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101528782 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100599347 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.129346207 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122456701 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101972086 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.149195294 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102292082 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102914856 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101313657 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.139108618 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101913336 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110794359 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127787522 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112189139 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112601974 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134630816 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104880319 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102014766 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111047119 seconds)
done (took 10.09622107 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106602235 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145658742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.249557835 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251951961 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156025838 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.119538787 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115466951 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.153200391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11547634 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120120848 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.165745318 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134183077 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254645656 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.117692465 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145080923 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.1143976 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112649344 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.137665394 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.249743904 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126312234 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123741722 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145056936 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127435011 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118138573 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.131861398 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138041774 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135177789 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117724611 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.105928467 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11444704 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151521659 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106108601 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.132013646 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124744708 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.123076018 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.115726158 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.145026903 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114726667 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131283501 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10715636 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11143116 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146720935 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107434931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118048044 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.139900113 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121486992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114147947 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142509261 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108716906 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113311054 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107307011 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154356354 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118611781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.147558602 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118517733 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118325582 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143640735 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120283501 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.108486494 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.117800883 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131914784 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.106666746 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107135041 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150918351 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108974726 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.144255143 seconds)
  done (took 9.802292715 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124941451 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135395029 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14333785 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116740682 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111808583 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126414863 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100336475 seconds)
  done (took 1.843891323 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105599207 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268399741 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259603481 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.259408427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.250531944 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269778769 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12561582 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101091135 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165232404 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.112566076 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.268434461 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.323024934 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140405878 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118088971 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264976112 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10196355 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261542177 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129673012 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117490304 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262258354 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119681742 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.160094061 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115520249 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10266969 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263118952 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10338254 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.328984721 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120520895 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112381929 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.143126908 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118590657 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204984467 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.23644521 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.145152246 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112371681 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.259171922 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252177679 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118052273 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.33340837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107533584 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.250175598 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116647634 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117088282 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145618816 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118095286 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.248146363 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121412684 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.145998517 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116763844 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273021784 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112525931 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264702526 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.141058092 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118651062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112993333 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144861861 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12569979 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117806687 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.271809782 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.147632718 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.230985051 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.25927785 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.255006587 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260129093 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.154971043 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265600632 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.210135846 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.145354766 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1122994 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11801891 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.261177762 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.144790046 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115266377 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.25238583 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120396647 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.263377477 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.263782705 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114047243 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.144307776 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107098996 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115876282 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.132406879 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.252593407 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117423347 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115281518 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148059545 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116986147 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116983014 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135926259 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126390886 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116293928 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140967731 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122641628 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116699619 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144760147 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.267398498 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114499451 seconds)
  done (took 17.769435878 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105496578 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104931446 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108227263 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130632711 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104647215 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104575964 seconds)
  done (took 1.676052499 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141535062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117680439 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153054751 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120893176 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165124998 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250701896 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.261799927 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138686835 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.137675356 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128912399 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254543094 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255724806 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.255510069 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120288592 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257925254 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118939992 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26171211 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143951946 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126657141 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115080158 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144843942 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121775216 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115702315 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.246821874 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117827806 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148636353 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110961249 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125177662 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154921746 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111555483 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121282959 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146329011 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11107938 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136619928 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.232156137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.139018741 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113957497 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120092161 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.149058168 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119835683 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260124143 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115401536 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.152066863 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121687638 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11112902 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138591217 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121397336 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110715402 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259301846 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14785732 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121383577 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118707439 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146298719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.12267443 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110025263 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13943729 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121655158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261489298 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122361143 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109959094 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.148020462 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118697622 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111165425 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.150379411 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.118684531 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120253633 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.136059957 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119271636 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115383598 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.146283238 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121755223 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143590255 seconds)
  done (took 11.795459103 seconds)
done (took 43.870467097 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.653735966 seconds)
  done (took 2.667789492 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.085039038 seconds)
  done (took 2.100019608 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.580021632 seconds)
  done (took 19.625788397 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.422321096 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.323186148 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.039685986 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173601621 seconds)
  done (took 2.974546818 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.080180683 seconds)
  done (took 2.111133454 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.339129948 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244217559 seconds)
  done (took 1.604029568 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.731162411 seconds)
  done (took 1.76870281 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.76936823 seconds)
  done (took 2.791816183 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268092993 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.263784729 seconds)
  done (took 1.568414406 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668736793 seconds)
  done (took 1.703434947 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.951541105 seconds)
  done (took 19.990280455 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253456993 seconds)
  done (took 1.297450374 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290783306 seconds)
  done (took 1.330251118 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.626236975 seconds)
  done (took 4.668775877 seconds)
done (took 67.224378341 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119054386 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122142947 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.120714534 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145118271 seconds)
  done (took 1.537398552 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123904158 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119475134 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122186138 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.145935941 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123472853 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11746797 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144724386 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121953085 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116984033 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148388591 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119589195 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116946175 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147340359 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118141306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116946662 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147246714 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121656217 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11845219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.166720899 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120517136 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11903506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145102308 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122356259 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121175998 seconds)
  done (took 4.128188593 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115719806 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109426281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111192447 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133564482 seconds)
  done (took 1.516449325 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126433989 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129967491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153116645 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125379323 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129945125 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154477089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118235515 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115613057 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143535692 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126771748 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132866358 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.15684642 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130638932 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120002474 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15596269 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114082055 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119619401 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155266628 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125424694 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126595925 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146509135 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125790998 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122431858 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152997248 seconds)
  done (took 4.250960523 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193926466 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.131014086 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177039665 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164818441 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.178897242 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117884938 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.146019096 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151443056 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126097494 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120478153 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148084968 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164333653 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.151565255 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.121290146 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.118802849 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.150109388 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13079799 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124244048 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192654479 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124489529 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.15199141 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.131108985 seconds)
  done (took 4.260623898 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120735072 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.108836062 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106380576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133193076 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121051502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111430127 seconds)
  done (took 1.753454819 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108572844 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103785084 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103205645 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129125623 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107815732 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103539735 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101359108 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13065908 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104256591 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102941747 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129294969 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103848717 seconds)
  done (took 2.380621674 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203918636 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14778367 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249613703 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.397491559 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188987361 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16032953 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.316520338 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185982846 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17631806 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163992645 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180044031 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189987881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153313495 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215231801 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139376624 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.185698709 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170927877 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237575104 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169802152 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215146709 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183486623 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174783697 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217216808 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175644559 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139038483 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188608838 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119671862 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127753775 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193278336 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163516293 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20196352 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176013799 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14180136 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213230611 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234091009 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203617657 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274159239 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16040441 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173386589 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.217298952 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256784301 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141519734 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218083486 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151319482 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157005386 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19012045 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176550141 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210259976 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133523519 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143002887 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210190564 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206702531 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168241113 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165519664 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305123835 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158278423 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140751005 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205898974 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214012389 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199776608 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207762466 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122509612 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202249004 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219027275 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214451687 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168474518 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16179754 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151755205 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162253555 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233433838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209803338 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157471795 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237973321 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159547194 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170808873 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193247216 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154293315 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234999204 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20152837 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120770258 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149420188 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163318218 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125143818 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21789038 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122010987 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243840274 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131400756 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.211308232 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179299402 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180610153 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158795618 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188110515 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160684786 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17554816 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101579656 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141239154 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186405012 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155263215 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155835291 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149596429 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168359514 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124758196 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177934568 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122580113 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167607494 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.162710598 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158389915 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198679709 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130429457 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210013752 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1463033 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189282684 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165845013 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219902584 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12962769 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160524148 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246848596 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169218713 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.164282321 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170110283 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226604095 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.149325443 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163406848 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163259844 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220403497 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141891916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227378868 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165435396 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134169178 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137691561 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200933516 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185257538 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159180213 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125378886 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.192438848 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216757129 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125841586 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137495442 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211791542 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131156805 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152461336 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135468216 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163374116 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142376113 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149111894 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167909493 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151986456 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195614127 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163685819 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184588962 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132918805 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200129181 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12956251 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.198186217 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146363053 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146886289 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171207763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225249401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129344901 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208445043 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.157864194 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212216495 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200470956 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128656538 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210819715 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126936558 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118683257 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189686341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196331442 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160787159 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.215128214 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204981802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162356116 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191983298 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146710251 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196131631 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181626693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183814956 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.1377835 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200798489 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195409363 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12304903 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121670657 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.153243403 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136391047 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128836728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165484679 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178146817 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191434641 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203096949 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165806302 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166038091 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189188827 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.154012719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15833068 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203286621 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138238478 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217507863 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188846235 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207020388 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137930217 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191153239 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119168389 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154162278 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133813056 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186936856 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136236298 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133688667 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169659097 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218758638 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167764157 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175066903 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189747173 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191137816 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22833238 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119398063 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159837895 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193457424 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193782962 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.182558207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132973894 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.186415475 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191579099 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17162239 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218861651 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167961442 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208349416 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18956078 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194618058 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129332486 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171902055 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158384278 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166425594 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159172325 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168853269 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130369968 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148304219 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165867524 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138320468 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213255109 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141119911 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202359359 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.179627591 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169916475 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123827299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171408262 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19896281 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145818558 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105566389 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192930922 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188588833 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178990515 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149238306 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1969214 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128330798 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.347892401 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178573772 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197486335 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134403511 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167318403 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17087537 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184346959 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156463062 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213596332 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167999504 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206634017 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198334485 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138085904 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157545347 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146808912 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147197649 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16777971 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.152404319 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.190546216 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141238274 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215396388 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164825187 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169136348 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205863127 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143966563 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14747846 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167809719 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254476217 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167471775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200835186 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161555504 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189933807 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179817853 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152146984 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125028908 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129845684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211942168 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127850438 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206486975 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191375635 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208804494 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173394746 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190039939 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139159426 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125452176 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19553208 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145940449 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213166544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161174156 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13676085 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213972556 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126664307 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129297809 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187601601 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314760252 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146995365 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193602689 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106916245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30997867 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128885438 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131691486 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186590755 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167868221 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161162334 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18180316 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201906553 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139806789 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156613233 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164702126 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206225666 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182358273 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195255819 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200943974 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144124173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19026825 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156260878 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197259898 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145089024 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.144304985 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187164107 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22073923 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174442946 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129279 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19719544 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196040165 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170856415 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20291495 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138145884 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211755574 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12700595 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193500853 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136787229 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122344038 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188821756 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193055384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131093403 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197882797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170613669 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130056163 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154970014 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145671905 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195923592 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139299809 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.157139149 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183573222 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158753272 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181787333 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238954347 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12803088 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199397597 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141790084 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158898269 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138473304 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142731787 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159591075 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174285765 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205067087 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129712584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20272557 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164921685 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192379701 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151739921 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171493533 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.264023471 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.15660119 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189540171 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178121831 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196338781 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177895042 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172985367 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198633582 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148760745 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194030601 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144775388 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249645841 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163810968 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197095933 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130494298 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172179593 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138102994 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131624584 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178869762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166632607 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170648042 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134555815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197643712 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143723146 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.175626232 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140797232 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229013033 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149441985 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215711711 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213962154 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137939102 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172909967 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203771745 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15668828 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163048805 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200234972 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142851522 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179216247 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134064253 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134585137 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242989521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124528555 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190161104 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173987493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197816462 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169992235 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163715796 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17609244 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169890486 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174119184 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156913707 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149211769 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199291358 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133892303 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125290536 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200643884 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188081525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.165219583 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139345096 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204392285 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194037787 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.150930913 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13336779 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316057907 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159359718 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221559781 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132018227 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166342478 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146245993 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186938179 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166859378 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19964662 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.130284185 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128055239 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.1736342 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159813231 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.164451092 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169304111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212491736 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155250128 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213424528 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132760377 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282652717 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139940971 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201085616 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116596557 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126853961 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169687296 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13409289 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169185205 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181334721 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243066328 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192144298 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145746505 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133016223 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.155997409 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130305521 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187490341 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150005003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196996613 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1472437 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103252842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170413665 seconds)
  done (took 84.809652013 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172249795 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.16696418 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.187114792 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.239388006 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208559947 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.310217614 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.244049653 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263339821 seconds)
  done (took 2.926490157 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119747382 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16101451 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141446743 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143837255 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110269183 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.496304523 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162572323 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12097572 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160368439 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154629084 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.143344938 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574175531 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.116413825 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145810309 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122429016 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136318933 seconds)
  done (took 4.140583219 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.101522624 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549087878 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.159200214 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.311735919 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.237130019 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214834465 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.813775705 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200074534 seconds)
  done (took 12.718623084 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.169067196 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169995919 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.467541666 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.325442979 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.214599757 seconds)
  done (took 2.487312037 seconds)
done (took 127.944692781 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.657620812 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125060358 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123975069 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155452085 seconds)
  done (took 2.19239855 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.196633067 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.091869244 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123731631 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.091396914 seconds)
  done (took 1.642811376 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356083603 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092729299 seconds)
  done (took 1.624012256 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.144785296 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134471069 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164520393 seconds)
  done (took 1.595339691 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.133131649 seconds)
  done (took 1.274941589 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117179829 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116131915 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279770268 seconds)
  done (took 1.661201717 seconds)
done (took 11.13518574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120934933 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.93021188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434622372 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134174702 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711993181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428863412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.422918453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176695152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171558414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109212691 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162310204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691821866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436670705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.879717735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393228025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.909728943 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697050527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112215769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146126927 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113352233 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.403694689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137204696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113095153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112129172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704872638 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450219823 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110957353 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919031145 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111472976 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114305875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399317926 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140586565 seconds)
  done (took 21.035474836 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113172299 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.167704044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148719687 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113543881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113997653 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141740508 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122593178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122626876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20368771 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111131344 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161906647 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111524587 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116498229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111419486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166675915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111671169 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113949724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14314412 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119397442 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112674513 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163192943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111203159 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112340369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143351508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112323213 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131608872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141212166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122810887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11023762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144741667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11708337 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11168175 seconds)
  done (took 5.295865697 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161324018 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177578145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.150058337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14928784 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.189660169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114021636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198641775 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179354875 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203836424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1132285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132890782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139266273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153000896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11223293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166850922 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112122564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114183565 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14388658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119601324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113307022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163659279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111195762 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113817879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14271805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112846376 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135190217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140432219 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124773968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111369579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144145746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117407951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112588546 seconds)
  done (took 5.63187883 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126784589 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126625497 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135100173 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166099676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122096194 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126290245 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15780866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.12205992 seconds)
  done (took 2.241713981 seconds)
done (took 35.354595289 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135323333 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127515632 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130949781 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157468268 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.275873395 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119427153 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130426575 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.150182433 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128384199 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.1343003 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110106193 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153385273 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132725021 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123040916 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.276013143 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126302882 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.281088242 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.278173413 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.152889593 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127674269 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119913287 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281739173 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.121497298 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.15271267 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.275923939 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116709889 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.266433053 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123359333 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122127999 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.143750408 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.279566743 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123000769 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119532576 seconds)
  done (took 6.642304003 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.225806513 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154160572 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121910875 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.120294761 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121522755 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151534951 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.231948271 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153649446 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120423695 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118874315 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.1506932 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.213723063 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158247173 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116822928 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121408625 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111581836 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264324826 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122636156 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144711428 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095077559 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116275755 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118966894 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.279042575 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115201793 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.152970215 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120278893 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121521902 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155390599 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.12347054 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122354155 seconds)
  done (took 5.611615683 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125415573 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133331871 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137033074 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.219979144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.149337005 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162774409 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138387846 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132338741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175984451 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113360278 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128377077 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181112752 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130523651 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.123937654 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144915434 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132490554 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129823785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.114161026 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.155642862 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131995941 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133941891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161679954 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137938646 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121252242 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143495413 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122034509 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120579548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155696403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122254975 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128299302 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145714258 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118330472 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116001287 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178953727 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115773023 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.126035531 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.168052541 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127217566 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126805598 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.177991459 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116950036 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.114723212 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.170073902 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169249218 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114452597 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.156989557 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.115792745 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128880605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111549732 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.162722601 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.158349909 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.143477614 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135079721 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113397592 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111578551 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153535444 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.113775458 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116488797 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.160115378 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116247355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134509985 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.151261109 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125270776 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.1158301 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153895024 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.114294504 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113951714 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117175636 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171873145 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122261205 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149671392 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.14411573 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125984583 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125784913 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.156628832 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127358602 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.112636208 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155598421 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125810512 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119381458 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125814847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148506598 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117052774 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129865736 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166104465 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128352953 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124013246 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15796099 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117390966 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115586073 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.162219785 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115320847 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118594337 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.157291749 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115597009 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117264096 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12604746 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155814046 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112045321 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138616703 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148606632 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114258481 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138484112 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147842084 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121566369 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122520322 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.186297447 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114177518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124746538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156726606 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114596395 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121301445 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115756854 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143498884 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129805567 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12858617 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152913048 seconds)
  done (took 17.06327706 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.373640926 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.364545854 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.21221312 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.409217617 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126884983 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283799221 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.397120801 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.370266086 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113763931 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.146695448 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.204254912 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329508533 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.147474586 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148598812 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.369888915 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.446190529 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.171887764 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.185112557 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.149898763 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127813508 seconds)
  done (took 6.256614995 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13414478 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14876535 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167593431 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141823497 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12446367 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161967566 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114971879 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13447953 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156919177 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124733392 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116670398 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160260645 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128125797 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.13088841 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159529748 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147880624 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123739635 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149076815 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136905584 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118303958 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133268738 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140012166 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122223211 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167460933 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133663565 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124402964 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143488357 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120405893 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12176941 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.122055376 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149360592 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.132194523 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122472916 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.13608671 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126131303 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130328306 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.151148784 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117777898 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119573079 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116407945 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159108423 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12764647 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121810874 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12853481 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133725622 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112191433 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127746216 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.158795902 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106908753 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134055421 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.15796888 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129682694 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.121644554 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134731417 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.152122129 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131747422 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12325015 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160961648 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119011392 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112189109 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.144058981 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119083435 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122749699 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158822626 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126281105 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133589702 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160739601 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115639396 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118099355 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148260965 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119106079 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.128295045 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16464875 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124381813 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121520735 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.12512634 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154558924 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096151546 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12355858 seconds)
  done (took 11.767754025 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139940229 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124798143 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131252832 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179724727 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127543226 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119204354 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156160228 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13513535 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128250668 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16593804 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129928169 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12816311 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167815957 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125251553 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124505804 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161588952 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128464943 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151697229 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160032975 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141592687 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.128040468 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.152001981 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127313367 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125616429 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173939899 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127769711 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139939887 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.15933793 seconds)
  done (took 5.159649204 seconds)
done (took 53.661768968 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.357787229 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.522476996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.28875861 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.288087007 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.288791876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.32439173 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.288751832 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.289290895 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.855135671 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.262172963 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.288555941 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.286343351 seconds)
done (took 29.531277424 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.445541018 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.427460043 seconds)
    (2/2) benchmarking "String"...
    done (took 1.600005642 seconds)
  done (took 4.219372224 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.279343937 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.278611431 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.522961074 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.276964158 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.279824956 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.279109541 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.28765957 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.285214192 seconds)
  done (took 16.391025015 seconds)
done (took 26.518112985 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.289710135 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.552772366 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.542635305 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.259541356 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.300476454 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279402203 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.283020554 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.332688497 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.285306862 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.261896306 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.729627974 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.566268478 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.281513455 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.690874483 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.266044746 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.294990049 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.295971549 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.603727895 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.281104947 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.26010539 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.259914042 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.26055334 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.283358613 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.297013436 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.310663152 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.281641524 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.316712906 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.281347585 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.555013105 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.302723123 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.300925367 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.302220688 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.325530456 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.285221872 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.297893225 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.305972727 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.566066099 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.292083538 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.270470505 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.281177347 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.558327413 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.294977459 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.281557959 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.288652374 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.276342062 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282882648 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.265643635 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.402046467 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.317488176 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.293136294 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.359058388 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.699069028 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.286493167 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.312050643 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.297689121 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.603307397 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.312767169 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.382173766 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.297101999 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.329577705 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.283635977 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.284383653 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.319854536 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.287436346 seconds)
  done (took 149.533852483 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.281893842 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.283763819 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.282485896 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.28941848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.284017895 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.283471678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.283612196 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.283316865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.284216647 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.308374847 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.283848005 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.284078819 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.288105683 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.229133301 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.292840077 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.306706439 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.285676726 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.284733594 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.296821304 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.283851705 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.310455805 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.285248342 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.285413616 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.284251513 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.331713388 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.375314024 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.300671444 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.285420637 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.294639993 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.284348175 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.294084423 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.33462167 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.96096077 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.156593288 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.297621684 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.312197819 seconds)
  done (took 83.281416201 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.284567652 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.284549282 seconds)
    (3/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.285647023 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.285209127 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.320384583 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.284487525 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.923355405 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.93006974 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.350135618 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.492635715 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.289631873 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.84914531 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.561165965 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.286079767 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378768883 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299416075 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.289156627 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.382729183 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311912319 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288927281 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.287776685 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.922711105 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.302580353 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.849211223 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.473053583 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.304276903 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32253525 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.682651797 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.286459274 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322194946 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.628975905 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.340750959 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.287461655 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.661451466 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.466333695 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403126718 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.291155357 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322702306 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.28702084 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.578640323 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.288814465 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.28734759 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.287840593 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.290615563 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.958861736 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.287955171 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.928164371 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.292757634 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.294945644 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.287973283 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.288154723 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.318401746 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.017288256 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.288179493 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.28812524 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.290587055 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.289359472 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289699443 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.324616735 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.271975023 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.198605996 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.289488112 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.292167757 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325239016 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.29156574 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.830565025 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.290078677 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.733377658 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.341887527 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.395191832 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926578844 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294233296 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.387390353 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415608921 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.289605649 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.291157311 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2900725 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.288800139 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.404376139 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.289755253 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.01755878 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.476170776 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.308297591 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.857179204 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.39453009 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.291313484 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662568509 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.289914482 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.291264801 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.054113028 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388023735 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.290552101 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.291591799 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291036074 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.023191385 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.290551968 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933526734 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.622861627 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.295854311 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.903524883 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.294332364 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.203220082 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.900199412 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.949320648 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.293850455 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40679244 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.478008137 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.311576477 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.290849628 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.861545638 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.295063399 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.351012813 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.293396651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.694624242 seconds)
  done (took 388.925552232 seconds)
done (took 622.92395225 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.2717516 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.273201162 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.272133718 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.273256071 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.294689837 seconds)
  done (took 12.577443566 seconds)
done (took 13.769672202 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49586073 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497022573 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.359592226 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501226122 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.328308714 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518186584 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482388313 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311872895 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.409964968 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.382250877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41072723 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.35016013 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330140092 seconds)
  done (took 19.569444788 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593926371 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303810979 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.359109747 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573416064 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.339693301 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.593276187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.674703531 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.304935754 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.476263291 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339876963 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314879872 seconds)
  done (took 19.068439626 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606306824 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.321942614 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.362380396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.590414821 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.34213856 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.603739826 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.639427641 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.305198134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.488295292 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.317696275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.317691741 seconds)
  done (took 19.089222141 seconds)
done (took 58.921696092 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.337395821 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401013676 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.330788353 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.313927889 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.311739612 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.311521957 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.314405608 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.313825841 seconds)
  done (took 11.829291345 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.311332849 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.311606982 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.31150774 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.312714672 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.312513842 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.311903273 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.310816238 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.313711343 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.313471097 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.312987254 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.312935164 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.312806451 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.311305564 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.312344878 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.313063346 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.312005575 seconds)
  done (took 22.191856662 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.316653593 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.313647956 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.312567433 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.31318059 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.313657187 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.313964297 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.314613637 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.31325218 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.313469544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.313545073 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.314966761 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.312807361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.314763114 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.313655462 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.314053971 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.314492674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313097629 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.312754406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.319918489 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.313585294 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.312478404 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.312255766 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.312929626 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.312907454 seconds)
  done (took 32.730962758 seconds)
done (took 67.944946706 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.298757729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.302841968 seconds)
  done (took 5.798788199 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.372219276 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.372193795 seconds)
  done (took 3.945138991 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.315830079 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.31472432 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.316868274 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.315190419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.31447044 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.315401563 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.31559464 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.315294299 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.317079838 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.315207513 seconds)
  done (took 14.353153056 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.31724966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.315266098 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.316803298 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.316482734 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.318727585 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.316114488 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.317403451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.315180725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.317081156 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.314648441 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.31623228 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.316007353 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.316245224 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.317973215 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.315695403 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.316460983 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.316396636 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.316338482 seconds)
  done (took 24.895079531 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.330640576 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.335565035 seconds)
  done (took 3.863928865 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.446779565 seconds)
    (2/7) benchmarking "second"...
    done (took 1.359287156 seconds)
    (3/7) benchmarking "month"...
    done (took 1.422191869 seconds)
    (4/7) benchmarking "year"...
    done (took 1.413891131 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.359417536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.339054945 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.358560081 seconds)
  done (took 10.899063371 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.303890867 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.597521329 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.804090345 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.464490243 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.296513038 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.326591382 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.281487562 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.346654173 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.326388017 seconds)
  done (took 14.946774674 seconds)
done (took 79.899666539 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.301789655 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.328241171 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.328692709 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.32012357 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.616461495 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.357480942 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.305023274 seconds)
done (took 16.760492414 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.282933741 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.286535534 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.304824134 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.315196294 seconds)
  done (took 10.392137999 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.303399547 seconds)
    (2/2) benchmarking "read"...
    done (took 1.652316477 seconds)
  done (took 5.156656305 seconds)
done (took 16.749787455 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321495087 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.320001878 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.321370916 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.319166718 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.319814532 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.320351798 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.319572745 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.318789744 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.320643452 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.318827237 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.321569352 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.319501428 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.321038062 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320561783 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320357469 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320875895 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320805745 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.320628143 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318942575 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.319285667 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319608394 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329345806 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.320500144 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.320899458 seconds)
  done (took 32.896763349 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.323283401 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.322620658 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.320347048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.320810485 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.320758079 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.320499895 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.320400626 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.320529741 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.32087969 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.321026595 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.320188836 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.321562854 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.320609054 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.322501856 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321463582 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.322666969 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.323665505 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321813497 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.322973116 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.319902905 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.320663673 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322087193 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.321740385 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323240843 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.320107302 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.322957413 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.322486058 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.321822779 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.321947681 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.322771866 seconds)
  done (took 40.851896118 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.329534781 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.329867941 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.321203609 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.322993251 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.323410973 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.322777891 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.323547013 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.322638631 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.323223593 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.322862701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.322582098 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.323405595 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.322622656 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.322684932 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.3233067 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.323904875 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.324627711 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.323571985 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.323371719 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.323528102 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.322861995 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.323943333 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.322497968 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.322563651 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.323617623 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.323839957 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.324014522 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.325265904 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.324639918 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.323080798 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.324111471 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.322528658 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.325954499 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.324850304 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.325354979 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.326004306 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.32955737 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.331676465 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.325004538 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.324253353 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.325984166 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.325486826 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.325828949 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.325313969 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.324755023 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.324570624 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.326604246 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.32416349 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.324949291 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.325432253 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.325482632 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.325864316 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.32644111 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.3259288 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.324777173 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.326092265 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.325819175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.324784741 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.325812114 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.326565104 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.325183607 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.326086606 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.326688375 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.328344406 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.325514952 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.328164709 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.326845156 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.324540121 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.327710822 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.3269837 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.325291392 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.325817859 seconds)
  done (took 96.605946741 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.326749456 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.326866351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.325643279 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.325253234 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327074742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.327193731 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326746536 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327310711 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32819136 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.328347317 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327201049 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.327082431 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326864526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329380991 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327938368 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.327868596 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326530033 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327093532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.327518989 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327792914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.32866783 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.3275044 seconds)
  done (took 30.41054998 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327955413 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328874206 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.327971219 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.328965692 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.331011855 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.329115302 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.329335061 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32862587 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329787143 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328466917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329095679 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328170352 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331501487 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328179803 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329062396 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.329799118 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329606105 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330934901 seconds)
  done (took 25.135857459 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.328518718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.329246337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.328572339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.328289085 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.33053238 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330011705 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330585081 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.329484003 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.329455988 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.329226619 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.330064283 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328263753 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.330044562 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330679995 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329735253 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.330372541 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.330897404 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329428579 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331940013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329894752 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331639006 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331995952 seconds)
  done (took 30.470390011 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332183337 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.329611395 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.332306546 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332070946 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.330667658 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.332813884 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.334161867 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.330688208 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.332809857 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.332334033 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332271417 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.331045152 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.334717484 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.331134513 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.331745391 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331320648 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.334940151 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.332302852 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.331816216 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.331462462 seconds)
  done (took 27.854679953 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332429477 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331883129 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.332381633 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332166519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332865508 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.333911292 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.333412276 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.333154136 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.332489856 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334454243 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.333215439 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33189571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333846297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334393885 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334212747 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333274589 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.333778413 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334127282 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.334497418 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333578216 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.33477054 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335801503 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.334141407 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333767782 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333954571 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.334608476 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.335176275 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.334945102 seconds)
  done (took 38.557096225 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.334900669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335778575 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.333440442 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.334293643 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.333004318 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.335442078 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.33574831 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.333958275 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.334809732 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.33481032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.336760081 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.334317073 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.335176636 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.335760087 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.336937381 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.335182892 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334999718 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.33668809 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335267638 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335031678 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.335638507 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334939727 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.335975339 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.335665021 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335637081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.335852011 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334816296 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337059616 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336509743 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335660345 seconds)
  done (took 41.276265523 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.354794778 seconds)
    (2/2) benchmarking "in"...
    done (took 1.354532626 seconds)
  done (took 3.92608072 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.336295223 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33551609 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.337744759 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.337756142 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.337493997 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339549126 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.337327078 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33765953 seconds)
  done (took 11.915365312 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.329017402 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.338056384 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.337201041 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.337902418 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.337797757 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.328579339 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338082817 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.341718516 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.328998674 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.331495381 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.336170171 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.33700737 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.33381259 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332116945 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.330510862 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.33306691 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.340200067 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.33863701 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.340295605 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.340297826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338836203 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.333925081 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336689686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.341291146 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332764456 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.341635716 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.3391645 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.343474067 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332778508 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.338066303 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.334452244 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.34227628 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.339314023 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.340492281 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.340278955 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.340285293 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34260242 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339434148 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.342261588 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.343655471 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340965498 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.33807643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.334447104 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.337972097 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33826515 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.344403849 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.341698237 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.341387963 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.333114933 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.336984074 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.347943448 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332234819 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.341227373 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337631968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.339031899 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345026765 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.348207408 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.335988425 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.341162398 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.345881293 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.352127687 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.351018489 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339613277 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.346275808 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343815669 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.359302643 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346788404 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.349557404 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.344438512 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.342831066 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.343326521 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354249267 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.355942763 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.348889558 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342502999 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.343836679 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.337152029 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347161872 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.345523203 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.34841765 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.348589969 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343686571 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345854862 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.358671673 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.338690261 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.348017719 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.342721017 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.344003536 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.336335387 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349104233 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.351240875 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.343715918 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.33591332 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.339382771 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.341145005 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.347980136 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.335527129 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.340552129 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.347166987 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.343945368 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344661272 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338437467 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.348106394 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350224578 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345644618 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.346925944 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.351735515 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.339218527 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.348946885 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.352419286 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346215676 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.339149573 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.343450853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.349423903 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340032154 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.347713254 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.350364573 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.343554084 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.349470981 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.34606997 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348663269 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.366252081 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.352653557 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.347340934 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.341442289 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.356611833 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346514675 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.343166831 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.354932363 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.346810117 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.346278094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.344533652 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.354210085 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340471551 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.35020385 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341338595 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.351334166 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.347402729 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.348064413 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.343033439 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346252062 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.34504021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.348043549 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.349239045 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.35382814 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.344709703 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.355374576 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.347781304 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.346743558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.349078447 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.354732431 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.34740614 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.342948343 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.3508853 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.340284095 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.350992671 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.340572313 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.351021983 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349698566 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.348392915 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.348330526 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.340754915 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.345624378 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.353294053 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.348397076 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.349374513 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.352388882 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.348275666 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.348012452 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.34164073 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.352898937 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.340733596 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.344926021 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.355674215 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.350928098 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.350239389 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.347116453 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355960259 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349344048 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349561078 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.343676037 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.35284551 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.354735052 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.352320835 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.359263706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349745804 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.351515754 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.344302865 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.346284409 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353815656 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.343809143 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.35832419 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.356570913 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364049757 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.346130263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.356039814 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.34380437 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.353576888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.350955542 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.359117562 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.352297999 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35222019 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.345587182 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.355059538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.34678242 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.355262259 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.344724917 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.354152675 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.352675154 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.351859198 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35318772 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.346201365 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.350450633 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.357673778 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35222167 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353091928 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.345019603 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.356468405 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.344042588 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.34841235 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.355626979 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.352959141 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.355202047 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.362193447 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34976361 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357583496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.354807846 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.348054411 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.355244167 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351270453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.354149087 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358467828 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.356627351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.349852163 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359523365 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.356984286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.348314505 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.35544906 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.363231066 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.353205184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.34825071 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.362006826 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.355355 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.356019994 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.355201281 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348753045 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.358671359 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.357116175 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.365771548 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.350083322 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.358918037 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.348859334 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.35755081 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.35079854 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.356478216 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.355923975 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358604356 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363109993 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.354830195 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.350197069 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.358675337 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.353885961 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.356330555 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350289308 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.361636583 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.357807503 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.356934238 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.353474092 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.353989057 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.360836627 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.347213136 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.356598788 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.350082684 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370655496 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.378074471 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.359394638 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.362387713 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.359868739 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358819312 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.362396624 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.352926275 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.352875132 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.355035006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.352910169 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.35169151 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.360439002 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.351834327 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.360662538 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356980439 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.361617882 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.361762104 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.357730036 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.352605997 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.361384938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.357734043 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.358696581 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35074843 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.359754153 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.352416981 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360701411 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.358678717 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.355145904 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36648068 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362946418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.357997829 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.355222842 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.354924577 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.352294112 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.355599026 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.365416565 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.352426291 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.365811988 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.35531503 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.35992006 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.355749976 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365011615 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.37032333 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.354029846 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.36626603 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.360630434 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.351382439 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.353165938 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.361048677 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366745821 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.372258479 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.352574114 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.362427689 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359808163 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.358295421 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.360484134 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.358752766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360273499 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.360261589 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364610027 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.366891374 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.3583229 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363261497 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.371782566 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.360225099 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.360327598 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.352155825 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362857835 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.372168861 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.35620057 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.360786033 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.357234909 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.363165208 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.359420626 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.361291071 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.362502466 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.361402217 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367901983 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.369928292 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364367595 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.363585387 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.367318363 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.374539101 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369092417 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.375259932 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.357327536 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.369468952 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.361512606 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.356444285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.359027502 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.359852754 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.366372265 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.355490769 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.368303276 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.36251068 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.359839228 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.365421321 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.372005962 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.355739665 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368034523 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386298192 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.354112136 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368114667 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.363876411 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.355365345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.366757146 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.362884999 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.354871691 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.359714409 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364192215 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.370410821 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.357899082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.36731018 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358191882 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368418985 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.365584469 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.363032457 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.364053223 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.364387684 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.356520599 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.366690534 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365292715 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.375647215 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.36059262 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365693159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.360973877 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.375343602 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.377702621 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.361913583 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371561755 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.365519756 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.360057071 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.364575371 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.371449195 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361559244 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369727996 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.358461836 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363480219 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.363752521 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.367457203 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.37012463 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.370785445 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.358147495 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.359968272 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368346579 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.367440405 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366824675 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.364462718 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.374714652 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.360442929 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.359108341 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.367536697 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.361774549 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.372095033 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.360572138 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.367197905 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363870173 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.371211388 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.367759783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367102696 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.357405793 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.360733314 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.37370244 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374055079 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.369771059 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.365824292 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.372588481 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.361425979 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365498829 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.367532492 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.364129523 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.363123781 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.371642391 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.363698023 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.364301355 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.365250874 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371500073 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.374281867 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.37222978 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.362357316 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.376882658 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.378992508 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377014867 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.361824457 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.365875322 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.364828777 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.371624895 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.369553395 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.36099967 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378146993 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.376818304 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.37376379 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369546456 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.372061262 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.361788528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.371832741 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369420249 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.366790247 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.376887124 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.366545602 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.376204054 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370606908 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.369509728 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.362288737 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.365216845 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366390765 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.368943161 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.373973403 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369893171 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.373984243 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.369819523 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377192218 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370575934 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.370373012 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.37101894 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.361404767 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37268083 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.363954658 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.37226379 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.373419982 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.365962744 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.37610602 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372008678 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365398929 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.372809186 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.380312442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.372402432 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.364934223 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.371752631 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.377566705 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.384300272 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.371824107 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366436486 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.371788245 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.376004104 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.372130256 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.372463619 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.368209247 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38506662 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.38622467 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368117281 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.369962791 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.377538424 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.384705731 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.372655532 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.372957339 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.36896467 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.372111843 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.382209661 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.37522945 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.379669165 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381294879 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.36929776 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.376763888 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.368580709 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.371689816 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.376114124 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.384829997 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.375431533 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.370638718 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.38923798 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388123073 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377385174 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.403858903 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.383030973 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.376239702 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.380750768 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367271425 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.37669379 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.372153867 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.381676263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.376025055 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377446562 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.375538118 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.366834173 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377582234 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.385000039 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.387177838 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.374974738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.36706618 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.371171192 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.377356132 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.37663722 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.377067258 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.378638604 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.376068096 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.376463247 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.370482981 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38818998 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.396325442 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.383268504 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.377580499 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.378088157 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.378033821 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.383289343 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379925209 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.384594078 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.378495329 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.377328285 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.375510508 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386978943 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.378632109 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.371429108 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.373994576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37218261 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.380282457 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.387898458 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401707386 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.381790373 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.382835793 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.378975619 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.378611705 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373033926 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.382361203 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378810692 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.372411689 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.37626892 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.382235871 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.378629387 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.379122344 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.372779411 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.385255986 seconds)
  done (took 811.107183251 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378813966 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379994589 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378542773 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.378552092 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379457736 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.379751709 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379236246 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.379712997 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.37949106 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.378937019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.379050427 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379303752 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380782967 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.379972804 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379223375 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380289754 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379884942 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380494225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.381008125 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38004433 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379480245 seconds)
  done (took 30.224202904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.380120508 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.378544124 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380338704 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.380575361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380048084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.381373575 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.381559696 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381077394 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.380728609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382646015 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.381815365 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382263324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.381081647 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.380694418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381317243 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381429501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.381246903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382638388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.381107156 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.38032653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.382097337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.380757098 seconds)
  done (took 31.63870556 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.38154004 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.381006772 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.375616629 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.385422964 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.381184258 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.382658743 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.382796148 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.382025427 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.381956752 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.375028119 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.378233549 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.376140053 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.380454893 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.389227043 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.378528831 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.387363139 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.383417715 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.383281692 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.383972001 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.382791689 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.387380636 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.395183779 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.383293231 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.375211522 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.385416277 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.383998166 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.384523526 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.383072375 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.375418941 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.38667368 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.382799184 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.377343374 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.388425892 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.387051368 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.378488166 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.388318146 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.386124235 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.383041073 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.384092103 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.386756777 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.408491318 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.384059931 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.388517819 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.396906331 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.386219692 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.3784453 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.391648198 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.384794207 seconds)
  done (took 67.691081718 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.384103848 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.38603708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.384912023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.383464285 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.385005966 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.385277168 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.386216931 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.385565188 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.385516142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.385505877 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.386161517 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.385343975 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.385106677 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.384428676 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.386836838 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.385798502 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.386352718 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.386677025 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.386399638 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.386611391 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.387786726 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.386355426 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.38782124 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.387108616 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.386924672 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.387444187 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.388195372 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.389071952 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.386968243 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.386701202 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.388094768 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387709637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.387098331 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.387900415 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387210216 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.389339948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.386892439 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.38807733 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.387446744 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.38888761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.388539091 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.387579355 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.387258237 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.388630604 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.388745695 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.389002202 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.38883328 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.388600749 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.387722026 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.387656827 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.389450135 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.388456623 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389561983 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.387190208 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.388099766 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.388294609 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.389213306 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.389605106 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.389173869 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.389451478 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.388817401 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.3887306 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.389931593 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.392012672 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.390441321 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.391258409 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.390578537 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.389613249 seconds)
  done (took 95.617619033 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388904683 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.389667958 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389806897 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388493564 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.389300271 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.390306674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.391392313 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.389398936 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.39073695 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389031662 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.389455359 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389863226 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.390102135 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.390690202 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.390505503 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391633908 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.390310693 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.390812938 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.391402767 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390827983 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.392939912 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.391020513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.391463599 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.392022776 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391043326 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.390822244 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.39131294 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.393366534 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391751999 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.392294723 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392381219 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.391154861 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390829015 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.392178893 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.39289539 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.391547379 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.391687578 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39236301 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.393601235 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.394183255 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.392561339 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.392873241 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.39274498 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.393837737 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394168819 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.391563099 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.391850686 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.394223084 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.393185197 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392168375 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.394464763 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.395089427 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393990104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.393158931 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.392978141 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.393329617 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393455959 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392692065 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394314558 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.393130833 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.394223574 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.395335154 seconds)
  done (took 87.562618325 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393717033 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.393901359 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.395150537 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.394043718 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.394794981 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.393639052 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.395271805 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.395084102 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.394992059 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.396275543 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396257673 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394962728 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397366014 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396161027 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.396405673 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395853877 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.395186984 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.395579568 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39610721 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.395460809 seconds)
  done (took 29.172689781 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.394691284 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394669949 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.395700852 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.395189776 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.394487063 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.394689375 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.396476014 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.396887376 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396181186 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396455531 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396071083 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.396207902 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.397414847 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.398303929 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.396633487 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396837913 seconds)
  done (took 23.603908816 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.395903953 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.397172801 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.397002834 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.396795592 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.395712449 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.397427577 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.39679662 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.396955216 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.396884897 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.397995439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.396979173 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.395309843 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.397854662 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.398370721 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.397469324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.397683574 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.397507864 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.397197059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.397497685 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.398556371 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.39840475 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.398737209 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.39913408 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.398648148 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.398474055 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.399787643 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.399771134 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.398443457 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.398642116 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.398408664 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.40032339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.398813999 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.399023988 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.398994485 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.399695994 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.398304047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.398734627 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.398230176 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.400006034 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.399698517 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.401302609 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.4008012 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.400383172 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.400825123 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.400323207 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.399958843 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.39935272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.400220031 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.399737427 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.399138741 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.39939209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.401931471 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.399001062 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.400601761 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.400147573 seconds)
  done (took 78.194982125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.398965705 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.399362817 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.399701699 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.400512206 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.40014598 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.399591072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.400879179 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.402499863 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.400244879 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.400438696 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.400515937 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.401951575 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40071408 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.400906151 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.402746538 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.401324556 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.401476064 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.400003178 seconds)
  done (took 26.482096346 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.401885448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.401424542 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.401901402 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.400818314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.402194829 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.402260892 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.401809312 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.400975419 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402030091 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.403172902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401360374 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.402606017 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.401120261 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.403562365 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.402580483 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.403635334 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402249302 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.402502398 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.401775301 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.403277298 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.40411828 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.402131273 seconds)
  done (took 32.120101888 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.392821048 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.393333765 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.392104793 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.410742658 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.411466317 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.392752069 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.393726907 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.393489771 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.417692908 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.444753608 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.439446416 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.411473583 seconds)
  done (took 18.167084863 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405245423 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404036848 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403946107 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405362066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403309953 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403769028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403851132 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40512963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404155699 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405299597 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405434533 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403693983 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405022745 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405499785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404872405 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404032525 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404495502 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404642738 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404241555 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406064927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403890509 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404410035 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403993606 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40419714 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40531159 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405301729 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405969117 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406173633 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405282747 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405966643 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406990641 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406548612 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405528872 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405563619 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406503982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406256631 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405253349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407795917 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405271767 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40553928 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.406454472 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405257785 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407596334 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407727118 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407021561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405999694 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407142704 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405991353 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406439889 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406275647 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406493922 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406036214 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406705487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407207069 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407515198 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406421418 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407326394 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407340714 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40828816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407939965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407525133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409804419 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408561561 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408533362 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408087414 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408623566 seconds)
  done (took 94.066916933 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408521781 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.408232751 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407312451 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408497968 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408719833 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408045784 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408375394 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409009794 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408415075 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407807027 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40886157 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409175407 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408019512 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410229908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408558908 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41022105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409158018 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409217076 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408045973 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411377905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410546924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41025954 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410216727 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410454559 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410855723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409583168 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410500678 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410411705 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.409259587 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409611433 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409445532 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40979789 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40995331 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.410380503 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410468804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411077086 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410082117 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409004216 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411554213 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412779298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41113686 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411742037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411929021 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41053861 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41120653 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410131924 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412419482 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411128787 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410064675 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411902832 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411857008 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413275473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412914092 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411256461 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412485827 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413220565 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412210466 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412549319 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410908937 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412172614 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413284771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41454495 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412379862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413040237 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41383243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412437361 seconds)
  done (took 94.376157771 seconds)
done (took 1901.129398459 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.5692133 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.529002176 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.402147523 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.471823898 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.402692835 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.427265837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.419104903 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.402085244 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.403458014 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.401133933 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.402270438 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.602622073 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.440215881 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.404151192 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.401702786 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.502345436 seconds)
  done (took 28.463673579 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.432555784 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.410704747 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.542591659 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.410896917 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.434321142 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.626634715 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.473791377 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.407865706 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.608100276 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.430221501 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.40766089 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.432517473 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.408823218 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.404894792 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.429080634 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.627752727 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.705203362 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.410939153 seconds)
  done (took 30.885391583 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.94064964 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.444080366 seconds)
  done (took 5.667193734 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.430248986 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.409271322 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.409423107 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.407495211 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.401765756 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.401541182 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.40832651 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.410095027 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.413193346 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.577164077 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.411913035 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.421714199 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.409720035 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.411457663 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.417974288 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.460334678 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.563243385 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.419346806 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.419080794 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.414739837 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.409227581 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.505219956 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.458169757 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.419524493 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.556749053 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.414261001 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.412276669 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.418489737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.538365557 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.420005482 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.410446316 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.40973347 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.411657322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.403494465 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.986154293 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.420924886 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.437633022 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.419182518 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.418968883 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.568165566 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.411801443 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.417355993 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.402327042 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.979023709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.526385835 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.54424359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.409821692 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.41099664 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.412102571 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.483673476 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.411337424 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.413573233 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.475513162 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.258136021 seconds)
  done (took 89.906653621 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.433812005 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.403329652 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593027961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425593692 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.404389929 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.44126475 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.405438788 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.747700206 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.456994772 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407071019 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.759990159 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.105501913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.423239632 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.455756267 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.41880462 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.441978231 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.407638826 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.407032965 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.406901136 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.405148594 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.014584887 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.415655027 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.405134285 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.604486463 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.450074346 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012640842 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.419890252 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.417916201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.409586107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.4064405 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.059237705 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.416043287 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.437225959 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.409657723 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.723102092 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.864733464 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822684052 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.415097291 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.446212962 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.410918518 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.40739391 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.014141165 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.844412593 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.407029281 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.407810425 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017364118 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406603665 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.412300102 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.409166139 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.679942648 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.409195852 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.410337969 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.424789541 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.40911983 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.407241313 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.443517087 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.446704061 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.016397137 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.40862518 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.408044035 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.423798039 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.410771869 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.420536327 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.409038371 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.412336118 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.847629 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.590605828 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.409988093 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.847012368 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.048433486 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.411269685 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131838559 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.413569438 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.434255483 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.5267936 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.425197731 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.408971134 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010425833 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.422898664 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411703641 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.825737824 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.409865354 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.746199994 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.430891104 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.413640045 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.041413788 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.420893141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.44661153 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.411579952 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.419546079 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.411416433 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416124346 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.729978297 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.483934038 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.410875067 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.412762332 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.429666929 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41147403 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.410826358 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.418963565 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128418415 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.413639142 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.410408191 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413471416 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411794303 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.43206122 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.41315 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.414748929 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.698655469 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.412732581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.415335989 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.41340051 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.411814461 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.41215146 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.612160731 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.416786662 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.781925548 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.413863026 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428860779 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.411845376 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.412098828 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.469024398 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413046614 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.419241312 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.366327184 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.731126639 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.433606953 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.434280121 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.41213479 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.426550727 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.413315976 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414449297 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.453062535 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414307632 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286982044 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438622031 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.442932313 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.412466146 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.419268655 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.414311926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.423297475 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414454668 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733834472 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.732430499 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.606651332 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.419938703 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.415012145 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.287132944 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.458643242 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.603838384 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.433441727 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.413719757 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.720261281 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.591976191 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.416926767 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.41519273 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.417260242 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.698862491 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.415618543 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745198657 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.094290877 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.417595977 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.417827842 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.27713871 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.176809444 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.420111642 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.417753578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.743232267 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.436147633 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.413722755 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.416107304 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.414809642 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.416278901 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.418929705 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.422337767 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.415846438 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.416753333 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.488606805 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.616057028 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.43703039 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.424293383 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021142052 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430121785 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416108379 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.418781059 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.416160614 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.416578323 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.452072019 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.419812192 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.448891656 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.41817731 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.427365944 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.05353871 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.417593964 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.418663723 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.618241183 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.239353586 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.422208427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.417995433 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.417531022 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.471686724 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.053708026 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.41867166 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.788235534 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.418650621 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.462574509 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432183388 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.516000022 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050286685 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.420293479 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.418081955 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.211203234 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.418564521 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.194857667 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.418215976 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.427379953 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.133625479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.418124667 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.421096135 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.418439835 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.419525347 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.731317986 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.420233395 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.419862095 seconds)
  done (took 518.472198972 seconds)
done (took 674.675107733 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.417619764 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424133187 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.423719727 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.424456045 seconds)
  done (took 10.989574985 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.436069912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.425912558 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.437338735 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.426876127 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.436086297 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.426146706 seconds)
  done (took 9.891065951 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.420748806 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.42426716 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.423547912 seconds)
  done (took 8.56996746 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.671361848 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445751589 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.844882999 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.425716604 seconds)
  done (took 9.690856342 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.436849335 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.437925958 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.435898277 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.437954496 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.439483838 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.438404004 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.438406811 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.437461625 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.439980674 seconds)
  done (took 14.242319549 seconds)
done (took 54.684009282 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.437997494 seconds)
    (2/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.413328128 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.403780107 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.462254292 seconds)
    (5/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.507913854 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506377989 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.594060784 seconds)
    (8/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.532155856 seconds)
    (9/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.464805306 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.457888244 seconds)
    (11/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.955392574 seconds)
    (12/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.453020486 seconds)
    (13/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.769667534 seconds)
    (14/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.401650374 seconds)
    (15/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.913375912 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.587111691 seconds)
    (17/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.400514374 seconds)
    (18/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.404482419 seconds)
    (19/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.77395459 seconds)
    (20/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.455287574 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.543776384 seconds)
    (22/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.613321784 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.403079582 seconds)
    (24/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.402592952 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.569745326 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.69492672 seconds)
    (27/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.509859897 seconds)
    (28/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.134336778 seconds)
    (29/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.860636176 seconds)
    (30/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.841237524 seconds)
    (31/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401228631 seconds)
    (32/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.489113293 seconds)
    (33/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.40221246 seconds)
    (34/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.526227788 seconds)
    (35/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.402418467 seconds)
    (36/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.533777659 seconds)
    (37/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.403317895 seconds)
    (38/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.673664829 seconds)
    (39/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.508684627 seconds)
    (40/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.427107727 seconds)
    (41/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.656016293 seconds)
    (42/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.403717698 seconds)
    (43/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.038006508 seconds)
    (44/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.513898531 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.882342656 seconds)
    (46/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.501479255 seconds)
    (47/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.610278309 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.620528167 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.594863825 seconds)
    (50/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.592589209 seconds)
    (51/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.405551465 seconds)
    (52/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.578259168 seconds)
    (53/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.643082428 seconds)
    (54/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.955359647 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.634896934 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.410436168 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.501253396 seconds)
    (58/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.404068125 seconds)
    (59/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.445263259 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.774705052 seconds)
    (61/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.45796186 seconds)
    (62/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.421070267 seconds)
    (63/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.719447285 seconds)
    (64/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.447508738 seconds)
    (65/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.467143432 seconds)
    (66/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.681617016 seconds)
    (67/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.545201898 seconds)
    (68/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.513767032 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.56298929 seconds)
    (70/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.460733008 seconds)
    (71/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.514701048 seconds)
    (72/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.960258133 seconds)
    (73/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.844664758 seconds)
    (74/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.721895524 seconds)
    (75/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.518010908 seconds)
    (76/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.655126684 seconds)
    (77/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.458268441 seconds)
    (78/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.513039819 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.599067375 seconds)
    (80/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.439313429 seconds)
    (81/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.520830919 seconds)
    (82/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.429784823 seconds)
    (83/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.548084093 seconds)
    (84/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.570357867 seconds)
    (85/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.71900562 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.606216638 seconds)
    (87/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.503144289 seconds)
    (88/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.464538849 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.512653997 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.407341617 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.576663788 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.513729413 seconds)
    (93/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.460429838 seconds)
    (94/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.40659103 seconds)
    (95/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.562834531 seconds)
    (96/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.577595209 seconds)
    (97/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.146081733 seconds)
    (98/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.503532951 seconds)
    (99/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.895540018 seconds)
    (100/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.539008065 seconds)
    (101/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.559502501 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.462471171 seconds)
    (103/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.771391577 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.411495265 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.566700397 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.463240102 seconds)
    (107/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.574394676 seconds)
    (108/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.495880928 seconds)
    (109/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.456781629 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.702086576 seconds)
    (111/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.746360295 seconds)
    (112/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.515344401 seconds)
    (113/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.43966184 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.642778897 seconds)
    (115/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.519414264 seconds)
    (116/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.597867892 seconds)
    (117/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.471736844 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.53483964 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.450848743 seconds)
    (120/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.505395765 seconds)
    (121/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.723600148 seconds)
    (122/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.466207054 seconds)
    (123/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.845559221 seconds)
    (124/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.813510972 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.600521726 seconds)
    (126/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.729458555 seconds)
    (127/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.470980994 seconds)
    (128/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.781141952 seconds)
    (129/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.874180583 seconds)
    (130/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.470315973 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.845593368 seconds)
    (132/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.69758245 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.710443689 seconds)
    (134/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.565296821 seconds)
    (135/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.411184981 seconds)
    (136/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.41695138 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.445088392 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.890186155 seconds)
    (139/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.75059168 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.56937178 seconds)
    (141/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.665113619 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.524212075 seconds)
    (143/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.591993844 seconds)
    (144/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.658001757 seconds)
    (145/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.431249207 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.560259945 seconds)
    (147/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.410127396 seconds)
    (148/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.462425495 seconds)
    (149/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.43276179 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.518528563 seconds)
    (151/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.409546027 seconds)
    (152/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.454207241 seconds)
    (153/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.923284744 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.540800183 seconds)
    (155/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.569391793 seconds)
    (156/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.475419153 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.440402067 seconds)
    (158/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.414611797 seconds)
    (159/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.554787196 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.879907708 seconds)
    (161/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.412166202 seconds)
    (162/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.418982881 seconds)
    (163/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.506896743 seconds)
    (164/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.605390692 seconds)
    (165/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.614172591 seconds)
    (166/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.533974538 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.433108904 seconds)
    (168/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.515301882 seconds)
    (169/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.464323366 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.541147892 seconds)
    (171/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.956139138 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.479070595 seconds)
    (173/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.52156792 seconds)
    (174/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.654088604 seconds)
    (175/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.544945482 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.603458009 seconds)
    (177/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.476449291 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.562854777 seconds)
    (179/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.525230549 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.655244574 seconds)
    (181/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.411334653 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.591968642 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.540487678 seconds)
    (184/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.413325218 seconds)
    (185/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.616708289 seconds)
    (186/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.413574959 seconds)
    (187/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.711254973 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.414249632 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.621023827 seconds)
    (190/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.684344326 seconds)
    (191/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.565429685 seconds)
    (192/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.510989358 seconds)
  done (took 351.086276436 seconds)
done (took 352.389330846 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464946529 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.539956907 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.443841417 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.443478675 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.446214355 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.435206093 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.466914525 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.444497722 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.458047394 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.459549476 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.436610892 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.454588149 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.460036011 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.457100705 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.477839302 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.444381519 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.444444225 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.455331213 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.459455052 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.462338024 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448581132 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446353426 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.47375567 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.445964773 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454232401 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.453644261 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.451382327 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.439898807 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.453783295 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.460789973 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.445163977 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.451747887 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.462325672 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.458134861 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.447742135 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.456040885 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448634192 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.543133321 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.467390969 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.457303347 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.455176657 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.464289729 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.451594849 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.451525237 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.459492473 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.474065903 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.455371752 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.461462536 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.447617627 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.456160815 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.467533715 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.458263571 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.455828279 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.454628094 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.443345115 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.462053095 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.458704015 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.468071691 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.455316316 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450311411 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.482036086 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468249625 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.45907809 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456206105 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.45595596 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.463228547 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.457164359 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.465391467 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.456037557 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.451066971 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.450745575 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.456709082 seconds)
done (took 114.310224113 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.571999958 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.445692918 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.604888015 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.456492355 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.617170344 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.569831751 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.456609577 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.458215578 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.455405886 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.2474262 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.456409856 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.45664777 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.445737718 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.458090784 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.567963223 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.459688741 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.456904714 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15137978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.458816703 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.588710728 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.448606645 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.457799581 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.459726803 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.258205426 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.445230878 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.442792326 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.590175985 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.458900817 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.15419456 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.442880091 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.442589864 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.15283147 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.589709455 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.477381496 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.46795095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.467368187 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.617436023 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464103221 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.575168245 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.573756389 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.608578261 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.498924275 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.442997565 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.448881732 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.463415153 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.460808212 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.459004306 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.488132757 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.447826157 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.460155796 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.150196803 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.470630431 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.461018305 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.462047168 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.460856824 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.490997814 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.460294669 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.460472114 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.592169186 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.461530754 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.57599529 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.258894925 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.253133511 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.461425049 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.447700196 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.461880905 seconds)
  done (took 116.398113407 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.521386389 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.528588539 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.576272156 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.452597555 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.501768863 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.575031343 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.452136301 seconds)
  done (took 11.928392507 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.458430406 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.462981616 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.501180815 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.503208419 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.462919178 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.626347582 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.460871328 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.464466458 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.462217306 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.503600633 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.463408125 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.461997614 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.471106755 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.452195372 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.501282449 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.464915027 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.569444456 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.454452083 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461051665 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.608468162 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.461488103 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.471190061 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.50578208 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.465901651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.462843589 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.460748885 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219207352 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465176025 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.463114289 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.464957917 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.463735618 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.52105427 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.462956553 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.453773843 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.462614076 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.568295701 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.465911175 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.463574448 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.465135786 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.45510012 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.465519565 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.464713903 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.465809756 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.464908309 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.464468344 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.480584763 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.464557117 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.465766165 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.464757653 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.465986531 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.506550439 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.464945835 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.464328202 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.464437938 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.50925847 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.474529788 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.465401512 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.46383138 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.464225353 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465505004 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.613652485 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.503662018 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.466776234 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.503200992 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46445087 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.465998599 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.46622841 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.465796331 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.546608759 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.466189347 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.504284392 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.466232218 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.639276411 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.48089714 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.468211137 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.460267906 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.46008265 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466051351 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.454973251 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.462948066 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.466507039 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.459416019 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.465482375 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.466831932 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.465873453 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.615729127 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.565219314 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.468009732 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.474058737 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.465798508 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.467603736 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.510981746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.467004907 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.46846343 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.511558311 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.575936664 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.509953716 seconds)
  done (took 150.022117445 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.470368313 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.471383283 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.463725742 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.486915603 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.457741311 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.458686356 seconds)
  done (took 10.136171624 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.462548614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.473089227 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.469014872 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.468359914 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.469984003 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.46900622 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.469507354 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.461140193 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.473401967 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.469571497 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.470539093 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.471179347 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.468928542 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.469817562 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.469220126 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.469011417 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.470310489 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.470088509 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.471003248 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470805496 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.457052003 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.47060178 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470882674 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.463567256 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.473079645 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.470131422 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.485589289 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.470389743 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.470887939 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.469551117 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.473575083 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.470876813 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.462413927 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.465256505 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.473801713 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.463705196 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.472567719 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.470792609 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.470532662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.471252419 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.472406767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471620265 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.471504969 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.471795156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.463609305 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.467869859 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.475377784 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.48621755 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.471930752 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.472249913 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.472463316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.470808983 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.472408873 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.472489005 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.465506809 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469570603 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.477770762 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.472237152 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.473646823 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.466306566 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.476503238 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.474625858 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.466132559 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.477129187 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.47318914 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.474029728 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.467677315 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.477109994 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.47262395 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.473190645 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.475534161 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.471705236 seconds)
  done (took 108.230611059 seconds)
done (took 398.030813775 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.105674362 seconds)
  done (took 4.436629735 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.627165275 seconds)
  done (took 3.961059353 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.511565585 seconds)
  done (took 27.852607286 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.514309649 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.462197299 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.460499076 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.456925804 seconds)
  done (took 11.224735151 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.02401853 seconds)
  done (took 4.355641737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.478394416 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.468223693 seconds)
  done (took 6.280350812 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.784966889 seconds)
  done (took 4.118684688 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.33590518 seconds)
  done (took 4.677369622 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.479501702 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.475591226 seconds)
  done (took 6.297103355 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.437168426 seconds)
  done (took 3.769983978 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.970243664 seconds)
  done (took 22.303728166 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.488112734 seconds)
  done (took 3.823656089 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.503324481 seconds)
  done (took 3.837000265 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.828190537 seconds)
  done (took 7.159860722 seconds)
done (took 115.429906086 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.461385092 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.463807562 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.462742916 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.464227215 seconds)
  done (took 11.184932604 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.540856183 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.538632742 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.549723807 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.53229075 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.532527422 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.542088806 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.501459422 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.501533292 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.531429342 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.527807968 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.543963821 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.534152621 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.54326127 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.500824136 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.527176522 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.545455363 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.531305771 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.549110836 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.50238494 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.53262055 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.477917186 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.533097381 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.529109887 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.47561982 seconds)
  done (took 37.961067004 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.966972758 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.539113106 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.623154661 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.519722407 seconds)
  done (took 7.98347408 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.581158585 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.58179797 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.600785079 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.637869223 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.685660691 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.595612817 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.504709886 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.500526629 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.485612742 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.582464711 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.665400773 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.581962455 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.811208853 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.478548618 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.797904464 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.477152377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.480867479 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.582934793 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.63232068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.669506493 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.479683273 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.580846675 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.587261203 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.58171257 seconds)
  done (took 39.498497292 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.486914134 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.49566942 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.478942819 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.494547718 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.480154643 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.480688193 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.483068493 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.488066581 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.47976702 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.480361446 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.48207347 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.493513235 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.479602806 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.481495024 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.490531714 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.482714833 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.483382815 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.487643441 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.489844663 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.482363887 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.479310088 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.486910599 seconds)
  done (took 34.00365719 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.464876562 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.465828613 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.815991559 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.720301427 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.466991383 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.465986876 seconds)
  done (took 14.73771806 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.558053562 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.724642334 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.475036538 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.906688882 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.991928921 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.47215209 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.473190057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.769620796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.139884597 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.159304199 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.541781443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.553394531 seconds)
  done (took 22.106865358 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557408193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47664125 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47677052 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5650462 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48189368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.477762875 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.558635379 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.002438788 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.484281111 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755026594 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483456206 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562022365 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.726999705 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491157282 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47683003 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.44849125 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710188249 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048471566 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48262438 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477603332 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510966945 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.47582533 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484207267 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.728186304 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482307096 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475988384 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.741160409 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478794378 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82403625 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799451322 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798974023 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483041487 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755167258 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982205833 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590197218 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.719800498 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48117696 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501424146 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.46519942 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.483837888 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514330853 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481474614 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795295677 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481515224 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48033741 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488901882 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045809748 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.49196187 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.479574121 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482495511 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801028812 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564378022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.486665049 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480667019 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492076451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479653691 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.485528794 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644063986 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122714896 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48088835 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511341862 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.485180522 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471896902 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489406613 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231618184 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.489272289 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.486803269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486433142 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48034721 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.479848171 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503793004 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481532786 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.504606575 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480580797 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443159638 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495719459 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483460159 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106927846 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497376544 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.48572555 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709121288 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481758946 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481156428 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.481593869 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481115306 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.351350273 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49111338 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.451022099 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54915174 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006007618 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.72844709 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503138265 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512669327 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.706311973 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.451972073 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483581324 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.494874465 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485152508 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503740187 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038555151 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487859282 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.489648306 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734345978 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.697130281 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484030722 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454745312 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066877419 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504092861 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.509997523 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486360403 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.731649378 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.213521507 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814335209 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487509101 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520965881 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484379439 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406271054 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498900966 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.492579508 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495735703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805000881 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.44585733 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485926622 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558255646 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483322228 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483550865 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484595271 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488261322 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484467864 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.706696563 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491293966 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.811450387 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.486378327 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484698915 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.490751164 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497823589 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.492488702 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.70876826 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497623036 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764245979 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484565846 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486308488 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486569522 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.706464894 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.500597766 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.493744742 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827284785 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489472854 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.496829829 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81608357 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52981603 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598382309 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520863919 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.491445306 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.742733979 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.493148855 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.494637272 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487896317 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49103599 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490818851 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.495138854 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507799711 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218938538 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486081135 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495267572 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488032686 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.503444287 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56209139 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496088494 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.740794623 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.509368448 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478927369 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.495273179 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.488443646 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710518231 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811096509 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.505382301 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.666996986 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.045882497 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218417595 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509654971 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.488519383 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.487450715 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.488369987 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490106404 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488794666 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.490635315 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.74105562 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823658098 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489217955 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251803822 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497137932 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490125686 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.497433881 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.814972075 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.505276583 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490397175 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.49557896 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490402001 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496171937 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.819126611 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719918226 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.508942527 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.491886093 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.00921762 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49776873 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.48973696 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490273322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516470726 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489836362 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103692267 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83256871 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491615454 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839729601 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498251661 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.509682113 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.48971649 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506216565 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494544337 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.500689311 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52077688 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.745950457 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498167694 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494714837 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13364384 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454450119 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161988451 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5101715 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.497003075 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498129325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059199416 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497123487 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493398672 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777875606 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054872062 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497228605 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052796765 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.499294363 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.404696605 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821061494 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.726695792 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504489545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.511455117 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.826377246 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.711752169 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520275675 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492719017 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500308128 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.462484929 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107372477 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499050188 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677273882 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056741659 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517479892 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501839792 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.54915041 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.52110648 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984126932 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498284779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494704133 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.499816058 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499702974 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172046162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50705739 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493730955 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246420782 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503470069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.065187967 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50040694 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.75000345 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.82705762 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.804469835 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.502236036 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.501164864 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.747118781 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.822828339 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50256185 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.50306953 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171370614 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.362597468 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.503938053 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498179853 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4678205 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513630285 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848582232 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.504431297 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.507113865 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510739151 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49729111 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496993163 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.497517205 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502719455 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48329745 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071753729 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.504167061 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48849215 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518234365 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502057875 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.746506622 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.512821234 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236822322 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72996318 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492538306 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.533338362 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.502604437 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495618467 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.467610369 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.497636593 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496218052 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526705851 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.723969106 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.511535474 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.471501381 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.56061181 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.715099401 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497954894 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.517176691 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765794183 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.503495129 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.517601906 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466501853 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531228827 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499732051 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524680559 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49540865 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581852488 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573905387 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754786069 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.836329413 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.836819624 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994005505 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522202271 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505263694 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.516979037 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58429199 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499358098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.531097975 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.50385598 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245232596 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474729531 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.245375923 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835707666 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50563782 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502157963 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500454418 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.743334496 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501521057 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776974534 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50142889 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.495888546 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52569425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501160707 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505194628 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719578964 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777364274 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502677637 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521308416 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505949377 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.50357581 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833689375 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.71817122 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08125132 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139076484 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506265677 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503029973 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076702502 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78384187 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503705903 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504713844 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501796593 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.513430564 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.505263137 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.514785337 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503531351 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730823061 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833794448 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025538606 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836973432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.536797601 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.379027998 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522751797 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753941619 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337709405 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.759116413 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250295212 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390193854 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764053205 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.578681178 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761675812 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.509921103 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741161573 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.518308645 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508755697 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504682954 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505018044 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.505083256 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.833997704 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249878259 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761721162 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.509591656 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.520581301 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539611231 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.761915469 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73420443 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414772653 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.730700292 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837334669 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513893401 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505403656 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249895834 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840820601 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512108978 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.509998604 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77225475 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512942323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.542151525 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.379547659 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.507077427 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144509659 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.721591002 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528401606 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513364228 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40587547 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253774167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.524625114 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113436698 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515141933 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509201743 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.782988853 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.514090269 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522487649 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.799311171 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.5130584 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.517565509 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770348378 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.247481563 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.433161938 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.519644399 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509457321 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.511124062 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506802304 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507953271 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513423042 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517989496 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.980145634 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.512716852 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50730561 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520507235 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.525821744 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513450759 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.513456737 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508231678 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.517894769 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.493464016 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.483350347 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.526749424 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671247546 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133028706 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512161812 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.124212056 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.844924127 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.759082408 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.520259292 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.483272093 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.516471858 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510688278 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510209764 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509981826 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505201833 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152317657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.523332484 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.849327672 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.522090697 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.722535539 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723032781 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.510483097 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76848944 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532232402 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535497981 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.478124221 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511668999 seconds)
  done (took 1046.271917552 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.509239644 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.533876628 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.554567309 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.573092599 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.527794915 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.539368828 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.593715505 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.537590534 seconds)
  done (took 21.737767739 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.502139462 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.515194332 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.501668418 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.515704237 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.500794923 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.072908358 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.511043102 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.516853008 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.535514342 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.51691672 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.519762303 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.24511629 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.511912033 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.512857465 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.51175532 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.517955349 seconds)
  done (took 34.888064856 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.819045375 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.795528182 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.339654819 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.521968125 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.561888053 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.516004428 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.951963832 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.539860788 seconds)
  done (took 29.417148972 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.51809803 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.518908035 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.518980473 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.517463027 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.519850534 seconds)
  done (took 8.96397225 seconds)
done (took 1310.090658875 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.518241501 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.519626221 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.518715528 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.520961635 seconds)
  done (took 7.449137449 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.482686871 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.483657703 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.489846073 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.501245975 seconds)
  done (took 10.328487547 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.949408904 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.182198357 seconds)
  done (took 5.504823767 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.513207909 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.277091825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.254472217 seconds)
  done (took 8.418303848 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.814674378 seconds)
  done (took 3.185314171 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.950988935 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.028155499 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.515709896 seconds)
  done (took 7.870589308 seconds)
done (took 44.12784475 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.51723547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.278352652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.683416053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511906089 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.684481055 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.679715263 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.733209953 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.505308658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.513329764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.516150491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.521894415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.691015287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.720944457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.273706278 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.723358054 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.276861678 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.687654699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.505510289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.511947462 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.517129044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.736692585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.505945302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.520896589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.517602733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.690727134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.669316303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.508985126 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.281686852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.518629721 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.510201175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.694252981 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.511913794 seconds)
  done (took 87.094113185 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.519906976 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.527396717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.511266731 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.532578393 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.512001891 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51316818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.532386546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.513682116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.512498401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.510762926 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.532921145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.512066452 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.51303559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.512493318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.514063543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.513924966 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.530612514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513189375 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.513477495 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.532832888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.514483149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.513582986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.513126383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.522060317 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.531434447 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.513969606 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.514118385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.527964883 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.513469361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.52870105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.514719195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.513298011 seconds)
  done (took 81.96998886 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.508079135 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.513611049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512951505 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.534962457 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.513386438 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.514357795 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.537640611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.5171346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.522340492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.531305456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.512313678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.544105065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.517668843 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.522905189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.5152737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.526957332 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.524143706 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.515910422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512984772 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.523045554 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.516859938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.529038922 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.527031605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.514401278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.51610263 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.516776275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.525207345 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.516647481 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.536966642 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.517537552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.51898375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.516110838 seconds)
  done (took 82.049222789 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.754868016 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.527726242 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.530344451 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.5216415 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.529879077 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.526050641 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.521562615 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.759692298 seconds)
  done (took 16.0496832 seconds)
done (took 268.539101701 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.520002737 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.525509237 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.575926569 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.52600889 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.596217534 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.548517522 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.760283083 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.553329098 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.745886712 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.527707785 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.660713556 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.524388275 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.481989381 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.676015442 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.520879234 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.52639704 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.520648896 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.518254616 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.545942408 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.783722362 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.557302161 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.516019288 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.528634259 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.528737743 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.50469536 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.604813053 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.606445139 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69825491 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.661320421 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.604770612 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.521250187 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.550770812 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.532085905 seconds)
  done (took 71.433757721 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.519083704 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.528905519 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.531688897 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.53227965 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.531923899 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.532593504 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.520358594 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.531613843 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.530354151 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.532433005 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.533264906 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.531445998 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.532188748 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.530073299 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.530874197 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.504565586 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.52173811 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.531714745 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.522336906 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.506724688 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.530548966 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.532123713 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.53264501 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.530927885 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.532407487 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.532854131 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.53285597 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.53358707 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.531248289 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.533154861 seconds)
  done (took 47.240161964 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.533354933 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.515909461 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.521155083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.534729567 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.525643833 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.53068083 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.890499179 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.53894307 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.532085832 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.534092015 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.536311009 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.540956337 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.579813726 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.521215746 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.533282453 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.533247253 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.535149935 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.524970721 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.520417774 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.545827075 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.903818052 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.537769114 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.901273047 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.54559377 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.53461613 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.527575567 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.540301643 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.519877176 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.53014969 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.532686053 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.526130565 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.901257931 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.529670933 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.523706116 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.541168445 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.542373031 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.53655441 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.521015415 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.534158713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.525927075 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.901326751 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.532928248 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.52455305 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.525447881 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.534714271 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.53628323 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.521122291 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.522427064 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.870564423 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.541262278 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.521468269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.540741246 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.539243757 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.530848181 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.84185529 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.536033115 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.528414984 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.526074488 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.533607201 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.8985296 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.543357855 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.528524411 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.535580562 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.528373345 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.532257813 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.531130801 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.545571798 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.530579139 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.530807954 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.532695054 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.522566916 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.531065039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.53809233 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.523892216 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.535473144 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.524825808 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.556182081 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.543600392 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.531112782 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.897803775 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.539688354 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.539494475 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.914344258 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.540872561 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.541322783 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.540788997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.540703973 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.607190354 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.896661896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.496165731 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.545620074 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.524725469 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.904613878 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.543637443 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.53326635 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.529484363 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.539564194 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.54299613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.528808457 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.523589184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.537765531 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.544839 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.525835296 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.539972636 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.908420566 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.544194748 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.527652918 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.533088369 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.607508211 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.541102644 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.545650845 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.543957861 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.917770462 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.543147926 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.542265507 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.525170521 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.53532011 seconds)
  done (took 224.06097942 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.527678685 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.527433152 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.527366082 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.526952818 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.526199696 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.533997207 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.530064582 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.526448526 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.532661896 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.527063992 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.530214323 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.536275878 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.533910515 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.527536066 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.54141807 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.528977246 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.54313224 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.537973338 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.530704249 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.527516354 seconds)
  done (took 48.013433347 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.542966334 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.225183093 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.219617575 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.54950408 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.543866755 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.53470165 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.603523287 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.546994046 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.54229086 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.903167801 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.757108005 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.550154671 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.545645787 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.542482924 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.202690487 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.516453749 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.906423094 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.227957977 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.544465344 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.228483329 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.517053297 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.54380055 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.534529356 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.229173487 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.917857385 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.894492984 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.610504758 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.235201665 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.545591575 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.545957723 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.228650295 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.545798552 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.537560151 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.214639028 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.546574752 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.559477611 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.54523147 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.607425506 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.612807324 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.913150539 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.237826276 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.90741152 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.559113037 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.712994994 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.549287806 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.517505254 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.242384007 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.547110554 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.518610824 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.547067773 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.551948733 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.217793464 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.540074638 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.216029222 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.547858985 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.54806863 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.232610729 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.218208684 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.208825698 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.760619463 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.543569216 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.896736143 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.549270139 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.243037799 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.547938405 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.547004088 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.548503596 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.76389472 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.237404061 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.898199474 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.911872171 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.911127645 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.548740464 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.624076924 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.552554839 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.910623345 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.622445198 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.958000658 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.913797793 seconds)
  done (took 141.623754533 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.874589861 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.679488089 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.991245405 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.185206857 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.112510542 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.689310723 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.677224634 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.824877069 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.55535408 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.65321792 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.324883094 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.651045639 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.402588858 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.628495379 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.66822185 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.682447745 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.012373916 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.547427502 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268766979 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.301579402 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.54433812 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.675128683 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.355294162 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.973407504 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.538204797 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.340671179 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.542538955 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.132079889 seconds)
  done (took 59.228326287 seconds)
done (took 592.978764953 seconds)
SAVING RESULT...
DONE!
