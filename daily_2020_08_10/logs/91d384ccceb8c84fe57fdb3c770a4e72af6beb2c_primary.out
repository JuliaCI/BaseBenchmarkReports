cset: moving following pidspec: 31489
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.542146516 seconds)
loading group "shootout"... done (took 1.196179781 seconds)
loading group "string"... done (took 0.396890758 seconds)
loading group "linalg"... done (took 7.471443093 seconds)
loading group "parallel"... done (took 0.147738465 seconds)
loading group "find"... done (took 1.30944088 seconds)
loading group "tuple"... done (took 1.833943371 seconds)
loading group "union"... done (took 11.922979039 seconds)
loading group "dates"... done (took 1.251834935 seconds)
loading group "micro"... done (took 0.189431564 seconds)
loading group "simd"... done (took 4.088674275 seconds)
loading group "io"... done (took 0.970265225 seconds)
loading group "random"... done (took 8.196011706 seconds)
loading group "problem"... done (took 1.557550841 seconds)
loading group "array"... done (took 18.243184981 seconds)
loading group "misc"... done (took 1.491277646 seconds)
loading group "scalar"... done (took 37.065123848 seconds)
loading group "sort"... done (took 2.839081307 seconds)
loading group "sparse"... done (took 11.102337343 seconds)
loading group "collection"... done (took 16.106530082 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.476722167 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.119238849 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.123280014 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.112095647 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.141770829 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114949065 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.119137525 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081020234 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.897623592 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.136383022 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.108929332 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417187739 seconds)
done (took 5.177304132 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161668792 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083739868 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074265081 seconds)
  done (took 1.283987999 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.059845135 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126439372 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061394528 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06157064 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.061892303 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06099883 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061430123 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061160416 seconds)
  done (took 1.621552082 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.067059305 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.062913002 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.060282739 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062778878 seconds)
  done (took 1.382881551 seconds)
done (took 5.653080524 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.227260914 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.096435169 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.275541487 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.383555248 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.441617206 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.085401869 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.068879292 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.064443659 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.124420721 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312198405 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.098367541 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.174661606 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08515069 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.168861441 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.972042084 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11364323 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080054737 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.116874322 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.087925922 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.125642547 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.39736526 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072410245 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068858473 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.064621145 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.062358936 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.645813434 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665054321 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.125818011 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079487213 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097116141 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.111582451 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.624452138 seconds)
  done (took 10.276939119 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088612184 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08629135 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063309493 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119116167 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.08771616 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.064077449 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.06937556 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.062189713 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085010487 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.118549411 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.084152561 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094482274 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.060505609 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.064041331 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070391958 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19113578 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.073903292 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075054498 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062847437 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074290797 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101221324 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.073441708 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073258272 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.073452235 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.122670926 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.162544361 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09100676 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.092253178 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061274541 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.074860622 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.109672938 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.120424987 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.061299167 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060670483 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.115021206 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.089973492 seconds)
  done (took 4.357687936 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.916076779 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085039649 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.097207433 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.59273346 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.060673309 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.143944719 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.231480296 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066639476 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.367056752 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084633267 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.141505828 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.105701664 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.058981749 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.136873064 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.10818056 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064107929 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.195586237 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.10808406 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.338950155 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06185044 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.060998185 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.059709847 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.063038832 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06202419 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.058318045 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06423795 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.086264997 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.080516835 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.183036088 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.910217707 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.238204779 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.061620658 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.160656691 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.07835768 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.354944343 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.06369508 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077287783 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.382006411 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.116610904 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060062299 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16282914 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.109215943 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.059259592 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.110872846 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.071872264 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.06402591 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.063298022 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06703957 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06746566 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074397499 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097721352 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061943588 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06007526 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.154539478 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.059482174 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061155636 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.062224903 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.1459048 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.059272254 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.133911393 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.058911367 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06273231 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092426886 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.062686695 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.084479065 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.079382326 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.096124858 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.32765307 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.031457278 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062132262 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.236314969 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.071173917 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.060570339 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065318096 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.060908641 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062292035 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061794414 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.06818484 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06379579 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.062533177 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102592453 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.061594287 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064323115 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.060896544 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065533651 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.093970837 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.059961739 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.446675515 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.091705393 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.061003768 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.07152211 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098711664 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.061650046 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.06733681 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.061861231 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061660423 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.060433784 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.061377719 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.175035075 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.05894504 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.087740429 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064266543 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.107408038 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.053635837 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06318451 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.060966054 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.066080154 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064876883 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.063467447 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061018901 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064223411 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.062664526 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.059867235 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.106013725 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.06120928 seconds)
  done (took 21.036240501 seconds)
done (took 37.7141797 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.241781564 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075955542 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076308293 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076293482 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076683856 seconds)
  done (took 1.769968578 seconds)
done (took 2.984833759 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101085456 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059184529 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.09407017 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092363776 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.061082069 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.058565706 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.091251271 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.058679738 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.090779581 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.092899074 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.09482558 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.09441688 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.058607762 seconds)
  done (took 2.26593037 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064355155 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.074898027 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077097361 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057196829 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.066420384 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.075931345 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.056960299 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.074611458 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080803746 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.075973818 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075785484 seconds)
  done (took 1.986405476 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064414703 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077439651 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077720569 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057442783 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068384151 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.075725098 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.056886827 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.075189512 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079221099 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.075799114 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.075485829 seconds)
  done (took 1.981490738 seconds)
done (took 7.433258271 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.06358646 seconds)
  done (took 1.246870096 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.516794232 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.580460313 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064638428 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.0837238 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.17660198 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.094668665 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.22312346 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.068958273 seconds)
  done (took 8.165229697 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088547055 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068303723 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.063980081 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06479243 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06268762 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06502317 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06401889 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06315944 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.064171572 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.06379489 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.064293618 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.062831551 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063944931 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.064197154 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063285675 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.063610596 seconds)
  done (took 2.336104813 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091274946 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089435813 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.067794649 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.06883808 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.066799069 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.065907813 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.068103013 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068014219 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065050434 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.066556767 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.069153928 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.067420022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.066826834 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058683553 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068149398 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070001726 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.065352362 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068331059 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.068558862 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.069664929 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069889436 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.059423761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067391571 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069350899 seconds)
  done (took 2.956920433 seconds)
done (took 15.903744346 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107760582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070874111 seconds)
  done (took 1.370203842 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066597749 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067007335 seconds)
  done (took 1.339199271 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072349115 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057108983 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.078546114 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.068432602 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057487452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056921036 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.076246059 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.057927388 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.056885631 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057181832 seconds)
  done (took 1.845681142 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.059348638 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.066895935 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.064299031 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.066368067 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.063995943 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.05841185 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.062050959 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058836091 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.066511651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.057615066 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.062821588 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.077012016 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.061897943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.078732375 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.061848063 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.063202875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.065566763 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063403557 seconds)
  done (took 2.370438846 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057605249 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.05798541 seconds)
  done (took 1.333645967 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061780349 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058320171 seconds)
    (3/7) benchmarking "month"...
    done (took 0.060773167 seconds)
    (4/7) benchmarking "year"...
    done (took 0.061450595 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.058243771 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.057272519 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058243432 seconds)
  done (took 1.626525119 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.399818331 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113669802 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328022191 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.064236793 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.073717122 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.237048904 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.058834761 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063653274 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063897125 seconds)
  done (took 2.654603938 seconds)
done (took 13.757734783 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075107775 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.078297325 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.083462814 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.409336061 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088029538 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.062164141 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.107270649 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.171694395 seconds)
done (took 2.306055018 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207800212 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.309573367 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.889461292 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.061171658 seconds)
  done (took 3.480592917 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315525485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.078501719 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072542262 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.061640767 seconds)
  done (took 1.762303703 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.059571083 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065991213 seconds)
  done (took 1.351724277 seconds)
done (took 8.037971598 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059506965 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.058871971 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.059643102 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.059154989 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.058943855 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.059033395 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083869769 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.058725283 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.058563233 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.058576828 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.058772069 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.058755684 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058694058 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.058807213 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.059044873 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.058873315 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058607874 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.058783763 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.058949074 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.058888531 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.058780546 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.058534803 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.059042176 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.059217942 seconds)
  done (took 2.69207977 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.075472328 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06113229 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063084369 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.062844413 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063156364 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.062873272 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.062649399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.060836169 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.062489439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.061500929 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062882016 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.062971201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.060861195 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063098486 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060890138 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.062980723 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.062572185 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06099434 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060580205 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.062924433 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.062179963 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060995232 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063076858 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062470243 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.062678398 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063430757 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.060700955 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.061053573 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062689046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06274325 seconds)
  done (took 3.113073385 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.059724542 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055676986 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.057227705 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.064262385 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.055720629 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.0567169 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.056527546 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.05559887 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.056302737 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.057474841 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.056372385 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.055780258 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05671838 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.055535496 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.055840525 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.05663743 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.059643642 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.072885774 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05576781 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.055634448 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.059870236 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.055886392 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.055544771 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056032232 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.056398945 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.055760734 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.055368957 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.056195093 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.055841351 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.056681823 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.055824749 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.059416025 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.060417999 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.055882786 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.064437172 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.059784261 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.055822449 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.059417677 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057199495 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.055617034 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.055764588 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.055730247 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.055693754 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.056033859 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.064159106 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.056145616 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057064509 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.056438434 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056072955 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.0557579 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.055969445 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058184345 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.060657387 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.057547083 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.055525804 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057344905 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05561616 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057029312 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056003006 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.055690603 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.055287899 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.058523374 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.057592479 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.056560662 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.072668467 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.057565234 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.064455614 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.056008389 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059431248 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.059280551 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.056601353 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.070949664 seconds)
  done (took 5.401302171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082166939 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083080567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060662607 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060250679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056664788 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056464892 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064157521 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056568633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060587021 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074982604 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056514807 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.060475807 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060249477 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060006472 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.056767047 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06045215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064546447 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056948197 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0565357 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.05992951 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.056713587 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.063948395 seconds)
  done (took 2.619972682 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135035749 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062373248 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097643379 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072335349 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064489268 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072320977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062359269 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0620609 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062274824 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06272291 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062327502 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061720561 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064326701 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062766216 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062493839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062121418 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062097864 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062296943 seconds)
  done (took 2.495352144 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.072931993 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06230624 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.082787797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061989044 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0615447 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061142376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065603219 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066525601 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061257215 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.061576575 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066254816 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061205187 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.060886631 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061232863 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061240846 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.061132033 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.060940862 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061658632 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06602917 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065375979 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065648117 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066199304 seconds)
  done (took 2.659214491 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070495787 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0606389 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073300486 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062283582 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056442266 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056511984 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06148874 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.060681564 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.061796676 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.060279891 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060650753 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05663501 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.062518736 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06095667 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.062495144 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060652994 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.059945304 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.060549199 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060243037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056663358 seconds)
  done (took 2.468723983 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081837149 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059539704 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059104545 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077331317 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058944287 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.059184284 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077090664 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.05926472 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.059413647 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080086204 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059329533 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059030359 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077285157 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077278878 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059234927 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077344693 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077402815 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077219739 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059329931 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059291794 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079848928 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059515556 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077047134 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059878887 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059215832 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.059464329 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059413009 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085141969 seconds)
  done (took 3.138424277 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059632816 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058860118 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.058824438 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.058869768 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.058650815 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.058847698 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059014056 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059831205 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058681058 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.059294516 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059092532 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059241216 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058835136 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.058593003 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.058994358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059021309 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058803094 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059095004 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059546331 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.058954194 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.058915142 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058897595 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.05888842 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.059070129 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.059216136 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.058977277 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.059478221 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.058985683 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059144911 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.05962288 seconds)
  done (took 3.021031264 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069625003 seconds)
    (2/2) benchmarking "in"...
    done (took 0.067912568 seconds)
  done (took 1.386815356 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058547019 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072377215 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056004166 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066663553 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06516208 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.059460223 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065754609 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064769387 seconds)
  done (took 1.754504381 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064028963 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085266483 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058140305 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.058820029 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062079302 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.112331914 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.071746089 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.066997072 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07172989 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.058937753 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.058554372 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.069538872 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.057341321 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068546314 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059651795 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064585538 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063013576 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067542555 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.068064713 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.056312688 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067262036 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058752074 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.056645054 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.058932749 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.057896556 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.063064217 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.071068359 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0680391 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064568321 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.055475606 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074698645 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05648701 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.057820855 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064769558 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06172092 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.056468147 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.089919485 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057384516 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062759528 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.056713588 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067734246 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074831466 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.068677373 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.072597575 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058814681 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059090941 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056189403 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.058885573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059418655 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.064423924 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056778821 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062837197 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.05628 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058314008 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066118472 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.056741695 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.063120913 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.064822672 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067389026 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.065634371 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.063957587 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.069846799 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064426428 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.0659091 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058302086 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073314778 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.058712367 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067142544 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069101531 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.057829401 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068905304 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056126884 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055387024 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.056514544 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086181633 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.058425886 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057886073 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.056829851 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.056837565 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.058240891 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.064446119 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062728557 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062421882 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060655912 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070456561 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.064301158 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.056240289 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.064422771 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.072593869 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.058765941 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056452827 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.070926229 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.058741242 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056197473 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07213957 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.064068402 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058108721 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.057076635 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.058783106 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.068840714 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.057639412 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.054724706 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.062918154 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.058040286 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059241048 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061584904 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.062628049 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.056263233 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064344453 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061780959 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.05820427 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.055000089 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.059404792 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057049465 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.054826268 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.063904941 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.055886173 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069646839 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.061300445 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068414866 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.06789711 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06426596 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068907179 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.055259281 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054182563 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07110201 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.196124958 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059705718 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074082918 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058182499 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.066309932 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.056888106 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059284996 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.065056107 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.055902996 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.0593648 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057107373 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06344628 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058835873 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059285953 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.060039838 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.063797372 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.067903201 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.058945144 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064350254 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.057692193 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070594821 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.065147246 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061826496 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063444818 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.058769361 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069520905 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063627596 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066493196 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057886804 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058935416 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058022805 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06703395 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066366832 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060106757 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.066820095 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061598278 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059003518 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058524333 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059466909 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.060630574 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061612655 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.057281726 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063041437 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064543217 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.069953707 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067958679 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064530081 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.055894607 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.05628508 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.058738421 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056268669 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060057908 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.064574909 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069741365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.067237126 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.074847031 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.057079635 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064474282 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.058482378 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071469391 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067545869 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.057647956 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062532657 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.055919981 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.058729592 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.064737809 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.067299475 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.069325159 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069144604 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060217836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.060517336 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.056414954 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.069122305 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.057748536 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063686549 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.064779391 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062420022 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.056880609 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.058786893 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.064344821 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060015599 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057051953 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.06978356 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.063902743 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056316969 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.068710816 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.056743507 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.06595818 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.05621573 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.05927866 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.060610873 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060117149 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064999493 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070347543 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055587492 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058274137 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070426458 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.058492682 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05857384 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06293658 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.069215365 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060319806 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063666276 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066079762 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064904062 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.059946296 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064689212 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.057653702 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.064086292 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.059753951 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066409326 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.056367075 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072082605 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.054974746 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.068585 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056496078 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.065692233 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.056858873 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06416551 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.057057 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.070693133 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.057842942 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.05693968 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.066464082 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054585559 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063864377 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055194136 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059128544 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061020141 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063591404 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.05743071 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200649554 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060148669 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065064791 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061587418 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06484283 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065645037 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061163019 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057065114 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.064318809 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066792941 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0643991 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.058785528 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059248758 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.05816081 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.065284287 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.059247389 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059167968 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064065884 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.0607303 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06183453 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058746204 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.05922141 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.059430952 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064404113 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065461715 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073262823 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063847544 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063159483 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.065120977 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056531325 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072961674 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.056690246 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.062833671 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.056002949 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.064573141 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.064697585 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.057229144 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074328279 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.059354799 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063954148 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068824271 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064219862 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.059874514 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073407951 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.061339657 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063656954 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064155823 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060533052 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062494756 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.058717776 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063441609 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.064787491 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.065865165 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.057606505 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.062405183 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06375074 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059128742 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.066349674 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.058722662 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063650616 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058640842 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.055949796 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.060100878 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067088873 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.060651627 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.060817699 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05691436 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.055613341 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057072714 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06480331 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060504981 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064016117 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069985116 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.055836632 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058259155 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056651353 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061520325 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.072913648 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065194809 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.062944712 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06048411 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056009271 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.058636596 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059021668 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057008516 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060923544 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056191099 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056720163 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065831571 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058839401 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060475428 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057229161 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.05814473 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.064248199 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.06248888 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057456098 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062270987 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056464603 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060432473 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056068771 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058612112 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060306725 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.055903087 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059248228 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065107154 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.070848695 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.061725285 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.063539658 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057906309 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.062762965 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069601919 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065014959 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057413787 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.064094643 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055592292 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072063731 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.063982762 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06268333 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.064181817 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057164192 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.070640201 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059661311 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.064360153 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069232354 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057210358 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.063553639 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.055728447 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068576219 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.059040821 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.054838907 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.061939969 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.061561799 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.201369305 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.06846299 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.058471354 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.064956844 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063652726 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.060160101 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.059051558 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059539766 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06468459 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071239364 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.058260586 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.062217276 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.063759492 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063530349 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.060707377 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067832184 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.063741838 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058728217 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.058953259 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.059847401 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.057751337 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.067266147 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05780153 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.060441632 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.060369628 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.056603872 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.062779045 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07092084 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.064859752 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065229377 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.056964939 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.056246511 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.073351697 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060232429 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062354394 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06400759 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065341159 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069765039 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.064706905 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071925661 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.057349453 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062072396 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068248946 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.057751677 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.05703205 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.059692598 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.058951742 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.064778876 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.065482516 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.062639081 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058852093 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.062607248 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067824148 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.058025658 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.060343132 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062351866 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.057676202 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066882241 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.063582834 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.063643865 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058666596 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.056429981 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.059149859 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.063946537 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.062318691 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.064171986 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057729621 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065160479 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069171002 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.062486097 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060787348 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056900842 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060895611 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064221861 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.062374566 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056730137 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.060568553 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0595189 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.065229348 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.064744803 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060685102 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.056987751 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071913743 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064053289 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.064444688 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.058822517 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059006989 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057526033 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.056413177 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066540171 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.056925257 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.058906402 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.060463728 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058609994 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07215142 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063366938 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07044675 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057752076 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060450009 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.056365462 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065060375 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060184841 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.056848677 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.065395223 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056029439 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06972183 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.066617312 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064766893 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056144975 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.060330725 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.063207917 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.068760936 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.064477124 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.063799739 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.060362109 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.064671752 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058306974 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06562998 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056165398 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055387942 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065092052 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063127043 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.067082427 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056178433 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064487601 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058287638 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062498717 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.062534303 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057477207 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057688794 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057436743 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.204193463 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.061823366 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065665818 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.061852404 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072275796 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.058473152 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.067204799 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.064747658 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067141817 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068054429 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068869439 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.063899871 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.05744254 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06294084 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063794126 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.058315834 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060423361 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061110622 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077750292 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.059012955 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.05879967 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071010344 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.064794872 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.057059781 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.064825628 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.060799038 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066083998 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058388284 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.066093382 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.061879771 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058056419 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.060506478 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.060905452 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.05597214 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.056793571 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05666113 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066183507 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.060567682 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.057456948 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073938016 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.058855263 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.063731276 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.066888182 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.062664532 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.059180626 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.056226108 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.058114339 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067560734 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070580785 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.059644369 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063898181 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.058731174 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.064544824 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.055775541 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.063951673 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.063624083 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063613849 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.056603372 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057629773 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.06899468 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069940429 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.060153037 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.064852457 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.064369087 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058864461 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076961355 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.064364716 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058019833 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.066568235 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059863798 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.056413494 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.055986475 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060067771 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067256358 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.056909327 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.06023914 seconds)
  done (took 38.997309647 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095407679 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058550358 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057141228 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.057088059 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0687492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.057832616 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.056738922 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057930593 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.058163968 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060045363 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.056862931 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.056839379 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068543327 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.071104611 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067910495 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061316805 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05690905 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.057849394 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.056987727 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058219948 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067471775 seconds)
  done (took 2.669801532 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.064824767 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072547696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068718068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073693286 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065378606 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062364482 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068896318 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061895515 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06959474 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06698778 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069539054 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061785888 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066892828 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067069654 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066851793 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062124196 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069523575 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065659738 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061676258 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068633759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062002686 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068959616 seconds)
  done (took 2.805350429 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058561828 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057710788 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.063729497 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056365355 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056763118 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060481628 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056508994 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.059641709 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.059991609 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.059702749 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.063858999 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057451481 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056326936 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.060873434 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.056045989 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.057496994 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098879685 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.057375734 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.05728858 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.0560777 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.06216716 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064382573 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056384574 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.056336764 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.059456219 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059923955 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056271691 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.059629103 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057308272 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.059641521 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057704566 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.056156747 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064077236 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063059087 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.059632429 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.059996468 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.058270344 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057424585 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.05629803 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.056413629 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063148821 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.057926695 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05659596 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058068964 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.063880018 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056834199 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.05635067 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.063817191 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056073699 seconds)
  done (took 4.27053615 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069675602 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.104324357 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.062077422 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085290194 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.070908536 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.064263674 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.062028155 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086071222 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057827429 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.058696474 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.072218232 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.071918968 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.060506235 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.061977458 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.06356684 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059888571 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061021331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059084491 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.063191957 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059451955 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.063310686 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.063291019 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07053305 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.070923032 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061037281 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.059107931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.05934841 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.061532764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.070946506 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064285679 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.061937917 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062497741 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071522659 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.064345114 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059447203 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.059632769 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.071905282 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060652304 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060010964 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058212971 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059668719 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.061432662 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06355598 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.07218436 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060391235 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.064364404 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060185478 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057905248 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.071229357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.060044752 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.064702558 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.072527635 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061392392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.060482862 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.061805938 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07129339 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.060229404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.058552878 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.060429499 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.070669887 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.057948358 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061046408 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.072076771 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.059394131 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.064232934 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.071944302 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06424495 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.061645719 seconds)
  done (took 5.893728621 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067620563 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087141475 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069073147 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06801784 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067687727 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068261368 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067685675 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.067929637 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067412 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068093161 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067671587 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105953898 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063101224 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073235689 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067539184 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067406661 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.067370451 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067833385 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067450224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067599528 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.067527223 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068184687 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067737615 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067985602 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070382955 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063140988 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067881145 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067412335 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068226266 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.067696886 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.070778202 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.067889484 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.067617861 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068368962 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.070695072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.067578609 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057542809 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067656307 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.067598031 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067563971 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063696662 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06828151 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067350132 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063113701 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067657116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.067338217 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068727189 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.070879142 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076466127 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068297442 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.067998451 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069212803 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067500928 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067639759 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068719558 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076221533 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068419494 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06858089 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068309432 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068494554 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069187073 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.076424052 seconds)
  done (took 5.659956843 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073071783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066002318 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076790004 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058742276 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057158719 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066555253 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.056400562 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.056445024 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064939238 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.064986734 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066974715 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066578957 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068780151 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066855621 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066022458 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068893399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066103017 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066021954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064884939 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066304623 seconds)
  done (took 2.684359717 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.068462672 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0749681 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062399538 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067076864 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.061960979 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066392303 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.061630435 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062507473 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063115097 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06230561 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068389985 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067882153 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062603547 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066525499 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06772985 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066345987 seconds)
  done (took 2.413551835 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063822448 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.065412943 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.065581351 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058380254 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061375085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.057395718 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.057615983 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.056676503 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.056941931 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.070640073 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.057816227 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068706502 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.057891052 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.056756186 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.057871992 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.063560611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.057122332 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.057931968 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.057756861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063504363 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.064367962 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059044355 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.061459446 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058325933 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063014372 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.064852697 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.059742552 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061355837 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.058526316 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.058692554 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063187524 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064380257 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.057492962 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.058795355 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.056714017 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05792082 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.058201858 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058457956 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.063267825 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.058002702 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.057295939 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062401084 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.057800414 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058948914 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.057060198 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058306998 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058072936 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.063304955 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.058213558 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063104602 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.058352799 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060438338 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.058807066 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065252021 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.060636315 seconds)
  done (took 4.678551033 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071658563 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062121227 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056831023 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056997226 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062059164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.062512247 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062064301 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061825105 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062902075 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057235294 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062384359 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.060996192 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062221262 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061824003 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062038837 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062104954 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.056486991 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06192383 seconds)
  done (took 2.482813757 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.0679903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061323566 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.065801794 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061250128 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061286789 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061084972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057069658 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.056971747 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057020513 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.061163631 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061210458 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.060971892 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.056918315 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06072377 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.061382517 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061169844 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061227543 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0569427 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061294806 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.056903459 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.060988091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057141025 seconds)
  done (took 2.694742403 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.08348494 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079113332 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.116695501 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.073964206 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081381728 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.06624136 seconds)
  done (took 1.871190321 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08546779 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09877759 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061844469 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061942731 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07193014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064719008 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065350368 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065256995 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071963617 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070190676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064875785 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072299205 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072121775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067332199 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071830735 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076676303 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065311252 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065153213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.061565902 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075067143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065293491 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071836914 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065477981 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064941484 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081825658 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066992031 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075512355 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070019989 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067208277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071750524 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074864062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065312524 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072185364 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07092591 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061472607 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071976544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065252762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075449899 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072011829 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067504689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061546403 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072633346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071997176 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06730021 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075176005 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065507184 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067528368 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065472408 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065519729 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077744382 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07207346 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06729876 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072247999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075440262 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075341423 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077796947 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070229627 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067542443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072388428 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07042848 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067907703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072397192 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067286463 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069881755 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0751536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067546607 seconds)
  done (took 6.005558852 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09351297 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061992563 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065554762 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070348399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067523655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065292088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065052335 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065155287 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065504867 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.062131763 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099117169 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065673388 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067361213 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067566117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06591251 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065012774 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065420129 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067510971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.062466257 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077607538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065509865 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067156304 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067459479 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067324714 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069891513 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074962585 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065333138 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065248302 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066180221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06689769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0681822 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065400596 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067641827 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061643585 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067241059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065465948 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065400366 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067377458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065055935 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072046881 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067272344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074973954 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065074596 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064961283 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069672542 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065042973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06521594 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.062002856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065183388 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061810326 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070274957 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070093771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070091011 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067564576 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065377864 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065556159 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065420251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06524839 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065386234 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075245776 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067687906 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065276309 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077661952 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065257453 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06518006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06738572 seconds)
  done (took 5.864373461 seconds)
done (took 120.969693002 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203180414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17905007 seconds)
  done (took 1.734110861 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068657306 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.090798285 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.070094416 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127991396 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.065426332 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099362064 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098870506 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.069916515 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065277463 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065158243 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.064986925 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067797339 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130403548 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065460247 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065357636 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06819772 seconds)
  done (took 2.654964003 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09854257 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.174691033 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10248384 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06341166 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097882781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070377837 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063174796 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.0739028 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.066988264 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066530761 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.071068396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069002197 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066182449 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.068861967 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067182254 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.070849404 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066210473 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070763983 seconds)
  done (took 2.806816815 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088072718 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08021272 seconds)
  done (took 1.549484763 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148531741 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099379925 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.137919767 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.311137483 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.130043435 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.269918638 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.124793177 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.123038927 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10608887 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120064338 seconds)
  done (took 2.945708999 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095761833 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158924696 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.290321483 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.112150324 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.069696416 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08073987 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114039659 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07507074 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074317786 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074228119 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074573511 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073315395 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091016862 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070734098 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.070257248 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071201798 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.094156331 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069981902 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.070344722 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07039492 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.0937726 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.063853314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070993261 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069463764 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072191446 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072025537 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065458246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064003709 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.070143333 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.069673567 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07283087 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0780997 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072259743 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.098132274 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067919781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.098597059 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.06886842 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.067894469 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070040689 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068222141 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071477234 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071573323 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072111151 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071139162 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065140895 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069558726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065089284 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.063738933 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073494076 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065179268 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073770674 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07346382 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09756691 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065194428 seconds)
  done (took 5.769748419 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103880899 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101212431 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065122418 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109534958 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098023119 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06457448 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098992133 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093268685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100712996 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064439085 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063434585 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063591856 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071806061 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074669948 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109529473 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10183337 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06594752 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063979058 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101178178 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101285358 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.062918528 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094642875 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091761183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100785306 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.062524474 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064267317 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062671996 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.063374436 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069646577 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.070780281 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063321851 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071881315 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.076473544 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071340092 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062852537 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.062735406 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062635365 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071351425 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071778898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071716416 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.070497166 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06219076 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062767476 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063209224 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064030666 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062545514 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070705417 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071620638 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.070731112 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.062927116 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.063383226 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.062553633 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.063198826 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.071320513 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.069868772 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.071692775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071562525 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.062510597 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062810448 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064685239 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.072344857 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072365727 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07162668 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063935421 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073916664 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063808377 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072983066 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076719744 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.062994454 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.063484031 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.062743241 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.062946355 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063223463 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.070012232 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069869096 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063489279 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06276482 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.062741699 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.072531939 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.070688471 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062827653 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069522375 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.061943203 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063016291 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063237798 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063309132 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.06967013 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.071631627 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064030499 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062788284 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.062629351 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.062549734 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.062156926 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.069612849 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070809461 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.071334756 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.070121549 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063142886 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.070287801 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069692087 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06306661 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.06984736 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062464415 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.062696838 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062626505 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.06994041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.06810465 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070673928 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.061513133 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.061312121 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068808371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.205866585 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064100709 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071792575 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073500799 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.071787996 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063327915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.075938987 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063451867 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072645583 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063713286 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073079756 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06388573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071458773 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06367262 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06257927 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063552551 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070987235 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064167066 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063137613 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063461119 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063263411 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.071500693 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074559816 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064388355 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070988544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.071153857 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064121339 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071143695 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063353258 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071894626 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063603437 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064171839 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.062742575 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073690016 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064812635 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.062912698 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062795671 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07256105 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063498043 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072567803 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070063017 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063178831 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.073704948 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073099969 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.06999372 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072707983 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063920009 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.062994039 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.062855059 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.063314738 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.070235259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071518082 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063643555 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063135396 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.070188011 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072376751 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06236512 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.070533128 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070691659 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070569533 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063268356 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.063296983 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073432653 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072600878 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071069652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.070798636 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07128089 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.062900195 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070302187 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.071411006 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063178819 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076789524 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063806209 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.074835262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.071165302 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0697688 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071246485 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072129754 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072903715 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.073076216 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.075042374 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.062776113 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.062843297 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.071016513 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.062948923 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063176779 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.071008521 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.063426084 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.063783683 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.075646429 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063315841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072808763 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.062379584 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071461303 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062338362 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063503423 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075051611 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063007625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.063641413 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070670246 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.062659225 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069869626 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072379297 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069977471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062335505 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062773371 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070271298 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070649637 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062247712 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06161421 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062074 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068269657 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.067994774 seconds)
  done (took 17.081006538 seconds)
done (took 35.933439359 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.200551451 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151550229 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.184584047 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.109638927 seconds)
  done (took 2.124112799 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093808186 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092584586 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074421579 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.059862574 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.079862034 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.060041475 seconds)
  done (took 1.884561557 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.273648744 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193555441 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170667157 seconds)
  done (took 2.05432569 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20640771 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189047378 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443873658 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279289506 seconds)
  done (took 2.631158016 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127790451 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076723342 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059309951 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.069835277 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109013222 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14142257 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.085958575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.110711964 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.0702264 seconds)
  done (took 2.325594846 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128482356 seconds)
done (took 12.598292134 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.20135941 seconds)
    (2/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091302049 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112242444 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.222947503 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067179137 seconds)
    (6/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.232511894 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.111728942 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.062626826 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069685798 seconds)
    (10/309) benchmarking ("sort", BigInt, false)...
    done (took 0.239670859 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061579458 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.157598992 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069359677 seconds)
    (14/309) benchmarking ("sort", Int8, false)...
    done (took 0.376835686 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120389041 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072793399 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096444279 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.185390951 seconds)
    (19/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.232378627 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.178427252 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073791096 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084773481 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11440048 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108345987 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073804517 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069808412 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079635301 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068602723 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072553254 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.169045102 seconds)
    (31/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.068805096 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079504348 seconds)
    (33/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069494259 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071297964 seconds)
    (35/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.062813729 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.060288355 seconds)
    (37/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072798295 seconds)
    (38/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.073397407 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087006689 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067143869 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174446273 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06725921 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078764489 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059855012 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.068164693 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.219799583 seconds)
    (47/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.064566231 seconds)
    (48/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.069252654 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19018883 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.059013566 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.076870872 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.073294992 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.13205758 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 0.142061383 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087899063 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186563075 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081496266 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.166827283 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.151624594 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.060985495 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064723738 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084772622 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089219773 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072122862 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.075238442 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.112364928 seconds)
    (67/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.080888767 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.059729188 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069274384 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.184691506 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.059511761 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.072342071 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061060452 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059002276 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.16546582 seconds)
    (76/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.159262128 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.129822711 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.146837789 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.066578095 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100726474 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061777704 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06905776 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077007803 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07839165 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070135782 seconds)
    (86/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.059258378 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.1105482 seconds)
    (88/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.242156007 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.166307257 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.13429132 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.207642269 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068464146 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148384995 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.0671173 seconds)
    (95/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.13249749 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 0.129133626 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.211306504 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158297834 seconds)
    (99/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.152269899 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.062823053 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.060804325 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06182454 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.060256057 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12161886 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135440393 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068544474 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.059940897 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088070292 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199450107 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.194313202 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067037642 seconds)
    (112/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.071281883 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069256059 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068620196 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14765363 seconds)
    (116/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.134020081 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.060967581 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120198266 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061514124 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069395188 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.198248916 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160700283 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073207056 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069345174 seconds)
    (125/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.191125287 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.059572445 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069568263 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.068995414 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060200477 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067168841 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061296598 seconds)
    (132/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.060387127 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.080820961 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061307779 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06187404 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139068945 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059819247 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085168124 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070012321 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.060979801 seconds)
    (141/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.172042774 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071407522 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068581417 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.074953568 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.085905702 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066740353 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070228918 seconds)
    (148/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.066431423 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06680269 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068243241 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.059817816 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132430239 seconds)
    (153/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.060979392 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.060115797 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.152829288 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195547412 seconds)
    (157/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.068638055 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06098706 seconds)
    (159/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.150444544 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.059060317 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060512542 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072395245 seconds)
    (163/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079673548 seconds)
    (164/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.087735241 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.061392705 seconds)
    (166/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06265004 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.060100308 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0593421 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.155362041 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.060711808 seconds)
    (171/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060676811 seconds)
    (172/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.205162581 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.085510178 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061177719 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.073271789 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136306075 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 0.125223513 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.059657435 seconds)
    (179/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06151013 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.064150249 seconds)
    (181/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.060845207 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.123700675 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.05986449 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.059531249 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.058473663 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062761548 seconds)
    (187/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.065946699 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.125247178 seconds)
    (189/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.12918148 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194105138 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110501696 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.154576065 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.218595232 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068236554 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.061894551 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061686968 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082139208 seconds)
    (198/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.06247423 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.090338937 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070632507 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.159671449 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062145587 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061416273 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.071147968 seconds)
    (205/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061859785 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06820444 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.059836348 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.061705936 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067287189 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.114323541 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059772519 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061247654 seconds)
    (213/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069227158 seconds)
    (214/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.061716297 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.060824077 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071444902 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071752409 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132521869 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060091914 seconds)
    (220/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.059807133 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.082246861 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123413424 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06028425 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.178937929 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06009326 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.059826898 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.061767399 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.068308392 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.181701929 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.059977623 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.061315607 seconds)
    (232/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.065221072 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.0614532 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.061044278 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.126728272 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059800283 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068027443 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059971601 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060099349 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.166196091 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.066993033 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.06901811 seconds)
    (243/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.060234033 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.081738465 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065450062 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.082649171 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.060387355 seconds)
    (248/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.152037011 seconds)
    (249/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.059991807 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05976363 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193345637 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.060788567 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.059354469 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.181518986 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069388509 seconds)
    (256/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060170105 seconds)
    (257/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.0721303 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115494025 seconds)
    (259/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069399413 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.159553413 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061754973 seconds)
    (262/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.130144873 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.059898628 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.060795998 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.079984172 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.062435375 seconds)
    (267/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061252962 seconds)
    (268/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.059759436 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.061224718 seconds)
    (270/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071278605 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.062372604 seconds)
    (272/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.059763727 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.060049934 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059500812 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.066778236 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.083644639 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.060731259 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111265413 seconds)
    (279/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062253295 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060129495 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.059740181 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.060004385 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060792316 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059083128 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.068482768 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06044249 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059637354 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060781205 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.070688122 seconds)
    (290/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.060798636 seconds)
    (291/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.130197673 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.059338578 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.085058351 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.125795474 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.060169437 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.061002213 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.066995832 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.062417096 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.063749957 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.062077441 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.118864776 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.156002391 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06101361 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.066795456 seconds)
    (305/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.061055251 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060169565 seconds)
    (307/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.132293508 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.060424744 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06307009 seconds)
  done (took 30.789852141 seconds)
done (took 32.22500704 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081129686 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084627641 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.068319474 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080109414 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.075344741 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091209426 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068149846 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07328102 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075177892 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074267496 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.073472996 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.067291841 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.069873323 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.069563183 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.067381735 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082673307 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074168224 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.068060333 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.068698257 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060038991 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.068980967 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.060267034 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.059898169 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.066305488 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.071134708 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.06700308 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069337481 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.06940675 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06055626 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.060441518 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.064985695 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.06890958 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062656417 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.073045652 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.068942687 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.068794888 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07026812 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.072214295 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.059921682 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.060785523 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.069993794 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.060690787 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.06857946 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.066890368 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.065795871 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.067028054 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.068927523 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072551325 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.082835305 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064032582 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070395078 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07117647 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.071805509 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.065652603 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.065335727 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.06856367 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.066575244 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08245147 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.068717964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064207044 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.069950406 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.069240593 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.066626835 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.068785603 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.068853148 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.070841315 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.072992081 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.066873404 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070177402 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067392672 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.059869826 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.06856976 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065308105 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06035584 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071699583 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07312556 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.059429941 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.064378985 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.0681193 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068621909 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.060092187 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06399763 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.059612984 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.064864165 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.063948551 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.066627985 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.06521092 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.06775821 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.059657687 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069361662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.067536515 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068252889 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060074024 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073196238 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060302502 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066536155 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.060433962 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.060495012 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.059641259 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.065608352 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06003188 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.063766509 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.068797843 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.059698193 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06481994 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073679574 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.060171916 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.067687086 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.059679248 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.059908305 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07177502 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.070346789 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.060516241 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064298149 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.059733762 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.065905153 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.059928251 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060002376 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06020219 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.060557566 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.064867148 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.060192373 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065341585 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.065389522 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.073111702 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.059910539 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.064806844 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.063903066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.060169975 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.066704091 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.060170641 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.060002767 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.059338678 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072996802 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063333076 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.059689431 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.064626099 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06273377 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.067041488 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058187836 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.067844256 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.065290268 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.205012088 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067852378 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.060468875 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.072359477 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06461789 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064647026 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.060577776 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.060860416 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.059488616 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.060203781 seconds)
done (took 11.839625729 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061095619 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.088762153 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.068789233 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077501275 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07302405 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.061515086 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.065431713 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.079005793 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.063993433 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.079475082 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.081568843 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08023529 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.087346968 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060074689 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.061201517 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.061889217 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.059479197 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.066899233 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.076272425 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.081464219 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.089019132 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.060508256 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.069474687 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.075591111 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071228845 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080029121 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.061396823 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06182577 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.063442794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.075898592 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083276654 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.060587164 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.061601899 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.07501227 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.074847462 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068688528 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.061173864 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065443046 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062574064 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062524711 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063602596 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075258095 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.064904737 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.066918239 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.061632495 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.061894298 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06169357 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.064841167 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.073616416 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.064778421 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.06830285 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.072910981 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063025548 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061064859 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.059739429 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065313686 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.060996029 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.061497338 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.060987926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.060766839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.061401402 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.062619897 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.061473332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.061825051 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.064192421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064233595 seconds)
  done (took 5.981697459 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.077918179 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088464683 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077364082 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.077285878 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06056298 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062331114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.061632669 seconds)
  done (took 2.036471027 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.061403712 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.074050998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077094761 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.076969334 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.070579134 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079306478 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.061147693 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089984533 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.060228522 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073341364 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.106163605 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077897805 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064075297 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072134156 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.061160602 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.069370081 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06118922 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068863504 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069851366 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.076898496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065329527 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087372306 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074070462 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.061283094 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.081888453 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.066064278 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.060774356 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.061850201 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062826415 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06242674 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062203666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.098781249 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06599104 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074786713 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.062490588 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.061325367 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.067504149 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064498596 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.064818939 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.067240605 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.067073591 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.062493714 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060463376 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.062425952 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.063852927 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065333783 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060151875 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.062848223 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062320233 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07278463 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06021883 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.065864356 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.064549452 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066159144 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.066868098 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065657274 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.069527172 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.062750493 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072870691 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069022079 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062560109 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070615764 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069606983 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.067254978 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069592084 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.065699779 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.066095425 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.067353609 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062443434 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.063386478 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.062782983 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.070033282 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061137049 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063332738 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064744959 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063345619 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.06559513 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077975823 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077378345 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.073460348 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.062786489 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.062783466 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065755234 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.077554283 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066390713 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062506381 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064611865 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.060654375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.065394914 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.062907372 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067028024 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.062835328 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.069569884 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.063930059 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.064803024 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070383032 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.061404684 seconds)
  done (took 8.099144319 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.063964647 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.062322063 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.063604643 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.062657063 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062432673 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.062346115 seconds)
  done (took 1.940826427 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08511329 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062782052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075203063 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.062686445 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.095795603 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.069653747 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.070083364 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070918771 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074586968 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.073806629 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.069648103 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.072537512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069160066 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.063957199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069228796 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063412535 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069475214 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065601701 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073245929 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064014885 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075644178 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.063781808 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063932844 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073352475 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.064917106 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.062941172 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.061759544 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.073117925 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073061884 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073242987 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.06381841 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.064689355 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069065675 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.070200569 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.069492954 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069313221 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.061832784 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067441106 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064251683 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065269241 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.071595719 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.063993893 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.064545917 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067875684 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.070444046 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069511565 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.067718859 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065793173 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069086259 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.067697657 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.067568488 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.062904615 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.064956924 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.067555382 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069135728 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070496239 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0675828 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.069357278 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.063691046 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069223491 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062406996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065057265 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070704175 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.064767564 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.066495001 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.067688108 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069468791 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.063640211 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064163458 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062148484 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.067711639 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.062014899 seconds)
  done (took 6.443865754 seconds)
done (took 26.025227619 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.975495689 seconds)
  done (took 2.495101934 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.55541875 seconds)
  done (took 2.111641227 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.67687268 seconds)
  done (took 8.229382935 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.294328811 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338569499 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.702623423 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128297683 seconds)
  done (took 3.05233053 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.708178537 seconds)
  done (took 2.273949086 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226489255 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216656364 seconds)
  done (took 2.018557798 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.340878354 seconds)
  done (took 1.898468673 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.103572201 seconds)
  done (took 2.658656398 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.227517873 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.153896721 seconds)
  done (took 1.936054466 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.440094037 seconds)
  done (took 1.995063881 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.388866266 seconds)
  done (took 5.944024823 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229702519 seconds)
  done (took 1.834896605 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227147356 seconds)
  done (took 1.783752322 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.693488575 seconds)
  done (took 3.240335494 seconds)
done (took 43.038632905 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077302544 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079363542 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079539696 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075881982 seconds)
  done (took 1.847485845 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.070000022 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065557246 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.06882752 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.069189558 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.066921917 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.067903362 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.067863352 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065138328 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066307057 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.0652613 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.063445186 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.064861981 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.067877827 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065173788 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.067981211 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.069056203 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.064769262 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.064881743 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.067809896 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.064818122 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.067707036 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.064618033 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.063298149 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.064203324 seconds)
  done (took 3.150630428 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073443635 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.067631437 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.069868712 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.06585381 seconds)
  done (took 1.841130143 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071368004 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.080564487 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.082657525 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.08743674 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.070983951 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071829575 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.079427698 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.080076438 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.060831487 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.08319057 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.06268182 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.061521534 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.061956358 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.08141765 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.079244719 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058203313 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.059742833 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071840028 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.07125618 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.072784128 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.062896681 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.060174391 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071259123 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07136838 seconds)
  done (took 3.278297821 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075018097 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061003163 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074768452 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086826547 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088923742 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.060576968 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.075600155 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088561537 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134499412 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.060479558 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06634805 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.060611697 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100751892 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.0604422 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076370415 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105361639 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108805853 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.064154138 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.093346757 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.060649092 seconds)
  done (took 3.169995954 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071642081 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.063725272 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065034684 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.060196778 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.071421765 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06740151 seconds)
  done (took 1.973059075 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063274483 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.062587403 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.061890205 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.061034192 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.066612405 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062216053 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.060582684 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063421525 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.062231271 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062145451 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.061640219 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.060520027 seconds)
  done (took 2.318921388 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.15590498 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06430384 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065238366 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063159527 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.066065801 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061371219 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.075753079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06382016 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079208979 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.061473123 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.061987296 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.063442776 seconds)
  done (took 2.452727092 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096801737 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12515587 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092299036 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068803436 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1646268 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090196304 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085779206 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.117258325 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088667046 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.064938616 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088374303 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129970619 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090805041 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.094212481 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077642003 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119801206 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104743273 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083076494 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108859758 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077639186 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066217488 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128503965 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.065813623 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088663142 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097041129 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.093570282 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104809593 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128013395 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079802199 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.085174341 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078461057 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070022691 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100600481 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.079620247 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.092936895 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088954361 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093913687 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080627564 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082621744 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115605688 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149171916 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09618304 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095962085 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128951429 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.074412837 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.10307557 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077660563 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095043534 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100129136 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089204844 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071489834 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087343434 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102241478 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097675927 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.077520889 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077577628 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112887087 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094568933 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091599016 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074900999 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101984334 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.081850345 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101494359 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261798461 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135437813 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097516828 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131696845 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119421817 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091518494 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085364664 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.087652371 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072121794 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107350943 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094348727 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131492536 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105317768 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09560848 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093652457 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078721725 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103320207 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112560465 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092252434 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091841771 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143799612 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106522833 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090907768 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088992535 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.136954357 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067377357 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142337553 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084832165 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11547024 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092954882 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133843194 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087129144 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.079265673 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101407849 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099515309 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08537113 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0991338 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080366955 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109064674 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088967055 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096284325 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078436864 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086566732 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082783637 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.092795118 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071584497 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099736228 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111636664 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109388283 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.070920035 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104509197 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082761499 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.073134482 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0887678 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134569806 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.079647223 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071700011 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143701605 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.087950806 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.11107175 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104241721 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.077993307 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.262194583 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133180757 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088347847 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086073232 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072952291 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148899965 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072090699 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11460972 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077732222 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09910619 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101196267 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127532367 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133661396 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091313739 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073916366 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088149596 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.102443748 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083168687 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081814856 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073326427 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.104946053 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121833989 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.095704396 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077038854 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.088557572 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.065522569 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109837188 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072356774 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080379581 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092084017 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.083792904 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.085788288 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138070561 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.08046828 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104440763 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093580068 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06364665 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087533479 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148277741 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078994609 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107134432 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11216114 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081020628 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.064607969 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09231261 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.069485717 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105371133 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.088965459 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102522054 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074783555 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103319444 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.064643996 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070550043 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125215906 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098215438 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085677776 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.127948594 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099537089 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.084318796 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.099428067 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.092836085 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090748782 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097092543 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.255668431 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103808623 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071425371 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125720449 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088608254 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074054113 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083547763 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075832432 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.074111012 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096949641 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112387132 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085520825 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097323188 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099204488 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087099159 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10530797 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085229501 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075206441 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127207589 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072531957 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.070954395 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084886089 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.101961683 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084334744 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.129591183 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.075555529 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131214349 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08873252 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077537532 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111877261 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065307683 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.066182217 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078028289 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088007729 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112235148 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075652196 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074518649 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114192139 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128187481 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093930573 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099758647 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065105476 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087153503 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13127941 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.110211357 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077806651 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106032701 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080903764 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125392501 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092808009 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116529033 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102587133 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106867947 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.087926494 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.077799042 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069971299 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083898223 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106653713 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082392079 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078394725 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064501908 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070859367 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089076182 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087158301 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107535677 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083365856 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129236808 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068783146 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095421535 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254752776 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104307172 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087179407 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092214634 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.088757341 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088250802 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089577784 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088869683 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.070103124 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122287795 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099794745 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074999532 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085749497 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091957686 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103285285 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104693317 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105608075 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090622416 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103622672 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119301778 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095737299 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078547471 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080611789 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.089805968 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.080793588 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077745634 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10063718 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109095872 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094712612 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105125791 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.091965281 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.088708714 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103179073 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089727245 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086298833 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.113789633 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148278606 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.098465185 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100401678 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081929274 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103183607 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102137441 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108970902 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.106953683 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105436327 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.067067058 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071963124 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067087634 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103088813 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075686559 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113757384 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073249919 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103007897 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093126142 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076209862 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.063431787 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097877941 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089625177 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078697677 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119013603 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.109306469 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.069756594 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08731531 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10266511 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079482354 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118594573 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097054585 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095618117 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.067496482 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.085382057 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222932246 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106288809 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.098005629 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075453586 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.073452444 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.066957518 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104115275 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080744682 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10572276 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085745906 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097391351 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115153083 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1271033 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084276427 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093025573 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113878655 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109070996 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.07832343 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108242874 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131487169 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.115894218 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.076854035 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081345695 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102822085 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102423256 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097991161 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072482397 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075739618 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105684429 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109990794 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.064848318 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081349 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067490551 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.081171202 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109221307 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091724818 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078767085 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113306618 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07173728 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103898111 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091724664 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120234391 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118489353 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14076204 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093363196 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081534153 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07364414 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11996747 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067759941 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113608417 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108863073 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08427169 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.065236591 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080479826 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.092363619 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.623572356 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105189396 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.072446075 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131878365 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083571936 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111269649 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080239979 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.112423641 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084551491 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096386683 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086079852 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278726284 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.079893405 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106649668 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.169262996 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.106855819 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.104326288 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.071095251 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083114805 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070061938 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075433934 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078028744 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083355272 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104738305 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.081050031 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102115443 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.076405928 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.103743096 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08756209 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085681602 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095692738 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077215203 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135157656 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083982248 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119599143 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103611379 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075413166 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.072265623 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083423355 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097924202 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078495115 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091189203 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.075768542 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.072920446 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148141671 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098598529 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081491789 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098872201 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.087501884 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083521688 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088448268 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114159508 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106814411 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069500298 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.08419505 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100057671 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075804259 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.071446803 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093292022 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.066283924 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086062078 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095045331 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092769229 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086809576 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099137812 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075406735 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083958156 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106511616 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082792205 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.073712948 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073380051 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.073498453 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.072973809 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099781585 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104500397 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109465409 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104390662 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08647458 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089475206 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.074825566 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.3729454 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077847862 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094379227 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100607162 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073526776 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127808142 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085867745 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085613731 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092994965 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098132382 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14800776 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070899818 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106020344 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089716446 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10582974 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083734486 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102950508 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092176597 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.08864434 seconds)
  done (took 48.696353358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.08865942 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.143757694 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15062068 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.076808534 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091091322 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11437091 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203815432 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.186988994 seconds)
  done (took 2.752825019 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.062652513 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.075982935 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.097803833 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078100254 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.0610514 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.062485404 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198517305 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.075816596 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.060886713 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097666023 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.071007547 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.062958301 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.407560201 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.060769615 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.061878625 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069994934 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.061776796 seconds)
  done (took 3.344297777 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.35734205 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.60082642 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.339695784 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069929129 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.925513107 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083593689 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.289592805 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131398204 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075398413 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.554084952 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369641793 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126446599 seconds)
  done (took 18.615889598 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070389381 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069427716 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.073959583 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.073936898 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068607111 seconds)
  done (took 2.033547856 seconds)
done (took 97.075917432 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.075525186 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.160159075 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063027581 seconds)
  done (took 1.933132241 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078868346 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.076782833 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076162786 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.073581173 seconds)
  done (took 1.99031561 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.069331519 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071251205 seconds)
  done (took 1.822387843 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240009592 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.156950331 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087554605 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078594048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074900404 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075707372 seconds)
  done (took 1.919144346 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.06738648 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067368882 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067553691 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068762276 seconds)
  done (took 1.949842755 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.0625513 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061097759 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063657182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066814289 seconds)
  done (took 1.932570457 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078862973 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078319907 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073150825 seconds)
  done (took 1.910563829 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.090092203 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091389077 seconds)
  done (took 1.861708648 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.0754222 seconds)
  done (took 1.759865102 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084492349 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093945217 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.148721893 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107218129 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146096395 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130514011 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.072814476 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074854206 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.068723293 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067309501 seconds)
  done (took 2.676414747 seconds)
done (took 21.993148092 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072627293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.356774098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355125243 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080003996 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667236484 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.351156134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.957420253 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085505886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.093412969 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063023278 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.078751892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64355929 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.95413684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318577476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.941255869 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319101571 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.644370984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06287365 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06190572 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.063066347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.947785063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062530163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063064499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.062749814 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676260983 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367252325 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.063992044 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318933439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06280565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065589444 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351084731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064313037 seconds)
  done (took 15.936535308 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.065163587 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114680771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06757128 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.077732319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.065070768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064284422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.065547561 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064306971 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.102823971 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063339986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079239638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.062236275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067093255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065442517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.082680695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.063402244 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.064873592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064199554 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063553666 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066922547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081179738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.062999525 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064002024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063630901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064003204 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076133208 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064819791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06330975 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063380743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065867284 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06681327 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064962125 seconds)
  done (took 3.927982578 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11492027 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120396585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068166983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101326176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113165519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064890068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142191677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086178669 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107453182 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063796822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.079269232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063175317 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097089314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.064835183 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083086362 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064025775 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065227286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063947939 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063289945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064225817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.081397936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063252556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064032717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064029959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064167981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078102147 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064835605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.063417954 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063541436 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.065985638 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067587736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065067394 seconds)
  done (took 4.192561302 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.064780213 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067324719 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07471141 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.075866427 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.062436587 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064570682 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.0656344 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.062096434 seconds)
  done (took 2.243519059 seconds)
done (took 27.997632634 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073089363 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0627625 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.066295956 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082116353 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.068484863 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.065855171 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060059179 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069202351 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.066585268 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066259936 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.067135014 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.061312875 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.064964734 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060531244 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.067485684 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.061798546 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.068206945 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066067197 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.066643888 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.067291849 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064167102 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.067104119 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.069055632 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.066735192 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.066672581 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.066749678 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.070794413 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067276454 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.062187827 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.064544672 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.063737254 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072523648 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068471047 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.06877095 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.061552622 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.061754847 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.065854791 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.063478127 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068377539 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.0708551 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.063604312 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072757944 seconds)
  done (took 4.465654749 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.081388033 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.083502358 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077241238 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076094431 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.093650455 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076248101 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081048413 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072976312 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.071630547 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.080147904 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068109087 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.074580871 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072776753 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.066692025 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.071466917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.068831287 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.073640154 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.068486497 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072006736 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.071984902 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080800484 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.066508652 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074233583 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.075115277 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070242326 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.076583895 seconds)
  done (took 3.649288118 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.06990933 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.07920786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086687059 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142425965 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106833871 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.074388088 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075276374 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087676054 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091190678 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.062969666 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.066620757 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.087201934 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088248256 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07058162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104810615 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080762083 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080053131 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066540089 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.0711137 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09355295 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084852007 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081874254 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.090709701 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080204259 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063292835 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065973238 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.068266663 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.075353438 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.068828331 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073529019 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.066836032 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.065429112 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063006338 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.073004159 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.066683437 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061558565 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.085492225 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073846561 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.075036333 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10367568 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070791121 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.063260886 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089465775 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122031404 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063135702 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.065545438 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.065321106 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07357284 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.063400878 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089680941 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076298224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.061811955 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.062662825 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.062819885 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.063210475 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076866531 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064275602 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064213692 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.072739411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06784552 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083545498 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.067144579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080450042 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.062207523 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072305671 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063604663 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.063277073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06091395 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092149546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068406354 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108804033 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.063157076 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.060913483 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.073322677 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072379219 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.068136865 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.062183235 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079055105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.072499461 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.065560149 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.073238169 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065409899 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065260152 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092804768 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06214026 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.061730519 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.060829599 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.065160758 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.064704959 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.062694389 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.075151015 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.061375994 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.064868448 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.076251882 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.061808427 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.062407179 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.06539502 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.064575471 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.061654588 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074335488 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.06605004 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.063040788 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073163802 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.062717715 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.06460499 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075183124 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.068772447 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.061132354 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.063853751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065257228 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.0630987 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065806157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.064864892 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.064219168 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.068731397 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.068979049 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.067367122 seconds)
  done (took 10.228498028 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.155262712 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.146290185 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.064405063 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.138660632 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.070150533 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.067833355 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.139673106 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.081964603 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.062710413 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.063746787 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.062209398 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.091088555 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.087445309 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.096575767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.067364259 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.062708088 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085474627 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.093836399 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.142210363 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.137440841 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085363616 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.069131919 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.064486995 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.063743816 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.064070084 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.070846682 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.077603756 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.070748496 seconds)
  done (took 4.23334721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.07212195 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.086764065 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.06664951 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.073892112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.081396173 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.063059586 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.064511083 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.064509052 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.076648128 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.071982943 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.063087869 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.066924644 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.066345983 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.065201738 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.063551666 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.068526128 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0690824 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06194813 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.066511962 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068056142 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.072230038 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087534331 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.067009344 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06244247 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.064814647 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.062247247 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071787688 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.074430083 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.062947528 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.077375121 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.060776196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.066587258 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.075961747 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.063230299 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.062236734 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.06329725 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.062484245 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.062705319 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06315095 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.061461544 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.061420379 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067183673 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.061482694 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.070629165 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075855918 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.069394464 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.064886156 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.065318058 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.065545525 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.060215715 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.065308423 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.065294443 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06478341 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.069449794 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066391071 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.065600283 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065631104 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087278177 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.068358099 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.062183643 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061998642 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.061477524 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.064692194 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072406546 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078683626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.064901456 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.061202192 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.062629375 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068188058 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076061383 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.062344291 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067234395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06012041 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.063202874 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06544967 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065490546 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.063695053 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.061655557 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.062449131 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.062751256 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.063073098 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.062505047 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062292573 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.064966591 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.061045552 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.061317696 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.063298652 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.065113697 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.071448596 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.062261448 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.066170045 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.063588153 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.061763517 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.064853509 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.068121648 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.065437881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07576923 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.073383694 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.062952183 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.061263946 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.075167532 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06521549 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.061990369 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.068178734 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.066434086 seconds)
  done (took 8.761954272 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.083959678 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.064344465 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.078891096 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.085293307 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073161871 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.067813235 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073513327 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06362631 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078295426 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.061778144 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.070849278 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.061622834 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073554905 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.072390741 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.064308561 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073341952 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.064986257 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.078957067 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077020476 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.061592777 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071751075 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.074527681 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.074243001 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076490911 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075963019 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.077346118 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.074382959 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.065226395 seconds)
  done (took 3.774807278 seconds)
done (took 36.8072961 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.786488449 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.949701596 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.761783037 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.957211706 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.81928155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.906167789 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.895613097 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.765597608 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.86481772 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.8154594 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051197879 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.293506362 seconds)
done (took 65.62856867 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.81922081 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912692652 seconds)
    (2/2) benchmarking "String"...
    done (took 2.011896296 seconds)
  done (took 5.625006976 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.006576445 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.566400152 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.039666737 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.759449777 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.762085757 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.285477173 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.557718981 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.214928186 seconds)
  done (took 30.884431065 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.85757448 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.987524045 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.416000681 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.454275562 seconds)
  done (took 15.454149679 seconds)
done (took 63.572883273 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.799436984 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.753289741 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.757875038 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.787138283 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.75555783 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.753119489 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.756261375 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.759923178 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.803607754 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.843449079 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.755628697 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.759256007 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.754296896 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.806940492 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.495184591 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.824675227 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.782576447 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.774004717 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.769556606 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.774455953 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.772038791 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.766939226 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.240117472 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.951549374 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.36702784 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.060529296 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.242260326 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.162046446 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.782436037 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.765847148 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.841893582 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.99195107 seconds)
  done (took 203.909208509 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.764054407 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.512744417 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.595827357 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.780405053 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.942956193 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.940884924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.870991542 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.148852789 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.763996337 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.78405639 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.923490801 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.765094313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.970070543 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.718278176 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.805861355 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.843737381 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.911845584 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.9739041 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806220069 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.88073302 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.776623153 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.727750161 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.686790557 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.946065111 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.804537409 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.854563422 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.782009876 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.773132017 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.954343446 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.872189465 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.804863391 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.799182781 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.919946342 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.637780507 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.785802553 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.768916646 seconds)
  done (took 168.302638039 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.960887633 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.778045772 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.766749503 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.823354353 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.890797734 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.768940697 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.407527878 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.780306741 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.240312793 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.766547188 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.769474866 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.766715599 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.763876667 seconds)
    (13/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.766209084 seconds)
    (14/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.768671923 seconds)
    (15/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.780551922 seconds)
    (16/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.843230003 seconds)
    (17/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.766388575 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.779117572 seconds)
    (19/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.768702257 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.788922672 seconds)
    (21/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.761801931 seconds)
    (22/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.76912247 seconds)
    (23/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.769732062 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.769803484 seconds)
    (25/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.76071975 seconds)
    (26/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.765541071 seconds)
    (27/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.767095595 seconds)
    (28/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.323946011 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.007481445 seconds)
    (30/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.769649271 seconds)
    (31/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.764607716 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.892681024 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.777930616 seconds)
    (34/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.189183054 seconds)
    (35/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.775993566 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.859085153 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.825884759 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.88545133 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.765485968 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983707426 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.838488471 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.766719565 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.766785324 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.831960329 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.779120874 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.761347744 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.766329494 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.772192536 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.836892841 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.004391703 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.767378361 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.887368477 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.246655235 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.765644586 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.768465598 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.769328346 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.344301046 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.76439322 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.766320024 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.775608625 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.769635949 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766733051 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.765362025 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.154146117 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764999311 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.838902796 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.306839636 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.187296777 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.76889497 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.276236089 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.886357613 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.764206855 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.768135482 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.7666527 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.771010086 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.766843447 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.770920509 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.887597307 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.779310628 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.881583778 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846520712 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.885157323 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.769441589 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.777337998 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.59485839 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.834602483 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.807094323 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.586683932 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.768074929 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.141598079 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.528514566 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768509483 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.768189948 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.780995496 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.768838551 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.767523663 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.766789566 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.850371975 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.771217872 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.766927878 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.888339166 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.4964253 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.182502618 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.770651441 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.766127114 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.775107724 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.84884445 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.889412719 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.769462816 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.831650951 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.775505042 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.774452251 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.861376339 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.76750399 seconds)
  done (took 401.26331543 seconds)
done (took 777.189585895 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.352304299 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.328390361 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.417112174 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.336662709 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.308036132 seconds)
  done (took 13.449699788 seconds)
done (took 15.154777137 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.780334617 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.771928949 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.824619591 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.851949646 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.787464753 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.787571893 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.849141142 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.789398745 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.819713624 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.822581685 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.853695941 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.853050405 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.790778631 seconds)
  done (took 25.289399016 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.774829631 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.922042065 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.997624107 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.808903659 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.776165564 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.99801319 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.836143174 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.921427893 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.918946631 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.003189639 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.038110234 seconds)
  done (took 22.704114243 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.779140443 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.925605454 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.004418815 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.812821872 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.776671023 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.003596921 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.838829907 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.922544464 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.922564274 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.001752761 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.013577729 seconds)
  done (took 22.718624636 seconds)
done (took 72.419209102 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.770573372 seconds)
  done (took 3.479843046 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.792149229 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.93288078 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773616766 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.770274665 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.772347405 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.7706515 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.771042755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.772849078 seconds)
  done (took 16.064785956 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.771117063 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.772685815 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.773845629 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.772304749 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.772170191 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.771829275 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.771099752 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.771148188 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.771889091 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.776671938 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.775425669 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.775178574 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.774375077 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.773421602 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.77502084 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.772439135 seconds)
  done (took 30.081595722 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.774675506 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.778462505 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.77473383 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.776656613 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.776459255 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771920215 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.776223134 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.772762524 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.77482684 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.7774855 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.775195662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.773726152 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.77251449 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.774652698 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.77610596 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.774886212 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.777068421 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.773770645 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.781242851 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.77501068 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.776157625 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.775145231 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.772798914 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.771189615 seconds)
  done (took 44.318978559 seconds)
done (took 95.664802581 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.577079986 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.803305775 seconds)
  done (took 10.094350812 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.776950835 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.775453874 seconds)
  done (took 5.2692597 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.777563964 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.773934408 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.773829818 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.777949656 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.778204194 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.773832455 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.775455928 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.776449657 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.777462423 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.776631021 seconds)
  done (took 19.475088021 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.773666441 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.776472218 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.775252811 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.774636144 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.773708798 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.777646374 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.774749613 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.777359925 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.781094733 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.775302133 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.781095025 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.77499148 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.777359789 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.775796498 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.776488982 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.776458132 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.776369493 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.780377528 seconds)
  done (took 33.691692181 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.775080692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.780393257 seconds)
  done (took 5.269222737 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.779586699 seconds)
    (2/7) benchmarking "second"...
    done (took 1.776037607 seconds)
    (3/7) benchmarking "month"...
    done (took 1.777454141 seconds)
    (4/7) benchmarking "year"...
    done (took 1.782084445 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.778426376 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.770876665 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.775190912 seconds)
  done (took 14.150155602 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77951863 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.9443098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.008457763 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.664750773 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.776430184 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.780408538 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.112877787 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.78640947 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.783647249 seconds)
  done (took 20.349333976 seconds)
done (took 110.008648295 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.656273671 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.786567929 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.062757597 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.875193522 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.800308677 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.121743438 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.804592484 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.428109341 seconds)
done (took 42.249172314 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.878264282 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.776792396 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.810731364 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.816793379 seconds)
  done (took 22.121853974 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.784470288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.123094071 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.809821467 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.614621467 seconds)
  done (took 22.06939311 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.166415573 seconds)
    (2/2) benchmarking "read"...
    done (took 2.135939465 seconds)
  done (took 6.025761333 seconds)
done (took 58.811901316 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787025913 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.787946346 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.782337577 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.788037201 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.783462574 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.787796112 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.785191173 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.787155902 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.790013374 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.786872036 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.787957325 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.787854749 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786612992 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78570554 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792396024 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.790115883 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788005061 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.790678893 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789423547 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788398609 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789240532 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789279607 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.786097534 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.790195265 seconds)
  done (took 44.633926978 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.790685971 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.78622822 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.787812962 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.78928481 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.785664929 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.786386976 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.787116678 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.785947141 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.788165064 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.788456851 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787227679 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788249463 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.789453253 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.786534453 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790079488 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.793725861 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.787094715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789446918 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78481841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.790742036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.788375832 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790994012 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.785024278 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789142812 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.788942647 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790987825 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.788561936 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.79080148 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788155919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.788065405 seconds)
  done (took 55.377626112 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.791127141 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.792497157 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.788491366 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.788856913 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792193683 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.79228713 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.789694966 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.786962607 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.792775723 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.793316732 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790027529 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.787687247 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.791950274 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.789735214 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791523012 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.788621383 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790712963 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.787090044 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.79392214 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.792985343 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.790425178 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.791721705 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.788609574 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.791690504 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.791382358 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.793416349 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.79105618 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.793924141 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.792364195 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.793857513 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.790750978 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.792656776 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.79325412 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.792308658 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.789627384 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.791642288 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.793805897 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.788513552 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.795239874 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.793965504 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.790790601 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.79229728 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.793126088 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.791184929 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.794386124 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.791269105 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.788383098 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.791773334 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.791184674 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.795473858 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.792743845 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.789495771 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.791729862 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.792330042 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.793702782 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.794672116 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.79329147 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.788591849 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.793350129 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.791261305 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.794004472 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.791060646 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.790499373 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.794253793 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.793123853 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.791937631 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.791135523 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794731139 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.792858702 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.791208481 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.79085722 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.795790996 seconds)
  done (took 130.736741538 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.799111151 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793679984 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.795453791 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793932754 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793289847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.796001225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.791191534 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796103706 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790427754 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.792883778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792222302 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791651556 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793889448 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793515049 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79468517 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794889033 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.796006959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794153826 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.795797764 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793837959 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793774521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793552054 seconds)
  done (took 41.198257271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795208886 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794775993 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.793220965 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.792824342 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.792618181 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.791281983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793772368 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799866796 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793360894 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796506338 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796110967 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794711515 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.798579052 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794146573 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794194115 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795469356 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.796006423 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796701515 seconds)
  done (took 34.043724613 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.796266714 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.794842975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.797384776 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.796044818 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.794410804 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7950981 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795495041 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796507668 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.794462179 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796245542 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.793841255 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.793969855 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.797932923 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79549478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794317548 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794137566 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.800491553 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800469737 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798488987 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796903248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.799470027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.797637904 seconds)
  done (took 41.248402458 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794376971 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798569813 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795163962 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.79684638 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798022778 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797275368 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.797779967 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.79998772 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.796648024 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.799072938 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797604646 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800238911 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.796751035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797046536 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.796755503 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798074467 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796402859 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798406821 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798514931 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.796740103 seconds)
  done (took 37.684500175 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797211165 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799612207 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.799342109 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799558782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795917564 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.795942116 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797292288 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797951227 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.796851159 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.798232345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798580393 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.795870487 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.799940249 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797145121 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.796355157 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800262283 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800097161 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799923281 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.798254073 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.800508094 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.800414345 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7962988 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.802202506 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.800239758 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799997765 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798879026 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799549471 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802564306 seconds)
  done (took 52.098625909 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80193005 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800354563 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799628877 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.801477899 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.80332882 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.796662401 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.800667583 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.798605251 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798637606 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.800698808 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.800121024 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.801905441 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800376611 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.796281223 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.802893138 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.79839596 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800371366 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.799194829 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800744508 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801333586 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.799323321 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802193673 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.801026318 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801406548 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800559266 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.79882449 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795538831 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796431978 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.803373961 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.80078658 seconds)
  done (took 55.739712318 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824448934 seconds)
    (2/2) benchmarking "in"...
    done (took 1.82385615 seconds)
  done (took 5.380578016 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.801609971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798262761 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.801329941 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801900626 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.804699731 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804263663 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79985974 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801457352 seconds)
  done (took 16.146005499 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.8031859 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.804563437 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.800695881 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.801793043 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.799620871 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80797718 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.801320202 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.804461516 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.801819638 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.80175001 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.803251986 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.80945279 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.807230594 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.806550626 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.801606775 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.800700173 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802342363 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805428305 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.802436709 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804709028 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805701608 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803968813 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.805881089 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802354652 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.800644405 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.803302802 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.813577108 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.801606981 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803225741 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.800221614 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.813064534 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.803551913 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.805467373 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800661988 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.803803757 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.805485446 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.812890265 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.802695061 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.804951512 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.804378677 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.806198255 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80551422 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.805701375 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.814753576 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.801547356 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.804567529 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.809844605 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.805488127 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.803279777 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.80804876 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.811203904 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802340451 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.802843403 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.80376409 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.806324436 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.801535904 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.804808566 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.805626644 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808742726 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.812270194 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.80685235 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.822660918 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.815619399 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.803277206 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.802994712 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813223031 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.82987189 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.805922752 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.808442154 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.802718627 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817057584 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.80507675 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.805345781 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.806351779 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820467211 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814423514 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.806861971 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.804693867 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.806719382 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.804144506 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804373451 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808031818 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802570154 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.805487832 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810739207 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.829338533 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.804426838 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.808622058 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.805514526 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.807087519 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.813053392 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.8103286 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.80765254 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.806693277 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.80829122 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.808136265 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.806938391 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.8076567 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805160178 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.817262028 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.808376221 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.804478808 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812686931 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.81431236 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.808176105 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.806397584 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807086151 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.806514176 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.812757318 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.808401132 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.806584746 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.806927613 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810356239 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.811232904 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.807461231 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810316687 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.815601928 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.814865998 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.805201024 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.812955832 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.811636452 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.810197327 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81566843 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.833059836 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.808329405 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.810810174 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.81505149 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.820049125 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.812259881 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807936025 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.809694165 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.809340578 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.807333601 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.806987846 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.807740143 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808272604 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.806445009 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.806887892 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.806707911 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.808896643 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.811365511 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.810143112 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.806342151 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.809776669 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.818021902 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.807293556 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.811315039 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.817907497 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.810667614 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.806890359 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.808446375 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.808905545 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.809794947 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.808607499 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.807534888 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.809071548 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.808503126 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.813639238 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.813483268 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.810878898 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.808774369 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.809205257 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.808983469 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.809217074 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.809293223 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.810637552 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811111791 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.809617345 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.814820425 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.811214267 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.812821163 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809780535 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.817741839 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.806878429 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.812270112 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.81098894 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.811548119 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.808075808 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.814421981 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.819164127 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.811180706 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.822673182 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.80827559 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821286053 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.80923135 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.813308126 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.811477492 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.810725683 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.811164396 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.811331204 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.808323045 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.817330929 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.835331059 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.824270957 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.813085123 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.810545232 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.8184211 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.814966233 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.814334003 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.81418532 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813055128 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.812625991 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.811883261 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.812482275 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.814819538 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.815341608 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.812133124 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.811950308 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.813072761 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813735854 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.81063805 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.809697411 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.811988762 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.812110353 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.8109772 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.814926905 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.814144045 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.814279859 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.825877571 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81519663 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.814627611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.812632413 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81285368 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.811839213 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.813982791 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.81716927 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.816949357 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.811724156 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.815102027 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821410871 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.813640229 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.813993687 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.814191602 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.81320669 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.816566458 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.814487336 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.817057585 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.82073882 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.816974888 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.811154551 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.819755671 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.815814833 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.817959647 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.813204429 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81790547 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.814502513 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.815817901 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.816066806 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.813451018 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.822576158 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.813473712 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.817221592 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.815592135 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.818760264 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.814794887 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.817095763 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.8153835 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815312882 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.819409709 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.820083702 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.81576543 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.817765171 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.814388736 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.81596162 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821114831 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.816568352 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826942993 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.825331991 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.8145994 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.813048447 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.816625791 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.819458159 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.815801985 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.817224429 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82501203 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.81881454 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.817665063 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.820048695 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.818104544 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.815829529 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823620983 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818082891 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.817604357 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81611763 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.817017449 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.817092008 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.818094482 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821792794 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.818289387 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.821072642 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.820355399 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.81895258 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.817275162 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.816472707 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.824088331 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.817097346 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.818912725 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.824723315 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818761723 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.815870919 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817878448 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.815500481 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.81602989 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820265823 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.818075381 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.816458471 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.817663153 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.820266825 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.826825841 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.821475773 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.82417446 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.821654578 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82820604 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.818512503 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.813283127 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.81894439 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.82056137 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.824821945 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.820245223 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.816773197 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.829655392 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.819512302 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.818522078 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.823436072 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.816797569 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.818886834 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.819676523 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.820435372 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.820951036 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.821701296 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.817774114 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.815715961 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.817687829 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.818260565 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.821152541 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.819025451 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.819204818 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.820980218 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.818596234 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.818755673 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.817181366 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.820193502 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.816923971 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.820821034 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.820047903 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83129407 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.822013134 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822382667 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823799728 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.820570088 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.829413367 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.820457107 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.818178506 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.822323085 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.82033074 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.820376217 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.821520697 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.819493391 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.820527008 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.822199201 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.823543171 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.833505149 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.830778987 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.825734351 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.818584929 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.82033917 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.822454347 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831982648 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.844335183 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823120929 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.824044343 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.82533281 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.82745407 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.823177537 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82713023 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.827175805 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.833251103 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.819815272 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.818726386 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.826419121 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.833833266 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.822041649 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.819027418 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.822825953 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.826024593 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.824380569 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.819602216 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.826539056 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82225749 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.821982946 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.832069634 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.819777211 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.822721767 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823845356 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.82334994 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.822612992 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.82219367 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.821272046 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.824617308 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.824479311 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.823163994 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.825284263 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.82749814 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.821446008 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825697859 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.83311654 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82179855 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.82519431 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.824694341 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.823301723 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.824955403 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.825902359 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.82408124 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.822347259 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.822840601 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.826057433 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825178935 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.828986162 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.82528189 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.823175039 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.824646177 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.82800434 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.82521854 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.823589964 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.824958381 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.835126376 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827071334 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.834167705 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.83095437 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.823202506 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.823577049 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829286702 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.829528916 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.822287614 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.823033366 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829138034 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.8283923 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.825106421 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.826355489 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824499969 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.826157509 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.830053385 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.82385999 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.8251838 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.822588428 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.824990273 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.827599569 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.82670268 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.830911579 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.825990744 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.824500389 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.826214574 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.824240412 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.826373776 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.826954583 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824451341 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.822245692 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.827296318 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.825076213 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.828724073 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.824643086 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.825636778 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.82670943 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.823845979 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.824982926 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.828120697 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.825524834 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.825866077 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.830000563 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.835292085 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.827915312 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.827907397 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.82756614 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.83039418 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.828270174 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.825704374 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828754343 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.827068371 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.835164377 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827566765 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.826612612 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.825906234 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.826436858 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.834399678 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827792463 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.834034909 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.828735169 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.827718096 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.826223603 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.832778369 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.835562878 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.832214046 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.833190928 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.835503343 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.829436957 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.827429296 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.828564403 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.826920883 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.826511652 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.829088694 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.830344003 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.82745628 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.82850822 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.829102351 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.829126475 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.83042613 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.830303074 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.82562469 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.827566874 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.830739893 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836226161 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.84015806 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828780054 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.827271695 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.826501141 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.832040131 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.840712271 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.828571512 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.828670936 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.827881685 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.829740953 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.829820537 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.834794325 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.83386864 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.832358079 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.826930057 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.830408313 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.852447353 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.830228248 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836282862 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862779496 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.830557285 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.828401714 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829534168 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.828966986 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.827019854 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.832691584 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.828565758 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.8354156 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.827540976 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.825640684 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.838103112 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.827771804 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.82877877 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.827479861 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.826740279 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.83545847 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.830008606 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.836614418 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.829366506 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.826976947 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.828603447 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832659666 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.829063349 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.826666098 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.827845673 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.828725649 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.827163559 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.827839517 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.836807704 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.831289562 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.829931609 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.841115927 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.841566796 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.828649534 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.82694283 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.827108217 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.8335249 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.830800594 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.827170774 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83050845 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.835565104 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.830570185 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.834888066 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.830179608 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.829609159 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.829521151 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.829036563 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828772021 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.843064992 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.839815884 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.830636344 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.83032238 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.834804202 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.82864469 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838178862 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.836710612 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828737329 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.830960546 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829379906 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.829701996 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.829153475 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.82926237 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.833573052 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.837355483 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.82925153 seconds)
  done (took 1086.000630548 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.828271873 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828859057 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829611311 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.829968915 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829448593 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830837775 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829048975 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.829472009 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.829779713 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.831072082 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831417397 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831099521 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830177994 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828020222 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831250725 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833187744 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829913866 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831001043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.829809911 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832095385 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830614737 seconds)
  done (took 40.202105819 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.830844036 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.830228194 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831743878 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832547233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.832163478 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.830382367 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.830749828 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831475714 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.830656327 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831614142 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.831844627 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832308566 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.8322379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.831741995 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831237381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832667385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.831071491 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830736054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.832166211 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83089469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831236083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832172176 seconds)
  done (took 42.060710602 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.832471914 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.83204494 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.832674048 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.833330446 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.832218475 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.832011215 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.831773468 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.833821089 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.832053901 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.832916959 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.840619411 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.837986154 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.831123497 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.836208883 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.832879481 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.832641573 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.981351732 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.835093469 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.831986116 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.833342614 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.831702134 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.839226026 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.832776687 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.833815506 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.833358152 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.83431385 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.833538807 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.833136358 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.832557049 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.834395523 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.836951585 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.833117805 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.834418534 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.83775355 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.83381751 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.834642218 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.838303949 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.83474791 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.832638107 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.832883466 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.8445881 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.856280564 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.833515509 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.833678969 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.841136175 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.834251997 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.834350608 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.839247421 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.842227735 seconds)
  done (took 91.834647672 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.834330083 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.833025002 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.833562241 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837754125 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.833618686 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83353243 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.833446963 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83525654 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.833480711 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.834683156 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.834167817 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.834814233 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83463196 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.835458973 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.833443192 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834068023 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835373188 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834827616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.835760204 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.834146914 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.834622173 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.834928681 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.834567762 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.834613402 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.835145497 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835552622 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834635531 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.836133846 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.835312537 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.837194609 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.83504199 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.83568949 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835410105 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.835854478 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83630331 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.837032095 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.834498951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835595269 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.835714247 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.837273429 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.837383111 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838183881 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.836450831 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.835778733 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836274202 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.837086601 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837682946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.836602669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.837027923 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.837370353 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.83614696 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.837367593 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836929395 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.837455473 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83690155 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.837024526 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.836029753 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.836790222 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.837511684 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.836581467 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838614397 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837336386 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.836261479 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.83772744 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.835719806 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.837681033 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.835841317 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.839214912 seconds)
  done (took 126.610782863 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83905847 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836845288 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838453928 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839182281 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837707696 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.837888344 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.837109701 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.837980105 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838156457 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.837719988 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838883025 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837574872 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.837587408 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.837660719 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.839741442 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.837942991 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837630452 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839657768 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.838693645 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.838478438 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.83962609 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839103664 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.839570043 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838813433 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.838280856 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.839307111 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.838871614 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.840483174 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8400028 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.838901151 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.838816074 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.840846865 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840448973 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840732309 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.840036712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.839974828 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839953807 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.8399109 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.838450196 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838639708 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.84077538 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840648381 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.84080756 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.838995187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.840310041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.840881526 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.837893932 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.841730532 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.839666868 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.839511338 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.839694606 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841913357 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840671872 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.839825141 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840997552 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.8403911 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840855241 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.841353403 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841597292 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.840849139 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840623601 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.841581764 seconds)
  done (took 115.822611931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.841730678 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841368945 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.842888044 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840876695 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841796909 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.842040811 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.843208239 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.842641019 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841073735 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.842244403 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842179319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842265289 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844002222 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841883257 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841365528 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843261269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.841386849 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.840969057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843866358 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.841856104 seconds)
  done (took 38.620029533 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842728427 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.846278815 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.84426377 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.842907707 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.843088455 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842703947 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.841713757 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842812735 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844558836 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844294467 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84292644 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842413396 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842592771 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842233325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.842436723 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841882093 seconds)
  done (took 31.269620377 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.842490403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.84330178 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.844463602 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.842917461 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.843890558 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.843061101 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.842350319 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.844634267 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.843468456 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.844119973 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.843521988 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.844110634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.843663765 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.842959837 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.843681482 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.844230348 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.844129006 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.84443023 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.843687621 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.844472144 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.845250438 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.845514292 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.844126012 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.845626697 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.843865398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.843351576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.846514161 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.844008917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.846396606 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.844616202 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.844147043 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.844877404 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.846519468 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.844985643 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.844984886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.84464434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.844781015 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.847161294 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.84453103 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.845617641 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.847007319 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.844312345 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.844936496 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.845406382 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.847591641 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.847550003 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.846232821 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.844346072 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.845919939 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.845641715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.84724514 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.845633953 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.846247287 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.846374622 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.848217572 seconds)
  done (took 103.247669637 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844981425 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.845904644 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.84862196 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.845948497 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847142634 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.846097787 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.848282571 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.844282533 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845987616 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.84633812 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.846504577 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.846695511 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84845266 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.84734218 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846818654 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.846752352 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.848725228 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.84860676 seconds)
  done (took 35.026893548 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848189295 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845830841 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.847900319 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.848298449 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.846639641 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850516877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849158768 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.847142012 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847957305 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.848211177 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848726582 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.847269926 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849243494 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.847779289 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849416758 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848385277 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.848385366 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848049378 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.848963738 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.848312836 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.848234818 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846294816 seconds)
  done (took 42.442982632 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.848691613 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.84927365 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.863739605 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.872116716 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.869667479 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.885803213 seconds)
  done (took 12.973254502 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848816491 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848000953 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847676414 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84776236 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84749448 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84956375 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84827116 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849089766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849062475 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849375359 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850379614 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.848354563 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848665892 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848492145 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.848945096 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850932844 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849243816 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849344701 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851781418 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84885765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850559836 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849645372 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849244065 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850260108 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84977364 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85035775 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851389172 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850403623 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849542278 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84874559 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.847716804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848843173 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.848942114 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849347146 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851100838 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850904436 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849587724 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850543493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851145511 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851543566 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.850848415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850705976 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853159816 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849712068 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851450253 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851340507 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851692215 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851526452 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850549035 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852996724 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850476889 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852800286 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851414772 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.850355291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852339134 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852360758 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85199045 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85242458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85248039 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852449997 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851771192 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853908239 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852803925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852648391 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853669364 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852541294 seconds)
  done (took 123.917097055 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851479043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850314238 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850709658 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852386006 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854038047 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852761235 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852916024 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852169954 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851443891 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853075556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852853102 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851973646 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85389832 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853778707 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854338216 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853305697 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852784965 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853260263 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852412455 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853895774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854002143 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854070936 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85594261 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854319783 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856015071 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854211874 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854033519 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853232056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855324948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853395459 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854812144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855506483 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853816149 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854691877 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856186441 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85524959 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854516702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854371509 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854045578 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855433685 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85605346 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855173843 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85509455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854990426 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856399689 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855844938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855560288 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856654517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854120652 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85620818 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855366489 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859872809 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854871645 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857348244 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856842967 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856554154 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857095584 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856815584 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854992219 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855919073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857107524 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856020769 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85722841 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857364471 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856943092 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857480843 seconds)
  done (took 124.200635521 seconds)
done (took 2530.247362774 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.891706099 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.898735681 seconds)
  done (took 15.583858079 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.011902118 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.96162429 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.853536323 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.880875468 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.850816445 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.872784047 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.872869868 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.857834175 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.85170365 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.851946203 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.85367013 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.038231032 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.853014174 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.850252321 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.853125118 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.94115236 seconds)
  done (took 52.045066598 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.85676151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.855547225 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.869457953 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.860129476 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.851871148 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.867764668 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.886832233 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.862049679 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.890196872 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.875559211 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.925095887 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.866392701 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.855141637 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.905784499 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.870857865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.871312112 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.959057438 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931176448 seconds)
  done (took 35.645737298 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.937302617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.863705134 seconds)
  done (took 10.59072514 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.857673371 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.868840593 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.863493714 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.869736897 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.845404531 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.857887366 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.859639875 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.851788421 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.865912137 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.854051249 seconds)
  done (took 70.378156989 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859595537 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864505692 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854629817 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852885598 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.850298712 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.854660887 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.854546429 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.855353573 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.538211113 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.88900428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.86971362 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.866710817 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.856428188 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.854370288 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.851510366 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.881948762 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.994236981 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.846199614 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.849510274 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.862791887 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.854636403 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.903397648 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.866909859 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.857821235 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.885106679 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.536871713 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863725632 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.862020127 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.96286041 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.849647105 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.857589903 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.062973243 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.858201117 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.316973334 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.119926437 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.857650472 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.865128643 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.868395975 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852840062 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.971330075 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.852959223 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857655298 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.847433847 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.094562395 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.953770401 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.901037668 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.192021142 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.859250361 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.855177021 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.891091768 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.85679761 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.856199968 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.871236646 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.376171139 seconds)
  done (took 132.134940414 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.85512601 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.197898752 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.016148474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.85498933 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.141131594 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067283946 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.866764514 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.896262345 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859644869 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084208003 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.114093812 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.959363596 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85779854 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.857377188 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.851940384 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.850933412 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.005442991 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.922790508 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.853544767 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.853686349 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8793045 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099042644 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.972223876 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.860705474 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.876230968 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.062433895 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.970047385 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959548033 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.600039756 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.856387606 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912932444 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.854554137 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.860699883 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.851431696 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012588228 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949050031 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935871831 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.852248891 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858371164 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.850410596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.509918314 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051652569 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945663192 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982497217 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.106150268 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060193821 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633371534 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.856729634 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.583001378 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020624503 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.081302828 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087266606 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.972303902 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.857391111 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.110062205 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.854237356 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852295736 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.101979488 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074736056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.959387209 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.856797023 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.852294334 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.850774753 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.097735166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862662408 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949901482 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860617216 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.854694017 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.954789971 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955663014 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.08495426 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.062103984 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.887173126 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.204955116 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.350539836 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098515729 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.919317163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103731684 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.862796479 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854991409 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.935464864 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.709294184 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10811517 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101836823 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.100979529 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8900195 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.576341451 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.855961583 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.080095795 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.077183323 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.116406671 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.099856236 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.095624512 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.183063439 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857240049 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.861259724 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.091482378 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.978970593 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856285689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20689539 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.087140803 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.426003073 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.881486605 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.160644716 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993451401 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.857487446 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.4822386 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.854263355 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.085682814 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.899139244 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.86254003 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857873872 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.074168697 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.858273843 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858688149 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.734320928 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91791885 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857882762 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.092647412 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.859586886 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.126676107 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.860162222 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089048505 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.02442925 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888212283 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.029769061 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.101851051 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.857971635 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.102125959 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098818506 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971974133 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129902953 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.740774351 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.858169736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145888899 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857088079 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.857669227 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.029698921 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864650956 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.002542872 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85851875 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148415103 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878131668 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089225072 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.862080971 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.112605845 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888967578 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.910518507 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.862120441 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.981838433 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860327917 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.684697191 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018311069 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867814815 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.857880444 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.405704353 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.859276456 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009547551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.087253627 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881514119 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931627239 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.52214716 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86192409 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938339155 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882594301 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.253888366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.856543405 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.11187545 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.86414558 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.858233586 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.858329597 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.097287945 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.100232072 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866215349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.859698083 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.798453215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.858868126 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.861003261 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.040786571 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.182048215 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860579438 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060278062 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868869031 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989712347 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860710675 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.930565938 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190492241 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857444766 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.861610377 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.860985714 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.86282768 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862818668 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066883947 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.886947783 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.394396381 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.996525425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.135935795 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.174709918 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108325264 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.902727146 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.8684849 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112297551 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.866535087 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.919420439 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.866309164 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883558522 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097701692 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867437703 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121009252 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.132926092 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.735420148 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908830209 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.86649722 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859252185 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.859753699 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.004959333 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947179975 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.862017083 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.867489925 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.973647255 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.98349991 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.069427818 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.86438649 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.075144038 seconds)
  done (took 901.260683118 seconds)
done (took 1219.429755607 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.865413461 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.858606713 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.867102543 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.860927738 seconds)
  done (took 29.248423922 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.86433644 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.863871905 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.862224571 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.86361078 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.862812505 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.862294968 seconds)
  done (took 12.977391127 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.973416615 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.864473714 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.866858306 seconds)
  done (took 21.499617088 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.941307187 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.269229072 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.003576316 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.305381639 seconds)
  done (took 10.312998698 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.862569659 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.866255379 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.864197563 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.865846638 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.864669184 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.873428757 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.863160178 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.867159414 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.866693465 seconds)
  done (took 18.592218922 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.587099727 seconds)
done (took 99.014943988 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.006616098 seconds)
    (2/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.950195905 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.874695837 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.151233197 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.933870735 seconds)
    (6/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.172265458 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.535312394 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.011412641 seconds)
    (9/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.885757229 seconds)
    (10/309) benchmarking ("sort", BigInt, false)...
    done (took 6.864435471 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.174059343 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.005224121 seconds)
    (13/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.517487879 seconds)
    (14/309) benchmarking ("sort", Int8, false)...
    done (took 4.836454176 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.970750201 seconds)
    (16/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.877227342 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.507904048 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.971886942 seconds)
    (19/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268812972 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.185349962 seconds)
    (21/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.031988579 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.741063381 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.996673344 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.992930999 seconds)
    (25/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.966911047 seconds)
    (26/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.945157765 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.121577427 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.029089163 seconds)
    (29/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866865424 seconds)
    (30/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.135256146 seconds)
    (31/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.891063352 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.253272115 seconds)
    (33/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.995445313 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.180444008 seconds)
    (35/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.000550089 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.258567194 seconds)
    (37/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.555411451 seconds)
    (38/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.449660454 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.761068744 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.959478401 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.011500498 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.181548904 seconds)
    (43/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356606764 seconds)
    (44/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.087285188 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.037449714 seconds)
    (46/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.693097031 seconds)
    (47/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.016791937 seconds)
    (48/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.897421009 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.864074633 seconds)
    (50/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.971905118 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.865256628 seconds)
    (52/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 4.008567572 seconds)
    (53/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.139002183 seconds)
    (54/309) benchmarking ("sort", Bool, false)...
    done (took 2.08368458 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.909839413 seconds)
    (56/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.26139685 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.998811017 seconds)
    (58/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.063979929 seconds)
    (59/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.132581739 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.510426967 seconds)
    (61/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.930753315 seconds)
    (62/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.879647957 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.983044567 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.141315982 seconds)
    (65/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.690262431 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.876766864 seconds)
    (67/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.571642715 seconds)
    (68/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.022233478 seconds)
    (69/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.885890289 seconds)
    (70/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.169851107 seconds)
    (71/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.056516324 seconds)
    (72/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.427660638 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.875036547 seconds)
    (74/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.605897515 seconds)
    (75/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348736644 seconds)
    (76/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.868558197 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.967657802 seconds)
    (78/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.120889296 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.94466991 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.994299152 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.129620903 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.384179498 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.259706016 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.867997956 seconds)
    (85/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892888866 seconds)
    (86/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.037197197 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.704974711 seconds)
    (88/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.993433318 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.867458994 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.981004133 seconds)
    (91/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.868720277 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.104107878 seconds)
    (93/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.987912559 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.951000008 seconds)
    (95/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.082440336 seconds)
    (96/309) benchmarking ("sort", Float32, false)...
    done (took 5.607061242 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.868471936 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.142413875 seconds)
    (99/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051169591 seconds)
    (100/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.475062213 seconds)
    (101/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.687363002 seconds)
    (102/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.10656716 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.038582354 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.978968037 seconds)
    (105/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.869071523 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.071349495 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.178099688 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.491481387 seconds)
    (109/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.222802494 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175455081 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890556157 seconds)
    (112/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.000028181 seconds)
    (113/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891902737 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.891249048 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.8671802 seconds)
    (116/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.386661383 seconds)
    (117/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.870635394 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.012992471 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.278896514 seconds)
    (120/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.87045039 seconds)
    (121/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.183845826 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.016798426 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.166512876 seconds)
    (124/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.892437859 seconds)
    (125/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.233309895 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.967506406 seconds)
    (127/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.880395195 seconds)
    (128/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.899286405 seconds)
    (129/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.053963316 seconds)
    (130/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.07983922 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.168032246 seconds)
    (132/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.623197186 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.839699881 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.122646499 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.873879429 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.382987543 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.255633415 seconds)
    (138/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.723890494 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.001992021 seconds)
    (140/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.87096781 seconds)
    (141/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 4.160970395 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.126872019 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.58760761 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.362972012 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.642656527 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.975578034 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.161136762 seconds)
    (148/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.875423488 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.024117647 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.896828214 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.006847347 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.87231936 seconds)
    (153/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.956389028 seconds)
    (154/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.568820775 seconds)
    (155/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.030868859 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.210438401 seconds)
    (157/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.901451873 seconds)
    (158/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.958813757 seconds)
    (159/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.986237802 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889828921 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.95124824 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.872866707 seconds)
    (163/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.855014489 seconds)
    (164/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.91355099 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.8727784 seconds)
    (166/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.972482178 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.182691187 seconds)
    (168/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.879840887 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.875050347 seconds)
    (170/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.974503653 seconds)
    (171/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.975021886 seconds)
    (172/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.683884931 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.486732447 seconds)
    (174/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.152364927 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.220346681 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.871522783 seconds)
    (177/309) benchmarking ("sort", Float64, false)...
    done (took 5.616800804 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.329990478 seconds)
    (179/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.014727795 seconds)
    (180/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938118829 seconds)
    (181/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.873464802 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.996347627 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.205031797 seconds)
    (184/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.168233037 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.955485431 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.191451819 seconds)
    (187/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.266286934 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.996821317 seconds)
    (189/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952032711 seconds)
    (190/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138297604 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.8748262 seconds)
    (192/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.440648706 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.162226202 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.889963612 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.264848296 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.209234236 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.682569503 seconds)
    (198/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.220570228 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.893859738 seconds)
    (200/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.898233946 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.163271613 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.876161146 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.293871791 seconds)
    (204/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.876605165 seconds)
    (205/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.06759704 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.941177277 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.966900043 seconds)
    (208/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.116631796 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.116556764 seconds)
    (210/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.876222119 seconds)
    (211/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.975641207 seconds)
    (212/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.875435765 seconds)
    (213/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.964961088 seconds)
    (214/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.668557079 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.874492252 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.636937756 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.170779995 seconds)
    (218/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.874737296 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.969243551 seconds)
    (220/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.958157909 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.02456645 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.913023947 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.986392132 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.276051232 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.345988544 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128322308 seconds)
    (227/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.202302916 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.907849068 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.877540873 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.155315011 seconds)
    (231/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.957125652 seconds)
    (232/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.114985923 seconds)
    (233/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.02110777 seconds)
    (234/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.64978621 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.968652144 seconds)
    (236/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.984647602 seconds)
    (237/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.892007318 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.18788169 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.01844357 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.876871027 seconds)
    (241/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.897458665 seconds)
    (242/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.900465807 seconds)
    (243/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.270989128 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.844259323 seconds)
    (245/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.905158539 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.759959194 seconds)
    (247/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.885201929 seconds)
    (248/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.424016302 seconds)
    (249/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.319874002 seconds)
    (250/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.066298174 seconds)
    (251/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.876689347 seconds)
    (252/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 9.20571341 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.096534027 seconds)
    (254/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.876372429 seconds)
    (255/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 9.274417012 seconds)
    (256/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.980511176 seconds)
    (257/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.421851161 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.012811761 seconds)
    (259/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.880994407 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.878579605 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.289209284 seconds)
    (262/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.023317026 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.271554885 seconds)
    (264/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.684988254 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.885327637 seconds)
    (266/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.981181946 seconds)
    (267/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.45027076 seconds)
    (268/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.627756414 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.289859472 seconds)
    (270/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.87724686 seconds)
    (271/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.940290202 seconds)
    (272/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.093506512 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.166206339 seconds)
    (274/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.986134105 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.896689592 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.246568818 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.680167957 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.867860674 seconds)
    (279/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.014598333 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.275254721 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.109024668 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.193549475 seconds)
    (283/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.06587499 seconds)
    (284/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.963642349 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902094189 seconds)
    (286/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.881786193 seconds)
    (287/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.130912505 seconds)
    (288/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.16025178 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.799980225 seconds)
    (290/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.077769304 seconds)
    (291/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.304083751 seconds)
    (292/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.207973012 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.67311352 seconds)
    (294/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.882454178 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.129531938 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.938744412 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.913739577 seconds)
    (298/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.877280384 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.941472874 seconds)
    (300/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.880064073 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.93822589 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.995369573 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.95939692 seconds)
    (304/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.886898232 seconds)
    (305/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.349012381 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.095444329 seconds)
    (307/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.985578605 seconds)
    (308/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155113773 seconds)
    (309/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.940191479 seconds)
  done (took 1015.057242841 seconds)
done (took 1016.924895641 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.908140448 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902858302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.887435779 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.908257477 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.001080054 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933713708 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.902319644 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889753847 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.936493068 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935420292 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883766692 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.926640804 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.886247862 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.886082918 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.885736952 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.902128178 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.192380707 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.916510251 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.905278236 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.899023721 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.904225406 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.886716846 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.936290463 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.929436932 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.891934655 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.891769861 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.889943388 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.905912784 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.99912774 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.889402386 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.890140599 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.90592459 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.192003057 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.911036893 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.884579117 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.908219197 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.899266172 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.898256018 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.896048014 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.9217454 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.331468377 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.892195678 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.889562898 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885154647 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.886080623 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.894756044 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.886926073 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.897702597 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903668837 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.904670779 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.330393399 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.909417831 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.896775239 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886547455 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.903139444 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.889782189 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.894187301 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.905739302 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.910496379 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904515476 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.179814115 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.921945221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.892118391 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.9056467 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.896754482 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364011079 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.893616748 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.901424017 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334368201 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.901887673 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.366145313 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.903002425 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.891989899 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.9034238 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.921894588 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.193245299 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.911670876 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.888514593 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.903654943 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.885968123 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.900884599 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.9116454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.896750787 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.889139561 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907661681 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.934138144 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.904325603 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.8931443 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.901684628 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.911140974 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.901039149 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.904722292 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.892068382 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.890340753 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.901584003 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.895145436 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.895945346 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.894941218 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.90011448 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.902334662 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.332641348 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912013638 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.887684646 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.889201315 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.88904057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.90506253 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.333372843 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.898521705 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.912764373 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.941818091 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.892090723 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.184128025 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.921846567 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.908527825 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.903125333 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.894441095 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.887660294 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.181859689 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356075375 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.911745347 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.891189479 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.890322625 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.910560152 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.895943703 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.891593965 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.197902863 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.919693058 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.908169053 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.01501089 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.906261188 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.925951648 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.893958043 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.896686544 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.936274994 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910270486 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.924309602 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.899656949 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.907363301 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.911464084 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.893506143 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.904565471 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.905611362 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.890676919 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.900575646 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.889120455 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.940609546 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907046683 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907131608 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.917312382 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.018230068 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.892016018 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.186566882 seconds)
done (took 297.261249226 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.966947733 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.889893003 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.010696516 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888890189 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.977881214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.964179624 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.890986891 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.894639646 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.891355522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.389417691 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.891018008 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894741575 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.888465635 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.899240214 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.957927494 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.89199214 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.890558149 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.336121429 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.89104781 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.971693893 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.889646612 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.89255293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.890895255 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.404027033 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.890015175 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.89115133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969993639 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.89382974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.341469228 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.892925622 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.892779 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.340466656 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.970192866 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.917501639 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.897916408 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.897822111 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.980695896 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.902948331 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.958263209 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.959944882 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.010238589 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.925586447 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.892156567 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.894798892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.896507612 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892933941 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.897195875 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.924208292 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.891254042 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.899296658 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.338329292 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.897381775 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.899315064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.891853007 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.891752775 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.91995212 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.892686355 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.89830972 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.971334315 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892332343 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.960290524 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.392905372 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.392376772 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.892169292 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.892727438 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.89222433 seconds)
  done (took 186.815449405 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.96092411 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.966922309 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958025751 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.899781325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.942193245 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.960309461 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.898023032 seconds)
  done (took 15.408361546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.899544274 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.893737021 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943384361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.946413652 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.897131984 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.074269158 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.9061445 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.897888708 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.920884835 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893879638 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.560226605 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.945642879 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900932079 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.89237989 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.906807536 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.948911985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.898650449 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.896838225 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.008376758 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.045095941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.898510996 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.901820394 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.920081002 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.907382014 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.896072039 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.896855074 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.896123273 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.901671745 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.893363737 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.896767776 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893711424 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.94777011 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.892895872 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.894713086 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.894981525 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.895309279 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894343553 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.893551342 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.896996057 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.894996523 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.895633581 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.895166624 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.89442524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.895612987 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.896224792 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.917601825 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.894022466 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.895716648 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.894656475 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.897793791 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.919841768 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.896020891 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.895811282 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.899800409 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.936613702 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899357301 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.899174073 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.900797629 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897633311 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.897851272 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.895563 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.045252274 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.945651442 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.896570847 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.946380529 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.051199971 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.898763576 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.895390108 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.894933682 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.983430096 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.895092504 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.946169779 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.898870993 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.011426717 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.89792136 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.076632108 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.92039556 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.90290876 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.903125686 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.903474692 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.906676558 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.900935506 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.901465239 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.902839611 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902346767 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.897231891 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.896773501 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.900429729 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.907950543 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.901317887 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.94811072 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.896833169 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.901399178 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.042077821 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.897097719 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.015601185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.927950877 seconds)
  done (took 208.587554318 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.907489471 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.906818101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.902447782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.91334152 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.901050544 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.899366131 seconds)
  done (took 13.26002954 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900759681 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.906014144 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.898079579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.899366812 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.903234264 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899499318 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.900676552 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904095912 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.90239766 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.901415477 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.900418969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.904052904 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.89967856 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.903863711 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.898744866 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.903141708 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.900446671 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.90639194 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.901706921 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901098703 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.106099896 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.901081414 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.902811165 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.90275612 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907360913 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.902190752 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911898182 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.899900957 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.901701738 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.909082442 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.90314418 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.903088412 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.903368438 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.908023611 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.904969401 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.903349263 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905311611 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.906618261 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.899254343 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.903337826 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.90324814 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900314722 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.90209204 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.90080715 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.905581953 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.909999193 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.907020065 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914025726 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.902964979 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.904087757 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.903702851 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.902363932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.902535834 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.903440611 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.905903914 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.90810664 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.906485426 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.903509478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.901803674 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.906334472 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.905838136 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.904971641 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.904151076 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.907387812 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.909383662 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.902667922 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.908991027 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905566749 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.902468409 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.903305342 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.909666606 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.903765877 seconds)
  done (took 140.114869604 seconds)
done (took 566.022522016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.819959469 seconds)
  done (took 9.651806232 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.062330033 seconds)
  done (took 8.901684848 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.636321073 seconds)
  done (took 10.47513393 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.918460274 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.949102294 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.910031894 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.910814058 seconds)
  done (took 29.532175721 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.257278293 seconds)
  done (took 9.091526496 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.917375159 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.899274488 seconds)
  done (took 15.724858553 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.050040283 seconds)
  done (took 8.889236178 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.289487502 seconds)
  done (took 9.151804472 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.924548219 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.90484873 seconds)
  done (took 15.685728488 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.907179004 seconds)
  done (took 8.743569987 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.488309987 seconds)
  done (took 10.405877554 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.921456061 seconds)
  done (took 8.808093277 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.957969366 seconds)
  done (took 8.79538461 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.919114868 seconds)
  done (took 8.754116159 seconds)
done (took 164.44199161 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.917669247 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.904935722 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.904995664 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.90564837 seconds)
  done (took 29.473585403 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.941367272 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.937836722 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.951988861 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.944221181 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.937526847 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.935917743 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.947711969 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.941988539 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.939735291 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.938022495 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.944186983 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.939053394 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.938858725 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.949792464 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.953116492 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.936744234 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.940747588 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.940863751 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.932117074 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.948436593 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.937200274 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.941441791 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.906225729 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.907764342 seconds)
  done (took 48.370542411 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.094918308 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.978071001 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.058603173 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.960247973 seconds)
  done (took 9.926562994 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.90429632 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.969528602 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.959828013 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.955221192 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.961130686 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.013815245 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.960720514 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.044926852 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.036957554 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.030843942 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.918492485 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.932813172 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.93386385 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.957577546 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.014236831 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.907300078 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.913692656 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.026292098 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.970975145 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.08393747 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.910175909 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.960135268 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.959484877 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.963520687 seconds)
  done (took 49.125598473 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.908704554 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.922418281 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.919243729 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.910677629 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.90949431 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.909280328 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.919506082 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.912966848 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.930092326 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.91534367 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.908774425 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.910592216 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.916400895 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.911312702 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.911563882 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.926994692 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.932271877 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.913067146 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.923549045 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.920865101 seconds)
  done (took 40.171362387 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.914362931 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.759994855 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.257689688 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.160603424 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.909806384 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.904785461 seconds)
  done (took 31.749651036 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.926226187 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.915646767 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.913384199 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.967819338 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.055779993 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.919804905 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.912290572 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.921958334 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.957836468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.973699079 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.930109588 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.942012498 seconds)
  done (took 25.176003454 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.916330799 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.913426372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.913376863 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.9241604 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.924249257 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.923789108 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.919909362 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.912060508 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.929791839 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.937674851 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.918596255 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.92366016 seconds)
  done (took 44.906633873 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.617088902 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981184433 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915232323 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.788575164 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.365021224 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464098031 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.804960366 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.598943691 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382654664 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.836467085 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113632175 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.920135053 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999255897 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.911648437 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18750588 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.245318351 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103430931 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159097584 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.656066424 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.954359206 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.119211819 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143880078 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.202486296 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91085183 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915780338 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.934836059 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42716522 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.64799838 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95049041 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.327746025 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.159754529 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.865046656 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976139187 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.915112651 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.927644376 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9193731 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920131233 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187865487 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.928244296 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04272065 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988607453 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162905462 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922317501 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333266832 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.618554055 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.176992641 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.024428596 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.913206481 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922767532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91932492 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842229455 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002138943 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.917751636 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923445796 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.617983743 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.917456995 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994516259 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.918686649 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119980984 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.719106356 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60763581 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.919424115 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920973061 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47131474 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9818533 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.031477026 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613927911 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302410108 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.334027043 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.018703134 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.918290053 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923377875 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.14208228 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88619597 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.66032919 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954325935 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053641121 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.932002498 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559642009 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228833844 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.314885326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469657407 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84149483 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200432771 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.717189403 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.910527736 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136615365 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.743554964 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847177136 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137180493 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957019768 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923600564 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.179282893 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.610912561 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.02601697 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.928263439 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354838097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935071782 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.923089516 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916090076 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.131057036 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400297251 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946133994 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036262641 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931350809 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.001191627 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842942633 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.93000992 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.919924919 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.82348607 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.920130343 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919516664 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.965711245 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.686750335 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96329984 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.857515215 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921402666 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99436932 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961388492 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.868134468 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173632071 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.223930307 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.596141801 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953742219 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.051671365 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.255550938 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13579358 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924961575 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133760981 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444309972 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.300514163 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959861803 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209391209 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.976505461 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208881404 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342176785 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993732507 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676085972 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.720677175 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.131287901 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929541954 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.916043235 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922018731 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925870401 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855259556 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.56618555 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.255183651 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.079961247 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.133838271 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.347472217 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.904658508 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.918873987 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224953894 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05378823 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.906799421 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.571251463 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.404732692 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.712925492 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.943421715 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145693262 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.186397875 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.881152187 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931315559 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996080313 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939480299 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.93088449 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.225970217 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.279974526 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.917023374 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.923165195 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867848807 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931543259 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.922604512 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.452400327 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.891711468 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.926790081 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.928537021 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.791067853 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993303943 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920889427 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.91980497 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.458338934 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428252909 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.928965431 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.591913343 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.953377321 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990665106 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190930062 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.252968863 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04502685 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61958776 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.305069346 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026405674 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.62583591 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846707682 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919037665 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.862488836 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922161505 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.924414626 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930451296 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.108482588 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.198353083 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222777179 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.386258063 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985716333 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120767442 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.613107362 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87594725 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.923849698 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928062718 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.923391955 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922314189 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.438421509 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.218832489 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.99170485 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950035792 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.930800468 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050266453 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.933071314 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847398102 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.923166909 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922855744 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445191685 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95167869 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.876037083 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.199975572 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.775812831 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043634538 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968896585 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.932059377 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9320516 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.611294744 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.961461575 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849678961 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469776987 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964992656 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.682050984 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416654667 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483169188 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227402763 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242804957 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.24954778 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.995827677 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140788405 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.008804843 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980700456 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014649729 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860549703 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.849540553 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.583705229 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.249666298 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195317709 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931940538 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141523867 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.613511021 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156641521 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954623253 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.692417847 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232291836 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904280318 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9405979 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.344222167 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03146196 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012209037 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928569166 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.87417763 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262091495 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966955594 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.631616368 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937003963 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.280503739 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446281186 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.99638789 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.257962854 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133781872 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.932107733 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.279394635 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.207624758 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96551656 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932413451 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.921039797 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.141169945 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508893852 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.785676188 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932451975 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.162380606 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230062979 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.830863151 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.927101565 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.161782439 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192861519 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930615795 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.244277071 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.294351257 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.036851067 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986006938 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15740937 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.701715205 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234537448 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.490815942 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.41915873 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938519705 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858796856 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.63103778 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.131107611 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934665821 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899360559 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150853939 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169069836 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615211777 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.151922995 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171911544 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.93830627 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20429343 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000857419 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.023408991 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.205543681 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.365838856 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.179956905 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158779482 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.470484368 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14946171 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.385418644 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.100404348 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.930368699 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137661996 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149486409 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.145977556 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.271645882 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099538778 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.641689651 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.936990856 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.139786471 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230833562 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99417061 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.264904101 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.10017464 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.017550724 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93929528 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995492038 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940422362 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939189258 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.266483383 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.455860953 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.943757175 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014331437 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004542302 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.442051888 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.933765638 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.938392341 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200806763 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284014655 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268162709 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919555632 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94003937 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934823317 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065826364 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.858100215 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939169934 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.206756066 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.935265764 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422222532 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083274368 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949923986 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.211113171 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317294949 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.696762765 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896353369 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942358712 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153668613 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247073069 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.197196486 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.048769601 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208253328 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.281219512 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.972296377 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.267184571 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175175567 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936699257 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.81250998 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.938829617 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062416759 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.13260334 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210979124 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.447408424 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623305791 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202331421 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.792029438 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.937243067 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.682736271 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208243772 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202135784 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.98719111 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006400249 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937525856 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.464477572 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.661966787 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067820203 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.7971677 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862291737 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.020089555 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.156208759 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.177539558 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.643977757 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.938258553 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213249097 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239859975 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203834445 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.985949441 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.792544492 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150931225 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937886403 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.952222178 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.173172692 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163221522 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186693438 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939154433 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937107494 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.741527963 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865618676 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.93485613 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994280797 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.163828023 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955999679 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.448683152 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.634084626 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221780111 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987237664 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939545582 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204048056 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.462555593 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.490186861 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941140071 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161614819 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.966339515 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233122296 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.940191181 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.454973985 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242864316 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.937245221 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.552564453 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.181868264 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201798738 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870558532 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944285283 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15229851 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.792829874 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935107685 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929543631 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453990897 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170153744 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67412039 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.492365396 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.938960161 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.938250201 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457047249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96923876 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462098217 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967472596 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954057485 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.454786879 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.629936629 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.222141326 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.182278583 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.557340516 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.563802361 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.941310386 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.937587263 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940438549 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858286765 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.286287328 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.124681934 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226255317 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.973890795 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469815188 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971290159 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.272574856 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048260142 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.174843868 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.974207706 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461257681 seconds)
  done (took 1687.72102948 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93590162 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.073161566 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.959849767 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.958779134 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.979068041 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.98670382 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022860268 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.032098066 seconds)
  done (took 57.816511137 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.938672325 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.952590573 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.946048091 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.938111169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.969762446 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.93787348 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.09531746 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.946263682 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.96422995 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.943817868 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.941607338 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939143043 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.221088904 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.959047234 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.938986828 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.938708797 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.949840408 seconds)
  done (took 75.428865397 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.946547662 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.189912929 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.998847137 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.942703318 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.88516101 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.949508627 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.966422163 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.98604664 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.942454231 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.166320154 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.239977279 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.96193699 seconds)
  done (took 91.046319919 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.947344752 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.945356732 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.941586475 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.943320824 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.940194128 seconds)
  done (took 11.592720411 seconds)
done (took 2204.40901565 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.329235495 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.000510402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.036917415 seconds)
  done (took 5.905369198 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.087245488 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.135385374 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.246936172 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.011383948 seconds)
  done (took 10.358676991 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.24408134 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.321658706 seconds)
  done (took 6.43402385 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.297755083 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.940491415 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.325202203 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.943136683 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.942881576 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.941851645 seconds)
  done (took 22.704424733 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.941833992 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.943546357 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.94075815 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.942581299 seconds)
  done (took 9.639429149 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.940724568 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.669346294 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.941527788 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.951152097 seconds)
  done (took 21.373271088 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.090914768 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.061159339 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.083488028 seconds)
  done (took 8.107511752 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.084834877 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.776427957 seconds)
  done (took 6.731635056 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.095740751 seconds)
  done (took 3.966267371 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.971860664 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.212634654 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.431999777 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.467897425 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.58728775 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.719431331 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.255456422 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.175704615 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.358005495 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.373807749 seconds)
  done (took 25.425537306 seconds)
done (took 136.408712815 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.292663313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954538304 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.142739246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.30528878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.171968878 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.144711612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.162324511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.296738247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.974427005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.963079777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.301819995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.168937478 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.106066614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.954292816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.115497527 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957363639 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.164170357 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.300289792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.984109236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.200418929 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.167931667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.952527781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.147980339 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.961379488 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.164295977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.101551515 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.495774497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957931787 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.135327583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.503325474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.101012275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349689026 seconds)
  done (took 170.571757425 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.944234053 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.942556701 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.946721556 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.943455931 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.500527285 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94380701 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945815894 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944646918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.398305671 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.388778076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.94415573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.497979697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944171851 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944926421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946075227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.943675757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.571312875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.945276965 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.944897922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943974766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.943749705 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.340258424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.944379897 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.347864617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.564895302 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.943895306 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.943816081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.943273693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.943978345 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.947323453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945283959 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947223787 seconds)
  done (took 212.155642916 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.945962125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.945751652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.944528371 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.945278017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.945253693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.943610704 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.947827424 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.94445792 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.791734269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.770648014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944486411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.947327047 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948735039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945232412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950376949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.94577384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.94809859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.951676303 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945269556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.951038376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.948433081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.626737562 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945091989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.648464209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.94868476 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952357349 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.946033769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.946304643 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946510565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.945036848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.946237816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.945465001 seconds)
  done (took 223.225795742 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.187171332 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.948687432 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.950396118 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.938253333 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.951352746 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.947533689 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.925503887 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.196112265 seconds)
  done (took 19.922456995 seconds)
done (took 627.758426698 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.350935373 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.178345833 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.121542659 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.975418849 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230219561 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.012801945 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.967808403 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.032334516 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.800889957 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041175722 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.629243572 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.986368133 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714274244 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.992717041 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.096018056 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.025942441 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.558163364 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.656287047 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.114668198 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.058460361 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.150850105 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.91914963 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.045438719 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.837888736 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.643235191 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.95575989 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.016401813 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.559607649 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.977233307 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.130838539 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.664123414 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.268163926 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.981166909 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.970852646 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.022242742 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.000735091 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.205513424 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.977938189 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.095903636 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.714218246 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.036990701 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.698191096 seconds)
  done (took 106.29256928 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.961574709 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.958187605 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.958582287 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.95638424 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.966668525 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.958654494 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.957117862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.95796745 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.95998237 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.956178783 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.958984374 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.967902604 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.957707104 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.967641234 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.957676868 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.961194306 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.957475126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.966138038 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.957940585 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.958578033 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.960118253 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.958279536 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.954320805 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.957092239 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.957217317 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.958877145 seconds)
  done (took 52.844338322 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.954402584 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.124869267 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.197226609 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970138371 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.954804838 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.956143467 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.969767074 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.96129335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.957160037 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.9550819 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.044082471 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962228935 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.97198902 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.203821502 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.96686141 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.951066862 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.953679283 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.956743042 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.132575241 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.971661241 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.972294106 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.960324593 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.972944907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.970514166 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.959658487 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954069755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.960227056 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.447305267 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.969671271 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.047146052 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000131713 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.976601023 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.393854381 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.21228525 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00521139 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.965158018 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.956887218 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.052946825 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.966864223 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.955780045 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.97576425 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.960698099 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.201420768 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.488941548 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.97231201 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.955904948 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.456948856 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059248669 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999843163 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963038955 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.206341474 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.971025136 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.957104615 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.959340269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.99432122 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.966310971 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.956400391 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.326213167 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.971927205 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.976273914 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.960346433 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.95894936 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137829099 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.964127718 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.12703472 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.965696595 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.962413362 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.957909096 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.205045322 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971385445 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.504891177 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.969088809 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.957862359 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.045217406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.131032528 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.481724856 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.96918941 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.139065257 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.405049473 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.978456487 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.96369861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.438704002 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.983297587 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.961762553 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.958979678 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.958791704 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.959118129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.003972161 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.973803392 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407599683 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.496336048 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.340843423 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.983853675 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.966686989 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.959285687 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.329771359 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.966024268 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.958921298 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.193775225 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.510574069 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.970495911 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.964973858 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.481766628 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.97120164 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.975882775 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.966315481 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.212022684 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.971106196 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.003893595 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.959531088 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.966181936 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.963001209 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.97546977 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.967126652 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.958069858 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.474002625 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.064663465 seconds)
  done (took 242.978008112 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.958725046 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.956473525 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.958761416 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.955810057 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.957108432 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.961281808 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.958884686 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.95837721 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.95917513 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.959823781 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.957484219 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.958656346 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.960369178 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.959030203 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.478158665 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.96228412 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.568059162 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.961077232 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.963854169 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.960767746 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.641280199 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.96614615 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.962194815 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.960397224 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.961311642 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.961568742 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.963888825 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.010825459 seconds)
  done (took 170.63257597 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.961394595 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.147680057 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.98108177 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.993159149 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.971865053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.962702301 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.108519911 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.985831021 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.970079535 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.96414083 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.963429252 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.023707661 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.978626066 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.061632028 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.995664532 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.070529018 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.067918228 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.971486395 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.963758297 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.964137267 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.99371942 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.973965196 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.022668632 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.087805797 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.981629717 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.077376396 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.985576754 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.964269221 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.965309667 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.076754944 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.984799163 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.026217449 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.993782969 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.983128164 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.083982758 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.079309017 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.070390594 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.070459861 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.973157987 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965498336 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.967442276 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.9660486 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.07806509 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.98505117 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.966635696 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.080777875 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.988078698 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.966420704 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.966414394 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.965407239 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.978414004 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.983629122 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.030097209 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.095751227 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.999239678 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.99102089 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.063345978 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.101234186 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.964235475 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.064058284 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.974920142 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.082090457 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.987811873 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.967707967 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.967829903 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.969642636 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.995746694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.070482955 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.072176614 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.974260168 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.065518867 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.003375946 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.972977503 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.966858017 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.968100222 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.080545055 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.082718347 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.001389382 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.001125964 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.994923571 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.977659621 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.966958312 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.969986116 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.984329067 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.972484253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.080791431 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08597225 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.971820796 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.968063701 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.968045519 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.968960921 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.992934376 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.086467903 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.001695902 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.076639688 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.034910471 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.042506626 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.979046766 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.980382915 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.976201466 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.028477092 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.97839273 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.97736017 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.282641478 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.028850386 seconds)
  done (took 213.14609291 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.380505559 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.014502317 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.025269616 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.301574537 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337422562 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.986675884 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.017006137 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.019394651 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.053015755 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.242884789 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.09254512 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.036804027 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.002278592 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.992096573 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.017927661 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.052189073 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.029625244 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.359804399 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.218666409 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.543880366 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.00626284 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.291509637 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.344557666 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.622868055 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.066232011 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.4262404 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.637639991 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.182425861 seconds)
  done (took 66.204973592 seconds)
done (took 853.974026088 seconds)
SAVING RESULT...
DONE!
