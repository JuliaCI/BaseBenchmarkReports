cset: moving following pidspec: 7524
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341657752 seconds)
loading group "string"... done (took 0.586293105 seconds)
loading group "linalg"... done (took 7.298399854 seconds)
loading group "parallel"... done (took 0.167724504 seconds)
loading group "find"... done (took 1.142154022 seconds)
loading group "tuple"... done (took 2.048557107 seconds)
loading group "dates"... done (took 1.284847886 seconds)
loading group "micro"... done (took 0.237675812 seconds)
loading group "io"... done (took 0.997747202 seconds)
loading group "scalar"... done (took 40.4740071 seconds)
loading group "sparse"... done (took 13.051845309 seconds)
loading group "broadcast"... done (took 1.007516709 seconds)
loading group "union"... done (took 13.928618792 seconds)
loading group "simd"... done (took 4.61509631 seconds)
loading group "random"... done (took 9.365607922 seconds)
loading group "problem"... done (took 1.969220126 seconds)
loading group "array"... done (took 22.021244694 seconds)
loading group "misc"... done (took 2.014143803 seconds)
loading group "sort"... done (took 3.378972595 seconds)
loading group "collection"... done (took 19.203716694 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560299379 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154337958 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146215883 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144450874 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.183604799 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.152702877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153875974 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097029581 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.93201013 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170808611 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.149522044 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.514320277 seconds)
done (took 5.089537351 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.234107987 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092773974 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10146567 seconds)
  done (took 0.86610584 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076059372 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143844161 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092683864 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078470183 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094805821 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077457255 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093986059 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077290038 seconds)
  done (took 1.335920711 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085371961 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.095251255 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.079404655 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.094969629 seconds)
  done (took 1.031692532 seconds)
done (took 4.228263006 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.872797752 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.268784675 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201504562 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.455993805 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.197326747 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215518554 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673205245 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.353805421 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251489911 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097895619 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130810673 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385932929 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13786825 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673969488 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092675644 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124325291 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177441992 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.466707809 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082847498 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10952885 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11503316 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141503321 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129045177 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08806287 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182889735 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080539189 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.189497015 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105903929 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.078709453 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.270132479 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199019691 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.683868135 seconds)
  done (took 10.948554866 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109384996 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.130649188 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095593023 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136324362 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13326965 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096920506 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.082459318 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095056846 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119028292 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.171841253 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113404274 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134198843 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093544708 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080971405 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.112419173 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24158462 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103793465 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.11395678 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098453834 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086859824 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135058768 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.108604027 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091742921 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106220418 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.162271981 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207791527 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.125971027 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126698409 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097251405 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096731078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14365605 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158292928 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093103747 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080225225 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169503719 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120945172 seconds)
  done (took 5.065736178 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.113838936 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18601828 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118526791 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166247596 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079092341 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139313188 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.092198472 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11074758 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248792209 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.169006024 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.130704893 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.460571999 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140179608 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111704933 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09528332 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080313125 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095114461 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.433536319 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153861927 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130503313 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094876246 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101796047 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098294002 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360932989 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078610263 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093190946 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079998236 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.079638726 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158169584 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08126285 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.304523014 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.085151023 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11832898 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080458163 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122992715 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131232847 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110494628 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135763333 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095473989 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079016981 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174917136 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10297441 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079292108 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119379524 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131798441 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118452082 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098553424 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094346878 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.192548823 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078703027 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111604656 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.905264304 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178199914 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.118998281 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096204089 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301811426 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.096279315 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094443156 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075515477 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.263416247 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.193469433 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097838172 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100547727 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080027989 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098215571 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.381792863 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081821574 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.676740975 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082561548 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107701755 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082603244 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096553618 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103679998 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087109422 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11488335 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07720751 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0970867 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082421216 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.09749525 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078256012 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0996474 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108537576 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215288444 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080195872 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09834183 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.076116319 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094917017 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09909136 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127151832 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099818326 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078349341 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13147377 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099377394 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079984704 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134363182 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097943703 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.092788048 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101265417 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142485761 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096503461 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.127925966 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079631858 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124111836 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.096575041 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112150086 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111670865 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09865596 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169435254 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078916919 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095428671 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080289703 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096453667 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08016905 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.0996543 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091974528 seconds)
  done (took 22.415101381 seconds)
done (took 40.219021738 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.316919479 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.100304908 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.099308955 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09932447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08320456 seconds)
  done (took 1.452419825 seconds)
done (took 2.181843475 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.160215583 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115363382 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.092944344 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125319725 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075887805 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.130459033 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128276433 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092660829 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.128420567 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.091138693 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109054051 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093001716 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076788418 seconds)
  done (took 2.173089879 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093012605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111511093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082323794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110418662 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077144954 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110751488 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093101509 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118077376 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108908723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085152327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092591293 seconds)
  done (took 1.805388847 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09244574 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111564034 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083146842 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108702896 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076891592 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108777782 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092490711 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11635239 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108785535 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085926155 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092090548 seconds)
  done (took 1.800480779 seconds)
done (took 6.499226194 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090110137 seconds)
  done (took 0.809333622 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.744779747 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.758330131 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.093660165 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.145672033 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224922155 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.187149899 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.465423679 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.121029379 seconds)
  done (took 10.663134914 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.140361354 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082248889 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098085165 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083923374 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097686936 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085096338 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100608383 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101094241 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084494857 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.098586792 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085868403 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098432818 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081995365 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.10091836 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097941211 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085112062 seconds)
  done (took 2.303621135 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115727027 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114466628 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102219976 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.103835203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.084494425 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100996855 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102313464 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.085962725 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09887668 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100377818 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089315324 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103528481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101703459 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079094208 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105246498 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.105632181 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085104384 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10502507 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.088930971 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.105651423 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106485613 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077743129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102265381 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104443068 seconds)
  done (took 3.199394846 seconds)
done (took 17.699284158 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153086598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105038771 seconds)
  done (took 0.984549857 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093414449 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109089983 seconds)
  done (took 0.932387572 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.093640741 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093112045 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.118814947 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108356009 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08048502 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095829421 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117792818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080631081 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097171757 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080071288 seconds)
  done (took 1.699928412 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080201368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.1058003 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097272372 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093855975 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103773422 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093680013 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088909216 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098306786 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109023911 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076687533 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101079514 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113651164 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085931531 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114846507 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104727943 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081641957 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100819228 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097520107 seconds)
  done (took 2.483738022 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077503109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093414911 seconds)
  done (took 0.906550214 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079538709 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090617382 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078936709 seconds)
    (4/7) benchmarking "year"...
    done (took 0.094618756 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092449721 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076758701 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092696234 seconds)
  done (took 1.339391752 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.420845866 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116666087 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.278156147 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08493931 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118704668 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.291948963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095664093 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082680642 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101678117 seconds)
  done (took 2.381200216 seconds)
done (took 11.459293378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090733012 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.112739222 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112170473 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449894468 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104912446 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.095901528 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143533905 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24307351 seconds)
done (took 2.092464568 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.143706337 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.554393685 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415910437 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.225244753 seconds)
  done (took 1.93736132 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.391973671 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09784518 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082710423 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081478836 seconds)
  done (took 1.398603211 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078710904 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096488036 seconds)
  done (took 0.919967553 seconds)
done (took 5.146387509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079327715 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.093132415 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109040979 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097124059 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077088734 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098729821 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079268262 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.095838158 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077673566 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09650013 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080227157 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.096994023 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077431511 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.096093349 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079434004 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094776886 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077325738 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097891065 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076574647 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094209206 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093273072 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07978914 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092531845 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077748945 seconds)
  done (took 2.896513305 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.096527562 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095457272 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.098857191 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084672501 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101135173 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08520886 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102202515 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096577544 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085738752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098823851 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084608267 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100592381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099081594 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084909158 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098299996 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.084242274 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.101606445 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09777639 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081979291 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101924715 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084977609 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096693865 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099958442 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084598031 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101515485 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10057238 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082495554 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097216491 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085734489 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100254616 seconds)
  done (took 3.561524624 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083008107 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091336961 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078202922 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101993043 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078149253 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096877058 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07785026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095409728 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078264902 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094986098 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079260472 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095024734 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077174773 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096038649 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078166618 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098354876 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111562784 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078689829 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094706944 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079238588 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097655587 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078292725 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094517057 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078043968 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094589025 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077547864 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094939926 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07766193 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095233776 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077073895 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09829865 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080713599 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094989497 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083743875 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098487832 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076967078 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098022214 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077365694 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096115159 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078273106 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094120011 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077877615 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.095102286 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084454046 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094232385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.080035138 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094971833 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096079787 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078784147 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098042088 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078147194 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095141956 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079785229 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096492327 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082429089 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094889897 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079158967 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095381452 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.079511228 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095604597 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076928801 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094257496 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.080281685 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09505159 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109930798 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085114235 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094284657 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080159675 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095830012 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080999304 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097597398 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093306059 seconds)
  done (took 7.116536303 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.131276513 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12110244 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078950601 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096217136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074444517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094762705 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081471949 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095985244 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096439705 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084219802 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095656734 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079214328 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097268564 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093752074 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096225602 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079772085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101408945 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093359797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078884726 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098774552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079199669 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098269012 seconds)
  done (took 2.800298315 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.200542469 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100873303 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138689378 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10293458 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.081187638 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103478159 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098518451 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083723906 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099707328 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081045326 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098121673 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098577327 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08073271 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098851554 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081353011 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099212133 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101246597 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083683818 seconds)
  done (took 2.585666229 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090183911 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.199998303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101806121 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096266216 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09616779 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08172036 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101691441 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104041854 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081463291 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09534331 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086983862 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09760604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.097873414 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080483196 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100060032 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081494708 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100716094 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081305386 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107468341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103839086 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086736255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107934669 seconds)
  done (took 2.938053087 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0937611 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09813356 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114935857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082403005 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092406894 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078290265 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.102908403 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080109976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.103484614 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097873208 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08124265 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094487794 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.084899224 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096027714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084573312 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095516984 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097610989 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079555404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098328576 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076599336 seconds)
  done (took 2.589585779 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099352073 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096794091 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080058992 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105204571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097920466 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080093502 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105413866 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098191916 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08068887 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121667562 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09819144 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080947982 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105489622 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10201247 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079999336 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105269828 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106421435 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104412973 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.080759479 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097437997 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121386197 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080579162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108756505 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099601594 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08276791 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099506955 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082189759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105102623 seconds)
  done (took 3.466227232 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07931324 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096048216 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078138804 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095984845 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079411159 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095900959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078313423 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095386766 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080730889 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095603717 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081528326 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098359869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080755478 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098886898 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081510312 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098370524 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081173351 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095883909 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079069403 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095864882 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081099559 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099026859 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080516485 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095877034 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07828325 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099268308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078819483 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096364164 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081505182 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09606269 seconds)
  done (took 3.412727334 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088182847 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10347294 seconds)
  done (took 0.952187218 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077542431 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111340369 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078702507 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102560045 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085965479 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099789273 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106674684 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087139926 seconds)
  done (took 1.510263618 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094814858 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.10754622 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08216712 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109567797 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.107478026 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09763971 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170989284 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100766264 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087993159 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096136956 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111521879 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081144146 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105927595 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082782354 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105316829 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089616295 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097509951 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105014997 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088152053 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098420573 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084171693 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109490144 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084760628 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096545817 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083167484 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111256457 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112694653 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082610331 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104360032 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106754835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08838166 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09376472 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082460911 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099700522 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079671082 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108676191 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116608626 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084367632 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109925915 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083822222 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110111027 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094298687 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087046976 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107109117 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093316284 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100581663 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083073142 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094491209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080540357 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101720648 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095140559 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082844119 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093899678 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090493137 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103382527 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093780659 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098433971 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100581059 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086031644 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103070916 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089698701 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101624178 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085815826 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099883077 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089436105 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104042288 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11054355 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076921298 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094415142 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080314121 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110622307 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123302661 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089752687 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100689167 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084217702 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098480258 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085385095 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101403088 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105681731 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088288039 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100497304 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08829923 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107246279 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096874009 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082661106 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105516407 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078453592 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.099372654 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077131086 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114186677 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096508207 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078578296 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094719058 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.09052431 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.100391917 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.080462984 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094385963 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105039595 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076344897 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101658624 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084288607 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100542904 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094023736 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106193784 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106082844 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091726158 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108112315 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100357308 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086465021 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097122808 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084760705 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099463874 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09044027 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094328538 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086027785 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100942694 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083406397 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109644099 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098599263 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083384785 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108376539 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088502102 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099198667 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079708712 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103104672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09980725 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086298377 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10902483 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081288708 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096182217 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077719094 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103881207 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100085544 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087817374 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105492908 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086081663 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095034494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080756026 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104988299 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.11037979 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083275776 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101362258 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089771502 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.102662217 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08242332 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107302563 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102893365 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081591545 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.107489617 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083059518 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095994632 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087106775 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104071229 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081638851 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104543048 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103846546 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085801405 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.101108861 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081939843 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106835794 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100859498 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081775646 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099719358 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081712329 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111706989 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08479704 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095698165 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079680422 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.107805312 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097930651 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083136225 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099943634 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086563447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101271736 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081517591 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099946761 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084908344 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112192635 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105522499 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08406356 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106880911 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09450183 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.101437149 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102949485 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083191755 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102165263 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.083932235 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110400065 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088489844 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106021456 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103282737 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080384307 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107014209 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090648183 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100195292 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08157736 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.09964521 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105074469 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089740282 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105248089 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.083772736 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100064894 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084045887 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104745693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103978751 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082697744 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099746292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.087951521 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101019605 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090095673 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103039653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112543908 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087225546 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09681692 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086738707 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099136781 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106388772 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078381152 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.098180948 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.081950274 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102405061 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083129717 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103978934 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077364102 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108762247 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090980141 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101894083 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08234272 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101887809 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107358564 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085079068 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105268933 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086764437 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108665304 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112030018 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083176228 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104567265 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094862385 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10350448 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077616186 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106907099 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082531384 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.10050763 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100369204 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081377956 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103817789 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092451021 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108826334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076917962 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103902095 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100089979 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082859708 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097018253 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088136256 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104099012 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084446742 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108273208 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084208676 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102806663 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104806801 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083173603 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103554656 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084078698 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104542122 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085219506 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10445106 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10040841 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087148059 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100749645 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082295511 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103607405 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084629852 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101847858 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090600096 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101796192 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083262148 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.10286268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100903012 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084351026 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101891871 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083918197 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105235874 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083955856 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101897368 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086262776 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096311715 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108860532 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084147466 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109603166 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083461704 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098874458 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088715558 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104962964 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106412221 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084982558 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102623374 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084890555 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101112635 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08626342 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10915202 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.081499961 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112863621 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108157566 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082863287 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.102180189 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.081706522 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.100885262 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.080474624 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099815972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099368336 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082021644 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097514664 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086453816 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101878054 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081502145 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101932939 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082619512 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.098834093 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100811394 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076396068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099380562 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082547363 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102138821 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094736524 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104198898 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083917439 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101069376 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103354081 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083220091 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098412642 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092537422 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111196606 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101712851 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091157424 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.101403941 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086210203 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113775398 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.07873093 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101727092 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102704544 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081771536 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109900783 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084813261 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112959524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084066547 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101970862 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081024967 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103739576 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082196396 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097338508 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09968949 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088338458 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101367427 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082915026 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111090275 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087663604 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103548178 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111759082 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081532102 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10100673 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082824927 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098174392 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082168292 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102317444 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08732084 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103117938 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082502391 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099941742 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083695826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103335164 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104087151 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084347411 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103729685 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091911831 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102365237 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086907099 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105357409 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078085737 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105820746 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102276843 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084485509 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100349482 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087296792 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102156226 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082202836 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108151009 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098869213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081920067 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098402011 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.079123112 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.098741573 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.081317713 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099756774 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079992203 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100732698 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107771383 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079891272 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.101933095 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081400071 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.099793859 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088112057 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100195512 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10164021 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089170029 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.098881388 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08288358 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.1069563 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.084945614 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103186816 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100212422 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083080381 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106255536 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081068816 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.105491115 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081569821 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099868345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101063255 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079383464 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098561662 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.081328282 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099722821 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087616717 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101441883 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080731443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100018685 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.079529876 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101240911 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103222239 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090432959 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10269348 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084871974 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095386837 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078738592 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10073543 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079488633 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101067854 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102692603 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088045529 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103117229 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082029657 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099115778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09139647 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107418123 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103165131 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079787878 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103434755 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083707018 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103638697 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.083731309 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100447441 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083546607 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104845421 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.10115676 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081217986 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107375831 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08526284 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101906331 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082723852 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101329844 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081338666 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095933074 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.099902793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084511404 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.105472981 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084278515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100630434 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092239332 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.098276496 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099543471 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085583065 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099135065 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086457558 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09556579 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08378589 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100970559 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082597172 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095430136 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098618993 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080177717 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.102260697 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.080982747 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095361649 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092635692 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109805334 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.102854773 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08133465 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097912549 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077359959 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095211174 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081588836 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101123387 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085115711 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111070077 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081360505 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099055725 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09480171 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082946762 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104224851 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.085567368 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.097174163 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077840181 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099775218 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085484951 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106053768 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08083756 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100157709 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103180196 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084132508 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098127801 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085699014 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096876784 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085427187 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114093978 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10130434 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08286154 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107220309 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090278693 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101876339 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07784884 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101957798 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103326733 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083864042 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101462049 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.082965272 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11656039 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103555212 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08142627 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098246545 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.085437142 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099414106 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090388486 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102556662 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102137948 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087818933 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103631173 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09117489 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102694238 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10833398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085912788 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104070409 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08101241 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101440828 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080633784 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099480905 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.083749964 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.101781865 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104388575 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090512087 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.100733908 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093150365 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109607842 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102419969 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07972006 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.099873382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082412619 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096470499 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086809563 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101847778 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080726314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098845081 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081276724 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101683704 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087664701 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10120451 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102235812 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.082952139 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094807529 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084408631 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102717452 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083905675 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097231895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082449031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101853264 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.085683715 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104681408 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.098549453 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084614251 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102700467 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084487431 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096293643 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090200181 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100498945 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084771681 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100313084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082803871 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102039878 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10476772 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088094506 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101943182 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084594235 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110094002 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103741684 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08021327 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097006249 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089228418 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099102485 seconds)
  done (took 57.34953276 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141578716 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079602867 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097157143 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078203859 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110801475 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096806912 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077799613 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096676882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079277618 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099703797 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077630993 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096567608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08649296 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119463111 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109330121 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101243007 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077532882 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096986695 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078022948 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098347294 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105767157 seconds)
  done (took 2.815226412 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102297415 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117357168 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11243779 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114413533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087833118 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112604977 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111817556 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093036588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114895186 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107690051 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11529816 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092605113 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10803836 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107935634 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107250097 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091178208 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115779515 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106603924 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094420092 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112227432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109816027 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111594725 seconds)
  done (took 3.157142931 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084035899 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099643147 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.083748083 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.095794304 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083045272 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096654269 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08623722 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099287334 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084682849 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.099994909 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081081945 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100176075 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08328249 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096725183 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10007225 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0814185 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150411852 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.104596133 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081880695 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101864185 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077015155 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105337814 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077976754 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.097516217 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.099181713 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087123257 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10168611 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081501084 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101155407 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081441304 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100470519 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080465364 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.103638238 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082989563 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.100229046 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080930622 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100898274 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08255418 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.097561679 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.099217752 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.082916641 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096462033 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083423644 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101838441 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080552269 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.098662062 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083725641 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101354076 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077280458 seconds)
  done (took 5.352359908 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.100464076 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156480633 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08539364 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14061165 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117903838 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110166935 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086215506 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.139919503 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101680248 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081095462 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121487069 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116145169 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100536795 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088265738 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108361436 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08175908 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103320972 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099389249 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086825318 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100559675 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105299567 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089609065 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116625083 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.114618435 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.085474016 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101107841 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100279699 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087276232 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114824852 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.105349291 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.08778533 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107306994 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117435794 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.083643594 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10155867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.103257886 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099095626 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.102104785 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104171895 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080269694 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103252127 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086431299 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108408578 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.118183421 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10190542 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088514336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103315611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.080143544 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114801737 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103856593 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.091059931 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117097037 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105597816 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.082777757 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107179123 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.115620002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100887021 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081693259 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104641777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.094110917 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099373215 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104944667 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.097021253 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104061073 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109079136 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116104662 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.088407498 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105416247 seconds)
  done (took 7.92499802 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092110523 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108506296 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117277232 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11702139 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089552708 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.108054909 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107309449 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088861938 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107956904 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113872516 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107748376 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111274136 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104090632 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110328416 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107949669 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090035484 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107974023 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108438142 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089615184 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107876655 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10833777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116956361 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089933543 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.117044583 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139335191 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102720058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09030513 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108101315 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117662523 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088855631 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120527972 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10793542 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109213606 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115782453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.101412667 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108792358 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101765629 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089507561 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109141392 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107193306 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085213673 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118718094 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107997719 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084504428 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107932094 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108120556 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117571598 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.101176447 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112498768 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112975039 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108049055 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116775123 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089139853 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107943557 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117618829 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143553771 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116653074 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098870238 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109090261 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117254403 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117648004 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125380169 seconds)
  done (took 7.494922191 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104654628 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.112456878 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.113917528 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078926968 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101784325 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105989815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082103177 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100236988 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092112546 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112526938 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112834424 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104856757 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090297185 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113596527 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106468395 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108568709 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087268595 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10627944 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110804182 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087124626 seconds)
  done (took 2.858393381 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092210475 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120179431 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084388769 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109528585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.104834781 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08990807 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105465069 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085542133 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103752734 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105224448 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094652337 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113925282 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102645647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089356074 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113440393 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107780055 seconds)
  done (took 2.453696729 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095107127 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11440395 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.116645354 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08346638 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101743607 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079285216 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103415468 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.098683649 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080059717 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118689218 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08319484 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106402176 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102034444 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081355768 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099236984 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086250259 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099405137 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080761652 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103147467 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.116623364 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094375443 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101303247 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083784668 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104960721 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102993479 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089339017 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.103087217 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080598901 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.101551865 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.10261869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.08419665 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.110189803 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.079994494 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102051279 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.08176624 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.100454156 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102448958 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085328131 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.1052641 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083400071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102487022 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.082614791 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103082811 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103535476 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080044059 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103382448 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079354976 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109364617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080825288 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103881308 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102080705 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085949472 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.103676017 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.09340492 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.106625139 seconds)
  done (took 6.119701453 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096999376 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106080861 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079270017 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100805909 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.085783661 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105074347 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086586514 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104642876 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104321842 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082154784 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104651806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086210069 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105274694 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087073878 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104333976 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105499363 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079702651 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104455832 seconds)
  done (took 2.564302813 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089216444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102297204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090503987 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.103015973 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083291951 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105778412 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079248575 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101178393 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082393584 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103848981 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103241164 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087004398 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101025387 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085936544 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102689323 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082802563 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106162884 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081491736 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103910361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079165168 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107352171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101154681 seconds)
  done (took 2.917505499 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.089565892 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.130329517 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.184558105 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.12598801 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.099800122 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.117363174 seconds)
  done (took 1.582327633 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107780502 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119018839 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104799078 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105480526 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112096306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084882808 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106146784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105401227 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114283752 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099034669 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104883671 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115548451 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114258729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093914313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111782911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111424271 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085093839 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105470655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103482992 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124595595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086023545 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11423217 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105292566 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085882139 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107619363 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114333194 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094894385 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119369561 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105166664 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11331225 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091487367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106294905 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115489451 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118006681 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088275046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114435093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104725818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123741095 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092682934 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114864325 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106679574 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092602729 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114948088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110760808 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113722111 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08599605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111404138 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105743144 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0862303 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131363306 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111146209 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112961547 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091438147 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115347343 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114467339 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131648514 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119650288 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113979389 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092311666 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120076757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114250361 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111753321 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114336417 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099661548 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112521324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11416934 seconds)
  done (took 7.93453142 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099232966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124032995 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105835576 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09984162 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115266778 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105069829 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105264095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086315615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105718728 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085029367 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148095323 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106152771 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114635638 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114487975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08594507 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106422337 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10480957 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093928573 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105040491 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132229238 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107145952 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11402856 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094838454 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114323289 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11834122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113168539 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087453728 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107841309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106379575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086543429 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11034 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105636173 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09455183 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105649897 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114848271 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105054196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086619815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110748201 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10576913 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092659546 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114410365 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124544782 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106404217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085355158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119973854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105784306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086121736 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105772608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105667033 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085625147 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119651854 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120351875 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119477104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114519712 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086369587 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106792874 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105003772 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086887634 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106578537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11280968 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095326611 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106114347 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130501255 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106691502 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086606236 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115048131 seconds)
  done (took 7.828385774 seconds)
done (took 152.924755387 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.216246738 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197366698 seconds)
  done (took 1.254091463 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.085984782 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.133262236 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09538988 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166869671 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084268867 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137165083 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.135960488 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097018737 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104452582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084912398 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104757371 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086536181 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169605058 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084092581 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104685092 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085504607 seconds)
  done (took 2.60781258 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11225151 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.23692018 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11957753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.081801994 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.108231666 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.106640994 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08200766 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.108744448 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088707654 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.103134414 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087001824 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.103998514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08322296 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104367263 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087392973 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106775059 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083698363 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.106318477 seconds)
  done (took 2.763190833 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111658275 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142465004 seconds)
  done (took 1.104228958 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241383952 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.158980329 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.223273978 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.468638399 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.268579994 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35281395 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.194228022 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.202365779 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15883034 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.188523368 seconds)
  done (took 3.303941461 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116604074 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178617573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311147793 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.15201407 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104889882 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124273512 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153122397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127840927 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.119789382 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098392467 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.119933613 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116130462 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.134179 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092943566 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112504106 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.094639753 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139099155 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.111339383 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092512522 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11530403 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.135245733 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083219192 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113291888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111367491 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.09541223 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117091614 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083852686 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.103491432 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112292929 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09242169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.111095422 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122241949 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095844377 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.167705694 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100476212 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169233268 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095478091 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.109519459 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.09282781 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.109898754 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115579985 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.095040657 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.122319433 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115021493 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083338836 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115222554 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.083487643 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103355179 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111841495 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09549707 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112172378 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.111555206 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148802232 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.095518552 seconds)
  done (took 7.196715595 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.773033227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152645451 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088914679 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.861764279 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111116346 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123688495 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.764076853 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115361059 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250436772 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.744526373 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132308867 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095868101 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223211287 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.231296447 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.995040071 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307535216 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.631275666 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127930802 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1285311 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154067666 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117559645 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133973592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127569611 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.424887718 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.092172153 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109433329 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115486699 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094751659 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155053966 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122255744 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111689819 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171964448 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245125687 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198865937 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112962878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087131917 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109147381 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.164321573 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262274197 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.187013828 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.174910489 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105514621 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10803869 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097934183 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129405523 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10516312 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159138226 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17188633 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165029715 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112258425 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116844176 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096191449 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118208316 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158728287 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.11880602 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315802072 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304322143 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087816018 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119490274 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123764547 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235065053 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120866599 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.217701224 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135986182 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.184664415 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108937418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789856704 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.162875201 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087372935 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114775328 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.1175114 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092303366 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11921122 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163332039 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387666947 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121872527 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091583372 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10922207 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210067564 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.123012881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108016873 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157426145 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112527603 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.097498013 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122041766 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119353352 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165059731 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.22386869 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120631314 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117005634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093908128 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121884914 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.111940138 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207962998 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.210411194 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157396695 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206044428 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121692537 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159159901 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163500619 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117183702 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166177391 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117985864 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11999678 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097514037 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.211050909 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.141493802 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.120736542 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091288267 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115363831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.143835879 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123658074 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114673525 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166816269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.448873227 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.183688441 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.085017626 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125310275 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095887411 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178897484 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093309764 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254885593 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119313381 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165116099 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116741691 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.085594713 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117643191 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.157600218 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11930166 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1182243 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099398098 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116626818 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.230010505 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.210699062 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118273191 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215957489 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179997112 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115226757 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167487216 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118225748 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163220653 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11671876 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097522213 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112518752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783299682 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099300134 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117479382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111929575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182995124 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088963402 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.120982103 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.120908026 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.085726164 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764805999 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123302275 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09771008 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.120168249 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113786989 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096262235 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115403589 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112329479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157177125 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221100685 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095465209 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117222232 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.121755452 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159027803 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117166355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105898967 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12876573 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.129647795 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103242837 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118327069 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128729188 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171140604 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166206815 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221693158 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.592276051 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093959599 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128448283 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229000322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094140095 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28969018 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121778239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.221390685 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157995138 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.117980636 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.278364142 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.179482444 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.183656932 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103276978 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189488287 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085656771 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117345065 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164183783 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113882528 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096414618 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184478651 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105179516 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121800363 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95283332 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088275003 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239302674 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.085278564 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.16556137 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11283474 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117020032 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.266998528 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109307544 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124794901 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159867399 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112352548 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099955262 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.707582668 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121488638 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098439816 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114582353 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.216518338 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158314768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116331059 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094958635 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116633657 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.156180756 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.223802998 seconds)
  done (took 43.126647995 seconds)
done (took 62.202602865 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.270857004 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212305607 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.262090343 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166669089 seconds)
  done (took 1.857682151 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.166803794 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.146147054 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11970609 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108019622 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154301546 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088174352 seconds)
  done (took 1.659581645 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.352583683 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270016731 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238782486 seconds)
  done (took 1.740943145 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.285554108 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241188085 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464747531 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.315923214 seconds)
  done (took 2.30131285 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204322729 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.130976461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.108094365 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.101809159 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.191328737 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.238229942 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.138448397 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197233155 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097600461 seconds)
  done (took 2.328471835 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192496128 seconds)
done (took 10.959997603 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.132772538 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.244508289 seconds)
    (3/309) benchmarking ("sort", Int8, false)...
    done (took 0.199091546 seconds)
    (4/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.267311792 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.12004659 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.266787456 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126679749 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099755842 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.149859901 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.196190291 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.234391002 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.116418788 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094951967 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.127142827 seconds)
    (15/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.212577548 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.098597636 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.170630659 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.182395857 seconds)
    (19/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.182312118 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.143045578 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.144322378 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090575434 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.232047046 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.119066589 seconds)
    (25/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.076059072 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.242390157 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093778056 seconds)
    (28/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.133607107 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.200733063 seconds)
    (30/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.164925977 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196637831 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130806503 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.139780768 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.222117832 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094453567 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118900979 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.139871654 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.222264466 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163031902 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198471367 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090611045 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11975417 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.071325927 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112988685 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.127150002 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097018622 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122121377 seconds)
    (48/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.153195206 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.113292442 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131928606 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124989928 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.220644924 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.162359669 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.182262541 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.182847374 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11339201 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115755181 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114772311 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091506754 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.189475984 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.124289752 seconds)
    (62/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.09552733 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.070185044 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134315544 seconds)
    (65/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.177264163 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.127895183 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071388216 seconds)
    (68/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.236693539 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.142275122 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124484877 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 0.152183369 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.093957855 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.170443603 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.18187923 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.157013879 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.174144605 seconds)
    (77/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106708791 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119848601 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.21809597 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099773567 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113688725 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220076521 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.090192746 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11882445 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.17181733 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124548784 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.216714072 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.222671361 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.136471156 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076411925 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.090765588 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.093916675 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.117286979 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158782898 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070768133 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192607982 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121778826 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.143039624 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.136625483 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.144935886 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099738468 seconds)
    (102/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.193515998 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.157295973 seconds)
    (104/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.071252166 seconds)
    (105/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.146676867 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090180483 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.187398269 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094596741 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.135039208 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125086899 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.098925921 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112952673 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.220269191 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099101652 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071785743 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.195801302 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.141670257 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12923965 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.121613542 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141762147 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116450504 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139883908 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.195363948 seconds)
    (124/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.071675319 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.41689337 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068058375 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.145130591 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.137565086 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070824067 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.12021745 seconds)
    (131/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.121140624 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.07157075 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.183257768 seconds)
    (134/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118662292 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.18535548 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098461091 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114880991 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08982327 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123277161 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.134815006 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121695957 seconds)
    (142/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.224003278 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.098687394 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.169618148 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 0.22416193 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119782122 seconds)
    (147/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097862638 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.123291695 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07098936 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.144141096 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.120721711 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.13482127 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.121155848 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.129529557 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156922823 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117633924 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095863836 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183144026 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.184033682 seconds)
    (160/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097071723 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.114143316 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070506556 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121374521 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.0889754 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094953503 seconds)
    (166/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.086276472 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.125009403 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.090101682 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113105169 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.159538592 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121740386 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070833445 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.183880841 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.072991276 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105792226 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090256551 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.09538237 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090539931 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.130279401 seconds)
    (180/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.088924533 seconds)
    (181/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.082010832 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.217475279 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127891314 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.118263641 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093228891 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218584639 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.097164595 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094144523 seconds)
    (189/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.140640879 seconds)
    (190/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.099902019 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114005762 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175676683 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.154344846 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.142591988 seconds)
    (195/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103817874 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095025091 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089256302 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114269497 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.15714872 seconds)
    (200/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.094226375 seconds)
    (201/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.140533032 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120692247 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116845353 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.071933727 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.136703149 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101439136 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178293378 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.084945042 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.116358552 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.131472568 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.091340356 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088104786 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.130814846 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.088584769 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.083586076 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109110726 seconds)
    (217/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075071784 seconds)
    (218/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.071200315 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137923242 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.118066289 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.100738479 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072655468 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.184243486 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222359604 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109886944 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087004419 seconds)
    (227/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.115414856 seconds)
    (228/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.125187174 seconds)
    (229/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11361832 seconds)
    (230/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.071927487 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122366594 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099072044 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.141642278 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070567826 seconds)
    (235/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.096806046 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094837374 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.146287524 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072850784 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.071226526 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120155232 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.081336875 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122048197 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.088985474 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.096035988 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.080334632 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072244502 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114045316 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08968936 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.192214263 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140288135 seconds)
    (251/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.119797676 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.116022151 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070739733 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.148121197 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089952853 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114879956 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099022803 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.158737912 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.071036108 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.228424118 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.114608939 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.094077376 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.193681205 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113945747 seconds)
    (265/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.081950623 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072747954 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.1363738 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097262729 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121271735 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099090016 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.095773041 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119359572 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.095455858 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073060903 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.116301817 seconds)
    (276/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092096073 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.114419107 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070904449 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071355637 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.117842908 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.08989573 seconds)
    (282/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132473156 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.071247138 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.095382751 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072580413 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.115638133 seconds)
    (287/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.091443912 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.095158564 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098851929 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112634515 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.095755395 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.138700684 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08946737 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 0.176807844 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12293268 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072850203 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.080138698 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.1182303 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071716762 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07208852 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.120074858 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091037334 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.095743184 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.0968206 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.177366557 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071162404 seconds)
    (307/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10614388 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11787927 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11525811 seconds)
  done (took 40.718220811 seconds)
done (took 41.596944038 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097439979 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133437892 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094962966 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.133117266 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.12119903 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09086631 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.115818637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096516206 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122527765 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123706525 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095856973 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069794789 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116299868 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119702037 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096480534 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.137954532 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123209875 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09253258 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116967232 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.083608509 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118617974 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08429086 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112615986 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07243538 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.126205571 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.098447633 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120469128 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.100865093 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.115239255 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09087883 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.118229756 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098235503 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114607736 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.104013583 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.121525997 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.122919825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100922463 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.124607862 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093128418 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.115975205 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.099295973 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.115310771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097934971 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.122824242 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097230465 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.120988272 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099623595 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127412641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140506255 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09345024 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.122578107 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102417203 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.124222147 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097633221 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114118382 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.116077517 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091082022 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135745628 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094064445 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114635961 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.09488772 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120758129 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.091000697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11568774 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117041888 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095695379 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119341691 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.090659776 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119784049 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091131226 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108324121 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.093257006 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.11255516 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.107017444 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095213202 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.118448253 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084437754 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.114535874 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09257267 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11510369 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085029156 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11277051 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088077054 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116560338 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092207481 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.099559323 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.095889769 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.12092498 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090982561 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.122750914 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.097528226 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.122619419 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093319818 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127857813 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.090592796 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.120587744 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091322596 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.11552905 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093292628 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11946687 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.090660548 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116629793 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.100015907 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115214865 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095068253 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126194078 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.107950749 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09227813 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109410572 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085385417 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.127896769 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100327992 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.116169206 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094157818 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.114258521 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09888725 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114907859 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091309979 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.114628722 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091561275 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121831639 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.091920946 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116263734 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.098754922 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128365579 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.114971589 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095711306 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117372878 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089739718 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.119368045 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089150404 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.114758235 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.092934763 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083374321 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111532569 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086016118 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.1169346 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109834256 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094185465 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110276943 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094004573 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.114122621 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.091870511 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114887869 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084375251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097365857 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088738029 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110642644 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087188934 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.108772307 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088101821 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108801585 seconds)
done (took 17.092405033 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086359732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182505353 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.148033846 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.138214972 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106461476 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.109406979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121411987 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117297336 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11086175 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.139206993 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.108488583 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.129207977 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.144796852 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085055775 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.109952027 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.089380425 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11001929 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100489771 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.142369684 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130528311 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159960392 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.084773142 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144243528 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.133585955 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095108849 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13561857 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.109532184 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090546264 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112925921 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102292174 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131744399 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.088891261 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112094219 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13032346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102801029 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11839586 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.085394219 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.1164697 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085715049 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.109187169 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136162877 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107707621 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114592827 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090936898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112706396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.088338852 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.111493423 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119930214 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097660056 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115419589 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100791144 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.152048677 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112926476 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.119038618 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.085677096 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.120198132 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.095577722 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.112556453 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.086515645 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.112869177 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.085867007 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116007698 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123214113 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114601075 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.115388428 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120120948 seconds)
  done (took 8.463440956 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102358397 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136666724 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103810277 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.128116129 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109339928 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087407031 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.110005103 seconds)
  done (took 1.722484351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087020192 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131170302 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109961224 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133869665 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130847068 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10704834 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121152531 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.086584176 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.145923794 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089618672 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132403771 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151529604 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.0881426 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.118974216 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.134754167 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086726033 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13609326 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086434613 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115080273 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110148999 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117960296 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.133281598 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089301064 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111789035 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102528684 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.118503698 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164170304 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098703947 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118316486 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.094000212 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115032186 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168746771 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103825562 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128495845 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088119244 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130692372 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127827523 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085934718 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133177007 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094879129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130443583 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088697262 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11655646 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085338789 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116198171 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098029627 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113059391 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088493862 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11394028 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131029469 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.087949452 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128085343 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08808441 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11888952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089047076 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119890843 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097256548 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.112715221 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.106957425 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113869331 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.128047071 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103440108 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.124951495 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.103393932 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.114005447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125058574 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102021804 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114182569 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091233044 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115497562 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104457686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111483435 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.088314657 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.121902859 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091677893 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139023847 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.135770023 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088948693 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.122062882 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087665717 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114024475 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089321693 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.140428281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117604441 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088109051 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118994284 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090993153 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111456936 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088030769 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.120378974 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086460321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115588212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090224932 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113500987 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091155161 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129391249 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089282802 seconds)
  done (took 11.732157715 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088391979 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.112325526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090421655 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.112037161 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090083663 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116727627 seconds)
  done (took 1.570832809 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112030792 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115403419 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104459737 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11833276 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156300869 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104491346 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129588646 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122820602 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.105929751 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126948998 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128124464 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10329346 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135226983 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118638214 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102490567 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118488134 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102738772 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125582636 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124864248 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095325676 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.134311571 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.117955412 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095477787 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.130610296 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091027986 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119237918 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122647184 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101112365 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125072995 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.096512107 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118703024 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115332932 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094643106 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120916478 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.127095538 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094663068 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118513247 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.091827015 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123517939 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.115670015 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.102943812 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119889857 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.099948152 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117832511 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.120978796 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095188664 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117252934 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122030424 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102057191 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.116862255 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092182964 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118582085 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.090817364 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.117591454 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.118590593 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096186457 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.116720597 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127898325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095373034 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.119548627 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091245998 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116242633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119923449 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091496276 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127381292 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.092763834 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119128316 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119333786 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095154816 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118184363 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.092755108 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117342612 seconds)
  done (took 9.07555465 seconds)
done (took 33.503721666 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668346607 seconds)
  done (took 1.622974231 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.709341918 seconds)
  done (took 1.665530829 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.452824208 seconds)
  done (took 16.410453806 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.483155936 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.560722429 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.796427649 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17731898 seconds)
  done (took 2.973417258 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.912115383 seconds)
  done (took 1.886323019 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238971292 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227226378 seconds)
  done (took 1.42688929 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.751253013 seconds)
  done (took 1.719473836 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.340919577 seconds)
  done (took 2.301722563 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.323276871 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18099666 seconds)
  done (took 1.474411393 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.542797459 seconds)
  done (took 1.51202124 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.770826135 seconds)
  done (took 7.746584175 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254269824 seconds)
  done (took 1.236209877 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293881378 seconds)
  done (took 1.263994613 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.212419581 seconds)
  done (took 4.184918374 seconds)
done (took 48.38931475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096768472 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12454405 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.099572756 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.120612482 seconds)
  done (took 1.408640799 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099520942 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117975991 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098406498 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120230597 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099225778 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118492777 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.120071479 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.098607014 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117452125 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095495146 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118944409 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093480203 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119964509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119754263 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092294395 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120246305 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098010965 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.119164184 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120499067 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095067627 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115675789 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09596716 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121271305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092629113 seconds)
  done (took 3.583782279 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098178971 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116062715 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095035665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115464415 seconds)
  done (took 1.406174375 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.097564439 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.138689598 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.136880758 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101917585 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145202698 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.134549447 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092465153 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117958136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092916637 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.122078869 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089754467 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.145529933 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.133616545 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.097673319 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124757253 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086452346 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114482725 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132375544 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.09830894 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123433044 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091390892 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121494991 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087908784 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136764778 seconds)
  done (took 3.740334244 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.101313073 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.146828687 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103061968 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.135127243 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138598223 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.085872682 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.124502757 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137184292 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148728304 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.112085984 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092025459 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.110946222 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.117299262 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.087096326 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.123807959 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130917754 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.159356236 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.113881317 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117313534 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.111393464 seconds)
  done (took 3.380395425 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096012306 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114269085 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086751243 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113971958 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09767524 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.117989056 seconds)
  done (took 1.60968039 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.088606657 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112265432 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088412332 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11072386 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092543228 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.111866559 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087083314 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111826011 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.087420144 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11215316 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.08753396 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110092091 seconds)
  done (took 2.182607055 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.479768311 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114439356 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.092928054 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108887348 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.119124987 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08787374 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.126385356 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090891143 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.138586547 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087446188 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.112587516 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089043833 seconds)
  done (took 2.63023895 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230596774 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122532198 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285255938 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186450033 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154683562 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167069139 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147850501 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163711994 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195780818 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160677159 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230298257 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192809503 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148188125 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185435712 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135792259 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.141591079 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193328613 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238696452 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151951578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200044791 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218759285 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160589391 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17344754 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122690681 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134171544 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165368327 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117891042 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128506923 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202036842 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172685037 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208300321 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160251127 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143653356 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205957776 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241737397 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216138667 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18377369 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131703049 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.140577924 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160950902 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261341223 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142356538 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21000981 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160307532 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131023655 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187301851 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162674917 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.193660334 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.144496374 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110009433 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218538101 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210097458 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.213028077 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109995998 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156255903 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156012461 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.162382221 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148293242 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245055264 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193538878 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198650808 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092267407 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143512718 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186858777 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177307308 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.185344414 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.177192647 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141364834 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187159332 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182353675 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159287722 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211589647 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178431523 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135476502 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167197315 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169821789 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166709027 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251367324 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172700683 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118702637 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16353789 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145263811 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102391257 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189824477 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121709711 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211092835 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146272754 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.132090402 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158838061 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130407245 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155991791 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218247124 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186729499 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143887857 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.107069534 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12748305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151383241 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207584241 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109865488 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154797351 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157224118 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126550516 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171975214 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.120782972 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17252958 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.089330968 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196422902 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17934088 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.097705998 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154755669 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149272996 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.145616682 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171994155 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195574435 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13667439 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131112178 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20268585 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171022622 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.145783782 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174578815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222133606 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.115251258 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144295889 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221088182 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235858765 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111721073 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222173161 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151709947 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105793756 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13098335 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174344823 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151778312 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15680324 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128675046 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.175895877 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204020299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122365288 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13431663 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183656938 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128562846 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102766228 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156892091 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143442363 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.135801253 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142650449 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.146836891 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176761066 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17411954 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1490683 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161890851 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147302268 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242537243 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136563149 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.120323514 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143297456 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117131014 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.187517848 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1908807 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127571714 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221824513 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166845237 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150966146 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165461257 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10578809 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171791499 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127912444 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.091221396 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214879116 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161494118 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1578732 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191192744 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152966196 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.176343165 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20038188 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167831742 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169467034 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159018692 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155583046 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.109261621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155948101 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160912082 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119934724 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.138297772 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.104618275 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151941369 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138499754 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130690132 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192955693 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163231601 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144573761 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155417648 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145624617 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175466673 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12608206 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172468528 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.171502939 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143184446 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.192751319 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211394194 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181916916 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138632959 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201024898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117394305 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096351463 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.138650282 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165227798 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131004317 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131114807 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161013054 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175686174 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17848186 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170804272 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16014064 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169466319 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187468403 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118203313 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.163790744 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180997678 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170894815 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.178772751 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136859947 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.121005849 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171634789 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149492088 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248619351 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161940994 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172629063 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228462116 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145655862 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10318779 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147144251 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204731051 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149671209 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170447861 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118050675 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136833793 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155684774 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.129614201 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156210306 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177157701 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158245168 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209683219 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121075069 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206360624 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097900462 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184401276 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128701676 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159085469 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105746518 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169766681 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219926302 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117598853 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189524279 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186790023 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126480903 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.148064879 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231704383 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186687377 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133687457 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154316483 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155647928 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159770207 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167080117 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174158919 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155867851 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182859411 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155198636 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.132818464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135153783 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120504508 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148141384 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.129470311 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143877142 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.170437004 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13473539 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182126445 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155919478 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154176572 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165342566 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147031839 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114379259 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147751953 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235268673 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170320232 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204292276 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.145398963 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.173357334 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225298767 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095547893 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128284508 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129724404 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173407057 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106340936 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209617568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.143864572 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126486894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200277773 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186722711 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13449043 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091658414 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152973641 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16809636 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161184841 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147191122 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153525245 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198517902 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140988546 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127727842 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165427595 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126198753 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14292263 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214755392 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079396994 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145074368 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098059472 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130977184 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160369173 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198180086 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131648296 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177722166 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166436862 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162809897 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160189296 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144794875 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144711583 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160366807 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195464072 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177885669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.128714201 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153151622 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170950806 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188142643 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156159296 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.136332265 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196993029 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213396088 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.191443929 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.138351729 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162802547 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162102567 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152264785 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180215376 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131778191 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198480733 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132033744 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214661758 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148612677 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138110455 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169075289 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.118354697 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13801892 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180563798 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192906933 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10628057 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129548907 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163088761 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170269572 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151133517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.123949902 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175334516 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120346913 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187380656 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251782326 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104042235 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150129761 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142879578 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132383758 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152778982 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153390616 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135086172 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.134669246 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222438005 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.105205442 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209722427 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195940566 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162793051 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193717835 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113839532 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.68748891 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1270867 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187117538 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150217179 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223967234 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120277882 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192301385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126781283 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163049135 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215351814 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154750715 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227599961 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186617123 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.169479736 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127834258 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154201066 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156026528 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.139598071 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147699688 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162256235 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155135304 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.147342404 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172369624 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164719364 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.129650346 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110230001 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215596833 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149340257 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180853743 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173871757 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108254922 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192067846 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180564186 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128382103 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175586038 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22547971 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112924809 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146225143 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.129765143 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.150847292 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248645197 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09565743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217798428 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170263334 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152978225 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160302212 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.142340054 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185288464 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153016008 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171710334 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142758526 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.155551264 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152140981 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132968717 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100039907 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151390189 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16173769 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.144179712 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154048731 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13666115 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206615959 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09441307 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140391357 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152248067 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182831218 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2354604 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10652769 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133183847 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156787495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146714067 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.168945474 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170792018 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131605401 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130252567 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.105625276 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.151796275 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110266777 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150056175 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151396663 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15857804 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196630813 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132497314 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275842569 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135030846 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147631606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.088558989 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126599158 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143892445 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115814039 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151308577 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145090739 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248855596 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14008769 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10394672 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14218626 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120902071 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10656162 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160640138 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157821248 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168307303 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140054002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104294304 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152632369 seconds)
  done (took 78.304955675 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165515485 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.12805023 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.142132843 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.197740604 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172218916 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262508475 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208314332 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248095134 seconds)
  done (took 2.584723495 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.091921836 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.140935782 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153068241 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.128870685 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090019203 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11415475 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321705851 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.12732206 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.089515319 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.135810253 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.140946673 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11313123 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.495038384 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089136637 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.116168753 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.105138099 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113190881 seconds)
  done (took 3.620979151 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.449259681 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.645852709 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.46798852 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.120663106 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.794230084 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.131402149 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.223346924 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198255969 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093100393 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44374868 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.764997155 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.152991139 seconds)
  done (took 17.545730124 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.096725391 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.117090291 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106209954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.130825507 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094101873 seconds)
  done (took 1.611903801 seconds)
done (took 124.578117007 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.102645027 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377630361 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071724286 seconds)
  done (took 1.545294384 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105218284 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.132112762 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.106538499 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.131029777 seconds)
  done (took 1.545841578 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096002406 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122298151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107443584 seconds)
  done (took 1.391163076 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.312414931 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.183556752 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.137755767 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103981755 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125378288 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.100553194 seconds)
  done (took 1.395975261 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094638062 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122964248 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096528714 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125966094 seconds)
  done (took 1.50964192 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.092966607 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07034354 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097388182 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.073448321 seconds)
  done (took 1.398800077 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111723667 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127449029 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101592037 seconds)
  done (took 1.410807193 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.12678546 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.135002988 seconds)
  done (took 1.332709756 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.102963798 seconds)
  done (took 1.168362409 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.115180634 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.164089101 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.186209057 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.158723071 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.218899382 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160009801 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.10926436 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.137993281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.12956865 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.139316832 seconds)
  done (took 2.591078243 seconds)
done (took 17.093028442 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100790379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.407868949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383830705 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140330869 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716199293 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.378345872 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.017037147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141977053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161644648 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.091739507 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135140919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66982264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.008418492 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.367051059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97086587 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.457347182 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67503232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117793152 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089697369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118123971 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.002060093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090679518 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117490907 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090329812 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698369002 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.395640777 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119182224 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.462927925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090847556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122552052 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382623999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119523417 seconds)
  done (took 16.901477892 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093226747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168286372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096524081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133061746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119488297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09218677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120580005 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092367319 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174367252 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119635285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109265027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117544151 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121537639 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093654895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13806688 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.090436549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120949667 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090622702 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118328089 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092212616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13654571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116304068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092167457 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117784009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092045254 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131468955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.092386171 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118154424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091286731 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123847055 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124199196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093458388 seconds)
  done (took 4.70103027 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13827073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17763569 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125211905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124597595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.164446839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.120430054 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194441392 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.115898571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177299584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.119531154 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135563595 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.091864331 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152574162 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.092683785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139256616 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11771957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096039731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118113404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091363784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120197269 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.109852313 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117605992 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.119364344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092311464 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118546558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106319846 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.120660701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091499129 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117998385 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123255057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09963412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119690982 seconds)
  done (took 5.027587887 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09594965 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12465063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.10725889 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134277895 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095985301 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122372813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.095520654 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121385144 seconds)
  done (took 1.971478139 seconds)
done (took 29.669735363 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.101419025 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.118619576 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.096302334 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130939329 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.095637428 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.128368243 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.089681038 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.124431803 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.097354398 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.123323484 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.098688593 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116825147 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121154221 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090838576 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12459146 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091340611 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.128164582 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.094163026 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.128488751 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101255964 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.120176908 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.097707135 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123759102 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.12761501 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.101524855 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.128227572 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.102530308 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124698051 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092089586 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119943336 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.093593659 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.128210131 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.091539763 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.128498887 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.091226322 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.117899567 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.117075246 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09092679 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.128063731 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098692714 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120262936 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.097519274 seconds)
  done (took 5.71222234 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.104940418 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13578665 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.102881136 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081795803 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.113117729 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.0796758 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.133376926 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078404239 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.107181858 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106060206 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073815419 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.103118818 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077539268 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.071757852 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.102649218 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073730111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.105255101 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074049873 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07563721 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.102823084 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078943373 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071725823 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.105253878 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077618442 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074145536 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.108997009 seconds)
  done (took 3.505401294 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098126397 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131195812 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.109957225 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179043611 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15606617 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098045819 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.129263182 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109186456 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.13445129 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11612048 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094369117 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.145572085 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109255715 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124848038 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090035783 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133486164 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.104875578 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119245696 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123584706 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111600758 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134615137 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.100516113 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139165326 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.102409608 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117313493 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09223428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121300139 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.130209919 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.095647712 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127411031 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.094458312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.1209936 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.09183228 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.128976954 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12092092 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.092716447 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136257219 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100673256 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126537596 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.0904636 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121971582 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090539066 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138822568 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161084146 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090264979 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12477076 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.097282991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127316383 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.090444138 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135975389 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126828633 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089959113 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.120412701 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090292196 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.117544613 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105403039 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120299652 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093313268 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126930902 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093909857 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.130677039 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.094407156 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134126487 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.092828478 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125365341 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.116700516 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091337129 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116492466 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112806529 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118687202 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158791551 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093080508 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119072705 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.099869499 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125560542 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096347816 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119726176 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104980855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127678245 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094452206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126229706 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120702791 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094057186 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135163736 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093533178 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118729582 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092243394 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124012542 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093706043 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.118651796 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103961656 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118501619 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.093198953 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.135404084 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117584481 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09247633 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124601443 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.096849389 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117333214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.103787796 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124022249 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.092219888 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.1276773 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091253502 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120765316 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.127700089 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.096471536 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117131981 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.096682865 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124216509 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.091525863 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.119217587 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093673652 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120311403 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.100895567 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.12495214 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.095519438 seconds)
  done (took 14.390181721 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.220146818 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.211888709 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.093702753 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.230065185 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.102697073 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.129771663 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.207619946 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.150265349 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.091930256 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.119724777 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.092329244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.156980349 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.151870942 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.133759126 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.128322556 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118913997 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118828714 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.157468943 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.208134281 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.2016374 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.139148372 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099134524 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.121195606 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.091956475 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.121143748 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.126865199 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.107797679 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129101668 seconds)
  done (took 5.065485193 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.104861235 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151119218 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096404238 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.139131884 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144098207 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090965782 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12420547 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093016985 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13109111 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130429194 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.0904729 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124779811 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098065535 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.127520207 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.091190869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.126811639 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128385056 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09326505 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122191952 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.095912999 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.125829131 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10023044 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123492921 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091196955 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.126719722 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091380048 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.111538381 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137975744 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091559107 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140418006 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.089576264 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.125235083 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.12886426 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092521893 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118577238 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093652589 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121757099 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094092518 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120348994 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.089710339 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.11752831 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076483064 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118115244 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104702975 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124490446 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078369822 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12561628 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.096683977 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124029148 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.088115958 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.121766534 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093346662 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.121670738 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098465585 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123652053 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.096030997 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.12123855 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.084072686 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.125289514 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.093565284 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110266339 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089556367 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123659292 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.086143133 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.126981338 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095521472 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117400186 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.09340882 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.122920861 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.124691323 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.093569163 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12117963 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089828534 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121199739 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096388645 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.123023217 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094975803 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117760636 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090995426 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119948604 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074658549 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118209875 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073760817 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094435682 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116928981 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.090172291 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121374559 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124410314 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105503463 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.120374983 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097935685 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119922116 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.090653132 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121751683 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.081975019 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.122292572 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105946801 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136109765 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.118931929 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.089547695 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.134574973 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.096200953 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118452304 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075323626 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.126111505 seconds)
  done (took 12.591682405 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.114156845 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.143973612 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093242406 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132873646 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.144824181 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.113882248 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126418946 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.098058639 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.12100483 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.107925464 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.119989248 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099454788 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.122950153 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.100185774 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.141215093 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126908716 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09356178 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.127570034 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10012036 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.154125168 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.104920007 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.133247301 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129091128 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.092482461 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.122994718 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.104006623 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.145562316 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102339953 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.12819398 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.106039412 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.129908988 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.145109309 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.107695384 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123850025 seconds)
  done (took 5.165468684 seconds)
done (took 47.508422303 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.195077306 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.38253903 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.170724503 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.989563617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.17967977 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.189542493 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201819046 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.176777307 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.350111423 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.171717579 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.435525672 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.684902334 seconds)
done (took 59.233310282 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.20891008 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.307776759 seconds)
    (2/2) benchmarking "String"...
    done (took 1.438871704 seconds)
  done (took 3.848503795 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.508478103 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.134253034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459583471 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.170740182 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.172595914 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.631804701 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.671500841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.425303562 seconds)
  done (took 27.767007599 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.172758989 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.516511465 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.40960418 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.403122404 seconds)
  done (took 17.603422534 seconds)
done (took 59.039811083 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.179367213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.201566099 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.185961604 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.152340009 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.293035432 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.197416727 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.53718353 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.421062367 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.183471104 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.158140048 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.195002397 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.174001002 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.193135285 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.513426299 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.188153948 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.174293871 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.208703116 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.658555911 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.535680793 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.187631049 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.190327992 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.227631228 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.181125834 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.188875306 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.191335689 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.175735334 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.188514523 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.196168508 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.162756047 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.184881472 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.263033832 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.740619697 seconds)
  done (took 190.532113095 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.174909404 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.259571144 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.33070282 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.210045125 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.653524921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375923943 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.311630224 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.706709059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.194247431 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198291906 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.442105992 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.179949313 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.503288908 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161829993 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.183912765 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.278440707 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.506902559 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.493053828 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.196965306 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.44572238 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.199367142 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.490944907 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.575358996 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.38602048 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.196161351 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.28415534 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.226935784 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.208868109 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.358696065 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.455194336 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.20394767 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.232385334 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.714005591 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.038179915 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201347211 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.189401725 seconds)
  done (took 149.871907966 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.430371952 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.176686218 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.176612918 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176773869 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.204640745 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.176743306 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.66340453 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.662583892 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.669607094 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.610547695 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.17960764 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.23566449 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.382458223 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.181519244 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.266160414 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.189338109 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.178611298 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.193124645 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.218987948 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.17815969 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178874713 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.662898322 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.193394509 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.370732995 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184021448 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.17775006 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.205291631 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.564798468 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178333939 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205071508 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.301191662 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.489435661 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.220034172 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.177973747 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.177693298 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.436326669 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286987493 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.181540106 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.205135561 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.178705415 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.439575401 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.17905822 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.178548732 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.181654757 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.718945661 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.184106009 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.665846833 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180451999 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.041178727 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.183989565 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178776056 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.42756054 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.564840281 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.197326907 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.178097435 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.182632137 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.180054335 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.180772619 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.208400304 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.43110431 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.278062138 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.194117956 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.183300226 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208732716 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.180012442 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.358706878 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197087005 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.175120296 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.239107008 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.400727753 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.667011433 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.184229743 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.271245509 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296003067 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.179868986 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.180110297 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.179785649 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.179667641 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180670092 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.284012975 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.180817838 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.547411269 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186134442 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.18243419 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.238427862 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.180560279 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.272323751 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.180976647 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.425375403 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.18632411 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.181418652 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.866683651 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.275838812 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.181889509 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.180746963 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.181503789 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.549545544 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.669174139 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.327078696 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.185967986 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.464077441 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.185132792 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.566093622 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.661243326 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.722239453 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.18633392 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2862536 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.186374955 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.184071378 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.182910298 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21074921 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.196316853 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.241006211 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.182388054 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.575919975 seconds)
  done (took 341.322326715 seconds)
done (took 684.261650271 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.863933292 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.814810139 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.947982822 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.826056856 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.812358891 seconds)
  done (took 10.376278842 seconds)
done (took 11.489125184 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.352780273 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.353447797 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237207595 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.356212448 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.210512263 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.369832582 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.33212099 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.20580241 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.278565191 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.255776556 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.278071126 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.231832737 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.208801697 seconds)
  done (took 17.783234359 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477163444 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.472317495 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.248427973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483842675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224457432 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.490956454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.375212894 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.390379902 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385638334 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215468042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198760728 seconds)
  done (took 16.07613439 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489730878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476395986 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.249375681 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49643374 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.226250968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.481840873 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.381040869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389233904 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389408728 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.216301026 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.198599907 seconds)
  done (took 16.107415408 seconds)
done (took 51.079607565 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.194134574 seconds)
  done (took 2.307071386 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22568495 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.38622184 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.20694156 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.198914806 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.194303442 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.195232551 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.198743564 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.19539799 seconds)
  done (took 10.916574679 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.194085625 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.192161415 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.190532786 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.191454528 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.191861403 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.194751587 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.19419111 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.193931459 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.194249615 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.192584783 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.194447047 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.192154946 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.191752378 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.19433507 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.192549711 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.194617506 seconds)
  done (took 20.203891459 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.194643452 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.191558859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.192943001 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.191068197 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.190734211 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.191790082 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.192569506 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.191760009 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.190567942 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.187117085 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.184672848 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.183352663 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.184936361 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.18501119 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.184246501 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.183882878 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.183709558 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.18205044 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.179741515 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.175024975 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.175917094 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.175270014 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.175990146 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.176489563 seconds)
  done (took 29.56297926 seconds)
done (took 64.106753545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.045826159 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.651718241 seconds)
  done (took 8.798158127 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.171516303 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.169785686 seconds)
  done (took 3.435298195 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.168499009 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.168202098 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.167788142 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.168742059 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.169110456 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.167341548 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.168402349 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.164426835 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.165391101 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.164832693 seconds)
  done (took 12.761584856 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.164325073 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.165402953 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.163056791 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.165596639 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.166005438 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.162332417 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.163223658 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.1628959 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.163545387 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.162112004 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.164075201 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.163342858 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.16479543 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.159924181 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.162530766 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.160031087 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.159228304 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.15952597 seconds)
  done (took 22.020100112 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.161812475 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.161976096 seconds)
  done (took 3.408346349 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.158176847 seconds)
    (2/7) benchmarking "second"...
    done (took 1.159386408 seconds)
    (3/7) benchmarking "month"...
    done (took 1.159481265 seconds)
    (4/7) benchmarking "year"...
    done (took 1.160821542 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.160113895 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.159922199 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.158007148 seconds)
  done (took 9.201463556 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.161966192 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.331420584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.411529182 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.770988312 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.165956416 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.167149347 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.028775099 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.169902036 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.169584586 seconds)
  done (took 13.461319224 seconds)
done (took 74.187288105 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.127999873 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.171734189 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.253989322 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.174511273 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.170630059 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.49932116 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.16434928 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.281224776 seconds)
done (took 36.932005697 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.168701977 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.87708816 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.874135822 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.159191709 seconds)
  done (took 10.992433242 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.13819585 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.003596509 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.134543118 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.109035188 seconds)
  done (took 17.467964867 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.088884792 seconds)
    (2/2) benchmarking "read"...
    done (took 1.487177031 seconds)
  done (took 4.654740274 seconds)
done (took 40.36815475 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.155124504 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.154514571 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.151886003 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.15586621 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.151478491 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.154166287 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.154013494 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.15277718 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.14904325 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.152722124 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.153295472 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.152645268 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.149240119 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.151819601 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152135443 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.150660768 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150197196 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153456956 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.150526911 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150232126 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149206927 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.153186447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.150764745 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.15032995 seconds)
  done (took 28.725783567 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.15323224 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.151131026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.153360614 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.153774327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.150665826 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.153236412 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.15286791 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.150128716 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.154096125 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.154157451 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.1514022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.150527304 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.154069722 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.151557973 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.154676409 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.151186026 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.153995215 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.150642715 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.153683342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.151593175 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.156415264 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152277258 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.151273956 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153987732 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.152722108 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.151525332 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.153691021 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.151649975 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.154728933 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.152204307 seconds)
  done (took 35.656369839 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.159094667 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.16004402 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.155164603 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.155547674 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.153831417 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.155190869 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.154756091 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.155704033 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.155553314 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.155138913 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.1547701 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.154690757 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.156067752 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.154927631 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.155870953 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.155257185 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.156247894 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.155279305 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.15593632 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.156023707 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.156606625 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.157530928 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.156275893 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.157467142 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.156305573 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.156439514 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.156085379 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.155780104 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.156228209 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.156713659 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15536219 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.15837942 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.157874691 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.156356809 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.158122855 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.156887367 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.160931412 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.162912616 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.157701604 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.157687085 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.156898752 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.158008544 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.157765804 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.158100285 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.157071794 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.158406444 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.157775665 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.158211891 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.158187462 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.157865717 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.157118067 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.157578641 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.157902689 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.157630104 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.158048461 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.157934361 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.157394402 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.158165625 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.158589622 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.159896949 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.159831263 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.15850564 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.158714817 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.159460755 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.159726529 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.158091945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.158218292 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.159262233 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.158145901 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.15837614 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.158394763 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.159354219 seconds)
  done (took 84.407140011 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.158431271 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.157527089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.156204863 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.156464229 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.156428546 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.159872741 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.155902896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.159389742 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.156332237 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.159353832 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.159152596 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.15661007 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.156726628 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.1610818 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158571978 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.157083161 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.158589974 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.157279034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.160112333 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.160940893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.159666955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.157646252 seconds)
  done (took 26.561131238 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160936588 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.160075539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.157238818 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.160142423 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.156547407 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.160967413 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.160556052 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.161104764 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.164301731 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.160980601 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.159670995 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.161040316 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.159970558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158643496 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158321726 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.157938935 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161165695 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.157905854 seconds)
  done (took 21.959028081 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.160304597 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.158735821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.161857462 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.159190477 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.160446503 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.161885702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.159792033 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.162780158 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.161634428 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.159217425 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.1630428 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.162057446 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.161415967 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.158892355 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.162305392 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.160086286 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.161674686 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.158115529 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.16229629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.158945715 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.160002351 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.163313768 seconds)
  done (took 26.621919506 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.162905985 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.162670196 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.159587723 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.159047233 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.158618859 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.158965037 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.160037214 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.15673791 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.159054712 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.159599278 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156246847 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.159986317 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.157760334 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.153838158 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.15421307 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.152673825 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.156516975 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.15335365 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.15478686 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.153903128 seconds)
  done (took 24.231070671 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.156153451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.156271883 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.156769966 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.157825814 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.156744953 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.157443827 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.155778619 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.157005268 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15774832 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.158595423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.157127296 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.15786224 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.157082126 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.15793844 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158340994 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.156992374 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.158417856 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.157167675 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.157140333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.158580552 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.158530189 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.158611406 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.158891181 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.158666872 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.159384377 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.158592539 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.159006275 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.158643967 seconds)
  done (took 33.496335006 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.160081243 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.158694076 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.156377361 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.155659287 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.156900556 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.156620018 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.156225359 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.157246037 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.158786886 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.156399752 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.15966901 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.160734549 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.160003298 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.159746926 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.159996292 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.160321274 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.160047672 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.158989822 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156758452 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.15726482 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.160913659 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160343007 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.161815452 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.158126855 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152998857 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.157956302 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.155012518 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.154036224 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156626045 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.153783581 seconds)
  done (took 35.819452892 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.176057608 seconds)
    (2/2) benchmarking "in"...
    done (took 1.175637395 seconds)
  done (took 3.429653362 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.151086997 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.153710075 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.154517569 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.151915301 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.152404515 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.15445455 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.155101186 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.151610315 seconds)
  done (took 10.30073439 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.154245847 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.154610605 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.154838047 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.15521555 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.154386638 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.155292749 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.162452015 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.171073084 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.156045211 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.155389618 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.161141141 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.160771977 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.157310431 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.154562566 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.154632451 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.157348082 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.154489251 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.154431033 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.154179105 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.155147822 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.155818706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.157598888 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.157975807 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.152865975 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.155427183 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.166334622 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.176524678 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.156901123 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.155604453 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.159492515 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.155912622 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.154085402 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.156012923 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.156543916 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.156400047 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.156708767 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165238967 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.173183745 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.163080065 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.174170097 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.157530509 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.152821562 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.158763032 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.159195369 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.158606078 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.156841575 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.157786808 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.156177321 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.157070317 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.160027832 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.160925958 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157766897 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.155615083 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162028191 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.158125027 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166314589 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.174785482 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.160025124 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.164921367 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.16779103 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.18614583 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.179183926 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.158758942 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.1581609 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.16658593 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.177234125 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.166086747 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.173132468 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.155959395 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.158285252 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.165017939 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18768076 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.180947304 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.158816697 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.158281127 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.159819443 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159779855 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159930375 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166157207 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.179488191 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.159659827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159752441 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.168753502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178617661 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.15999242 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.158791006 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.15941875 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.159459666 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.159550866 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16927678 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.177371433 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.159554859 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.159759515 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.160237627 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.160130534 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.160929301 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.158175307 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160784682 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.157119415 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.161172137 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.159518399 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.162285778 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.167059018 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.161108011 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.16038073 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.167156832 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.178249932 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160765396 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.167569514 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.162147213 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.161847985 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.162085553 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.166216351 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.158397844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.163062412 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.167720544 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.162317289 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.162222817 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.161166252 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.162041304 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169597862 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.184084019 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.161725176 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.161282274 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.165429903 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.171337203 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162041216 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.165041582 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.163300297 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.160195025 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.159743752 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.163118278 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.162933866 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.16261087 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16194972 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.163275702 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.160277067 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.163139996 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.162147963 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.163891088 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.16398715 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.1631935 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.164727985 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.165202607 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.163651674 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.164413374 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.168667061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.180672596 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.165278517 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.163371266 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.161424978 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164078578 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.163483497 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.164055826 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.16441216 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164004125 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165109734 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.16388539 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165225795 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.16494415 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.164016007 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.164555967 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.167299117 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.164855273 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.16982954 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.164285218 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.161746433 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.164798533 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.165203286 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.164238069 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.165891299 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.163314908 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.167539214 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.169755525 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.165253561 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.164902847 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.167838746 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.164700823 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.1644967 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.163743126 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.16746196 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.171593697 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.163951239 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.171561941 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.183179131 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.164880095 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.16758538 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.165224169 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.165639259 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167263962 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.168026184 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.172568796 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.177731565 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.187277795 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.166600544 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.169321756 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.16743664 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.169482526 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.170636985 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.168114322 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.1659881 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.166448023 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.166907195 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.167096182 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.168821497 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.167104599 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.165084387 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.167996785 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.166949463 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167023343 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.168891693 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.1679305 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16910805 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.165309803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168414424 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167139543 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.167345954 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.165681245 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.166195832 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.166878939 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.167911359 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.168223602 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.175140965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.165736995 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.168436332 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.169662878 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.169642087 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.168035741 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.169531379 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.171632176 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.16813357 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.176666365 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.185852365 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.170155136 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176385507 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.185008259 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.168660376 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.172632505 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.170349304 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.16791662 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.171103654 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.175956475 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.169094891 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.170549459 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.169116613 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.16957265 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.170277732 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.175796136 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.185507773 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.169598952 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.171999418 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.171552653 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.168165895 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.171161972 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.170778543 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.171201356 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171849481 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.170694759 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.17147795 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173014419 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.169809927 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.169936182 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.169647068 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.172567835 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.176501416 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.176044773 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.170082394 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.174074771 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.171178998 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.173264931 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.171856307 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.171104797 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.170072347 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.182470876 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.192526858 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.177801645 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.190286368 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.172292143 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.176627889 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.188028606 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.174563721 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171777477 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.17297146 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.17123258 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.171335773 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.169993762 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.171445078 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.172250894 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174411058 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.17260172 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.176886131 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.172723584 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.171920948 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.171247624 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.172035144 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.172978996 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.171574152 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.17355639 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.17466201 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.174273612 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.172040823 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.17254952 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.179465364 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.19066496 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.175311021 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.172552532 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.173099935 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.172919453 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.174610058 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.173706644 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.176035722 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.179306714 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.176929881 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.181439186 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.176081706 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181285245 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.172520576 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.178624027 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.179428347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.172868454 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.172976148 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.175656092 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.17394872 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.181570628 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.192078777 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.174395508 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.177234299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.173851714 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.174226772 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.174346166 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.174216586 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.175389904 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.175853594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.18432715 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.19289797 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.178373868 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177379407 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.173980648 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.175192342 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.175546946 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.174158155 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.179589363 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.175912725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.175537067 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.175828793 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.176615642 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.176867638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.175826229 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.176464274 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.174129292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.176636863 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.182697477 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.194257061 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178763658 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.176400783 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.184266089 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.194237379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183443842 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.194000614 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.177936374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.175702837 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.17707421 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.178850033 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.177586015 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.176901028 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.177377831 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.177762899 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.181001746 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.178334711 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.179210165 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.178653527 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.178281823 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.178024552 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.186364355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.196284804 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.1784448 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.181549549 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.175382737 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.17851995 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.18149782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.17850226 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.176387072 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.180360547 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.18646151 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.184627369 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.179454901 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.178381406 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179152393 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.178869715 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.179506669 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.179088047 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.179897165 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.17837328 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.180506145 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.179987014 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.183179175 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.18070964 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.180495023 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.180770443 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.180808181 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.188583561 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.196564145 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.181123932 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.18022504 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.181238401 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.180690562 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.181045976 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.180129493 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.181209599 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181480071 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.181197698 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18509947 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.186618307 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.182633996 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.179223593 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.180592344 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.181393549 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.179856086 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.180514027 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.180326637 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.180075554 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.182876116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.181709562 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.18213192 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.179821178 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.181065909 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.181365883 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.181190706 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18428552 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.186618498 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.181772306 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.18048966 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.181957503 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.183419056 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.180341052 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.182198317 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.189143796 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200858814 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.190217066 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.188399512 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.184332544 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.181932358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.184538826 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.187974171 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.180913405 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.182681238 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.182258863 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.183378211 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.183810875 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.185763977 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184244534 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.189937251 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.200008002 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.18264717 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.192692955 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.200383397 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.182520386 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.183921635 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.186675641 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.18243133 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.180779235 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.183902097 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.181997688 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.189757717 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.201762177 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.184664994 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18625239 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.182905345 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.184760314 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.186725529 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.183378705 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.185267447 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.182313553 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.184323555 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.183765974 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.184715322 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.18231657 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.183973948 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.184475669 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.187091154 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.190722436 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.183085776 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.18775423 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.186074448 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.187411114 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.184403721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.186090982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.18389468 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.183735893 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.186099729 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.185531665 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.185932699 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.189130252 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.185239244 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.187034237 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.186870164 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.186505865 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.188691342 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.194185392 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.192318236 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.18412996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.185905078 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.188205794 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.189134094 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.186422716 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.185876457 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.187341294 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.188211665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.187570362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.185751063 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.186272038 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.188412292 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.202563232 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.204719525 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186219358 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.187782605 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.190854726 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.18765148 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.185546589 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.188498969 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.190655643 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.19055293 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.194659596 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.187968606 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.193842853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.204687046 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.188647511 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.191423528 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.190750907 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.19507175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.192900244 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188779259 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.189573313 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.191399461 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.201874732 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189254327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.197535097 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213347655 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.206346591 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.190247733 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.18920025 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.188673825 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.18905135 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.192050568 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.190817447 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.189537 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.190124076 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.189839167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.18955045 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.195381181 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.191043089 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.189788171 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.189227745 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.190314727 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.192342065 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.188553765 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.191959633 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.190694483 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.190398655 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.191123764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.190285316 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.191639673 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.202677892 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.21421176 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.191458195 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.193140393 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.189169345 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.195775443 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.19220619 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199549315 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.197132148 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.192583464 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.191082041 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.192022295 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191134393 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.188124903 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.190829791 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.190968543 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.191689868 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.18941735 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.202115307 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.214680057 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.196194006 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.192179722 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.193302244 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.193455269 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193399692 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.1921428 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.192352372 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.193111614 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.19364648 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.195609872 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.194815468 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.193733774 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.195346937 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.19816222 seconds)
  done (took 701.885739024 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.192660818 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190488071 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191775797 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19090775 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190301583 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190570861 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191108637 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191116627 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.193144356 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.191035533 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.190063523 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.190923426 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.19164234 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.192580719 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.192132799 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.190481898 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191052629 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.19278936 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.1917076 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.191279481 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.192332704 seconds)
  done (took 26.131296703 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.194628414 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.192587595 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.191725674 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.194934724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191794311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.194029078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.191094039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.195898289 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.195203641 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.192662917 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.196069009 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.195248792 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.191624124 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.192908182 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191259817 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.195785604 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.196381176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.193155083 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.19667218 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.193349213 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.195983747 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.193203939 seconds)
  done (took 27.379271793 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.195666108 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.196326192 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.194479001 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.193955591 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.197037613 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.19409015 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.195511887 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.195775183 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.197087172 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.196941238 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.196195904 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.197651247 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.202014165 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.199242566 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.196829148 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.197036621 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.342118975 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.196844791 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.196859964 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.197444159 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.194468551 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.202091519 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.210754401 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.195171749 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.196011257 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.197307275 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.199224718 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.197729276 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.198129468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.198993975 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.200796741 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.197989444 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.19665833 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.200338069 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.198096564 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.198780415 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.200847579 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.197451205 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.195932488 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.196430693 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.205446515 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.215821147 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.197261676 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.204465205 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.218292513 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.198839271 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.200323223 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.203550513 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.196244159 seconds)
  done (took 60.008108489 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.19816018 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.196809584 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.195366599 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.197269913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.199736493 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.198346491 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.199506101 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.199369406 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.197345556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.196604408 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.198335468 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.197371693 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.198090738 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.199127887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.200438188 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.198361588 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.197720298 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.195708203 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.197755129 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.195276828 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.198046259 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.200299436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.200440468 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.198999162 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.200926676 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.198127027 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.198287183 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.200764353 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.196296588 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.198004348 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.199726051 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.200771455 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.200896843 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.198169835 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.198129627 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.2017086 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.20173802 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.198863806 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.200772959 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.198417439 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.199231177 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.200583503 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.200207419 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.201786591 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.198395578 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.199655157 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.198144467 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.200011752 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.199864758 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.203244507 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.202798227 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.19981318 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202116637 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.20031423 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.202223649 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.203121635 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.200762871 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.199718178 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.204093371 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.200011537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.203506678 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.202434803 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.200300916 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.20333185 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.204332414 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.198547517 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.198908317 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.202387894 seconds)
  done (took 82.694539028 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202677987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.201660485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201705698 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203438481 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20285533 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.20315972 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205481254 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.203069332 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.19994675 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.202103425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.202810667 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.203030294 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.203292795 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.202903068 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202420742 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203279725 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.201820369 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203567124 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20377669 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.203907231 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.203327054 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20358274 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.203747816 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.202694984 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.203754333 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.202553511 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.203279806 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.203680871 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203435787 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.204228319 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204676937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.202991334 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.204848817 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.202669093 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.205241704 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.205406824 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.203440286 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205216931 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.204954556 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.204816056 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.204529007 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.203235053 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.203653119 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.203870326 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20432984 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.203874819 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.204853626 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.204928282 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.204396627 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.205604477 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.206216709 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204443159 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205356966 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.204736403 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.205645701 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.205984062 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.205494877 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205789994 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205658724 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.206020561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.20635301 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.207697843 seconds)
  done (took 75.769531781 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.205842532 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.206977741 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.205152501 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.20411373 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205827353 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20444997 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.207098767 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.20764641 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.206830264 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.206878122 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207241061 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205554616 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20490806 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207993263 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.20594868 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205039113 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.205054093 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.205114381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207930437 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205361878 seconds)
  done (took 25.244479654 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.204663902 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.208611403 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.204209303 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.205415205 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.207803262 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.204824507 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.2075749 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.207199253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204754629 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207187043 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.209786803 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20645483 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205198655 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.204505956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.206724259 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.205447629 seconds)
  done (took 20.425766467 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.206148909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.208935031 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.208457338 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.208169284 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.205365086 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.204868324 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.207523424 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.205521426 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.20585718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.208630773 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.209027758 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.209813788 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.208770745 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.207377384 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.206472133 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.208748327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.20504209 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.206335868 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.209474061 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.208776464 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.207903686 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.206591473 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.209002345 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.209367366 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.207899709 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.207089906 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.206298207 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.206677453 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.206742839 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210089008 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.206363544 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208551412 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.2080548 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.206561798 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.210295168 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.207844836 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.210024771 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.210726672 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.210170467 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.21015333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.210234218 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.20826729 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.210892941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.210920606 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.208794309 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.211245909 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.208315046 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.20781105 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.208147097 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.209380185 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.21206545 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.21125488 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.212041204 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.212068407 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.211123205 seconds)
  done (took 67.595067687 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212198226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212558667 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.209029311 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212184836 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212317663 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.209000117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.211069774 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.209747712 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209286995 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.212776191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211660901 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.213036648 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211429944 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.211938331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209905527 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212466241 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21057081 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.210392633 seconds)
  done (took 22.929716518 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210859873 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.210536272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.212844003 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21004442 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.209429024 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213422761 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210852767 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.212411261 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213923436 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.211060181 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210863026 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.214799206 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213604299 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.214727564 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.210836217 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210166454 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.215032591 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214409003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211206822 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211920595 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2145566 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214147222 seconds)
  done (took 27.80067243 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.213958071 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.212060229 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.227582468 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.248152864 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.254210926 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.212802126 seconds)
  done (took 8.499478091 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212683775 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.213742306 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.212161863 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215381468 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.213646488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212462865 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211024709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211772231 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.214861024 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.211826955 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212678964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.214563646 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.214960083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21202491 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215783741 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214479831 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212824692 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.213032009 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213892451 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215067169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.212775713 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216421948 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212834291 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.212805068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213439872 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213021311 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21499037 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212647155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213453845 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214611971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215760094 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213017263 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215739842 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214382131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216917208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216634816 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214164491 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217638112 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216895169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.213878786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217637055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.216884587 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215790592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215549329 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216214164 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214774251 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.213240436 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214743592 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.214907857 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2176754 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216496837 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214077233 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216934042 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218221241 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216518894 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217413101 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21590059 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.213498006 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.217500908 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214760861 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214467015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216292112 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.214647493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.214880167 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.217947995 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216917484 seconds)
  done (took 81.307708784 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.215092682 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.216082766 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.215293226 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215833815 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21651992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214909543 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216212687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216069364 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215963141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216191299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217682711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.214749336 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215372983 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216308122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216745981 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.215774038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.215705174 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216975407 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216204138 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219857532 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217636924 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.215183742 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216542516 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216948638 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216942489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219014146 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217390288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21681464 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.216605958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.217264483 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216176742 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21755462 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218077448 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.217607402 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.216837722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218723969 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218713675 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216985473 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217625985 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220988641 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217652089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221365964 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218784882 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21768219 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21846039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218512801 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218199569 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219414558 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218581661 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218908483 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219177873 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218776451 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220182891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218748288 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218645994 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219053132 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218921345 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22025104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219111853 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221359609 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218799927 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220494523 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222486689 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219345579 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219703745 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217958008 seconds)
  done (took 81.51012369 seconds)
done (took 1641.470028248 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.209755981 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.235288148 seconds)
  done (took 13.582618224 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.382046485 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.334980476 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.220110597 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.226792888 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.22039274 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.216749102 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.243620733 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.220212238 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.221049951 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.221124578 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.220437168 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.407541243 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.272791844 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.220521172 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.219807117 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.311715113 seconds)
  done (took 41.304160015 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.244183754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.228834096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.332352632 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.250539547 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.24940302 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.401992049 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.283552736 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.23164091 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.385938572 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.275472674 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.683782825 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.249967976 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.22854371 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.259554865 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.245300062 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.401347927 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.463870223 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.686551354 seconds)
  done (took 28.242659709 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.643292095 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.234467242 seconds)
  done (took 9.020208893 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.247770792 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.236708604 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.256074718 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.248958163 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.251799635 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.292489834 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.292272176 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.291951457 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.25796012 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.287898163 seconds)
  done (took 63.812075716 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.246801914 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.233778526 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.229779566 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.227118266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.220439644 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.221876891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.229167772 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.224364043 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.656829623 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.345068745 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.247242418 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.238944582 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.246543745 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.230040373 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.226510838 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.263770005 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.380089067 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.246004877 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.226834212 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.235076456 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.228827333 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.350460347 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.270990376 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.231341299 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.346442711 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.660186247 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.235020004 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.238271876 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.360237154 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.24713427 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.22965664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.230071776 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.231782047 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.786264942 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.741748836 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.245681906 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.251791803 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.240879012 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.228728733 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.403305386 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.251925761 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.236482823 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.229536636 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.708991362 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.390369824 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.343783332 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.373782919 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.232223849 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.230752666 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.28955306 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.235311058 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.231182762 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.259796263 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.971651411 seconds)
  done (took 105.265294111 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.24317549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710659591 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.39389746 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.246190693 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.06171964 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.85254213 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.242697933 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.491146101 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.251239576 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.225220356 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.508393193 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.712206535 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.246353752 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.237649663 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759408172 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.266410875 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.227294139 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.107046787 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.241911961 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.22534897 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629684801 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.250949564 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.228338826 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.387283588 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.263452651 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.67421048 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.584867169 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.606225386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.245151447 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.226209265 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.675007861 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.248997584 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.238253155 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.22933663 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.489429244 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.562131889 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55288082 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.243588728 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27026775 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229497126 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.253823208 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.667931266 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.565068477 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.242636702 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.24888802 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.678185358 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.244203224 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.229219581 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.227154529 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.43278958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.97531566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.233436132 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.588853373 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.228081726 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.485121392 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.292109479 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.27262079 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.698444399 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.244367147 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.281588184 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.278789236 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.22973699 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.232406058 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.231264714 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.229280181 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.555036335 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.614954741 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.236681184 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.557305194 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.685213648 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.2532472 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.740585538 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.166189915 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.250863616 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.273350302 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.231272764 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.917560604 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.727337918 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.276233385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.228846017 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.545640276 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.255516403 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.498280046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.24713547 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.229623485 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.654338615 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.249579502 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.231403178 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.229530192 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.250244536 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.994912385 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.234134823 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.504188893 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.295144719 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.229520231 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.229195551 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.268138691 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.230337697 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.231255962 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.234064303 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.732930383 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.258028354 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.349916677 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.246797133 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235875958 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.231968772 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.231937998 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.230721878 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.452121949 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.717415358 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.240440815 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.230633143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.230730521 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.230099779 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.353962847 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.23616799 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.521165793 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.254417425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.230359644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.234537232 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.882157825 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276314932 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.232199311 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.253025622 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.066883535 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.45395263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.250499456 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.238229676 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.232734894 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.256977587 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.49181423 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.23318625 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.298776168 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.236658052 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916135353 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.258517258 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.252551113 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.62408378 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.238197675 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.141534236 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.253099815 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.233554384 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.527490468 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.498339865 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.531794573 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.236847445 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.236867417 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916716047 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.27081347 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.38062142 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.256193543 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.234488609 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.429546518 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.33944676 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.232983623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.794503182 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.235317001 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.449962307 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.240378616 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.555345609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.703668763 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.253371268 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.236536976 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.92126984 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902578455 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.010114649 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.233377658 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.50523345 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.213663654 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.684812381 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.234051132 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.235404818 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.825836645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.238890994 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.242309856 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.233919213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.235862441 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.303073853 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.408435385 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.695070282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.234430322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.675597309 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.281023459 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.234935728 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.261921438 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.234815116 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.586278045 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.246242184 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.239307205 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.243502254 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.236519239 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.242594047 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.691518967 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.209924804 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.242516643 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.388290231 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.847170328 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.259299809 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.236417169 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.899132214 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.439084656 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.768748434 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.276259051 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.527656118 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.264136177 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.27444031 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003342751 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321564347 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.68933157 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.256046378 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.258454123 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.826931205 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.257814904 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.319179806 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237088146 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.239388119 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.754143846 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.260720545 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.241339526 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.508289455 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.237784554 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487574995 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.238262688 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.240974756 seconds)
  done (took 1087.966696094 seconds)
done (took 1350.331562996 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.236982439 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.239160279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.228221564 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.245132128 seconds)
  done (took 26.108405526 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.247864423 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.244555254 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.243985297 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.242589239 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.246053062 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.243895203 seconds)
  done (took 8.628601996 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.279427139 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.239361218 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.245405597 seconds)
  done (took 18.924338117 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.448264196 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.480744332 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.596423014 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.351440669 seconds)
  done (took 10.038691199 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.245749389 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.245021052 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.246561842 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.24711339 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.249669324 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.250333533 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.247505943 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.247839977 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.250077666 seconds)
  done (took 12.390429138 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.990166782 seconds)
done (took 82.239883652 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.266615922 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.777246069 seconds)
    (3/309) benchmarking ("sort", Int8, false)...
    done (took 4.33328623 seconds)
    (4/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.555633818 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.509709443 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.96431135 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.301315114 seconds)
    (8/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.266859897 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.285021217 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.258484675 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.523102663 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.381172212 seconds)
    (13/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.265598725 seconds)
    (14/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.241091314 seconds)
    (15/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.443729367 seconds)
    (16/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.276703973 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.072700884 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.931851465 seconds)
    (19/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.591220498 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.611936112 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.613078822 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.035980287 seconds)
    (23/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.241821468 seconds)
    (24/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.273707628 seconds)
    (25/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.82841853 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.720669464 seconds)
    (27/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.916552091 seconds)
    (28/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.433935251 seconds)
    (29/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.76776538 seconds)
    (30/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.323541686 seconds)
    (31/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.238564371 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.599599465 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.264746722 seconds)
    (34/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.241003897 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.347137357 seconds)
    (36/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.325454706 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.132135446 seconds)
    (38/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.822966421 seconds)
    (39/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.377347725 seconds)
    (40/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.231459467 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.437229292 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.970284043 seconds)
    (43/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.525306302 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.259196052 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.335483253 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.353819057 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.328084551 seconds)
    (48/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.246078954 seconds)
    (49/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.386358883 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.506003379 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.224312092 seconds)
    (52/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.117598421 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.328811696 seconds)
    (54/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.801867622 seconds)
    (55/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.620579601 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.094532457 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.084689859 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.301300127 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.353788227 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.050884814 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.244246611 seconds)
    (62/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.276998155 seconds)
    (63/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.650937053 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.970345799 seconds)
    (65/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.45363437 seconds)
    (66/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.254092777 seconds)
    (67/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.825888514 seconds)
    (68/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.750374388 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.867810375 seconds)
    (70/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.335301433 seconds)
    (71/309) benchmarking ("sort", Float32, false)...
    done (took 5.238796644 seconds)
    (72/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.234449937 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.361756299 seconds)
    (74/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.602809657 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.316837866 seconds)
    (76/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.242926302 seconds)
    (77/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.048846055 seconds)
    (78/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.497970935 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.260521009 seconds)
    (80/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.247712235 seconds)
    (81/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.257771065 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.554726902 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.432109924 seconds)
    (84/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.587941093 seconds)
    (85/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.839351893 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.37427575 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.244067692 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.656581023 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.584312456 seconds)
    (90/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.463950823 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.263654955 seconds)
    (92/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.714270109 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.598957329 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.260753811 seconds)
    (95/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.963220107 seconds)
    (96/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.246572144 seconds)
    (97/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.292938038 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.294348726 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.337044315 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.254647082 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.334062688 seconds)
    (102/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.634114579 seconds)
    (103/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.273220605 seconds)
    (104/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.783018848 seconds)
    (105/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.450829206 seconds)
    (106/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.5943074 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.794642358 seconds)
    (108/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.710675708 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.6007576 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.6146113 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.295884089 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.836483893 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.248913332 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.28008975 seconds)
    (115/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.090425155 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.237251117 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.293077941 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.227145145 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.469789289 seconds)
    (120/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.247945419 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.677143264 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.50285581 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.247435674 seconds)
    (124/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.434102508 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.873335157 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.577854472 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.10975445 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.275018744 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.651298196 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.275285374 seconds)
    (131/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.848331651 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.124410203 seconds)
    (133/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.496978381 seconds)
    (134/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.274739239 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.762399545 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.294865129 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.249411407 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.453370325 seconds)
    (139/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.287530354 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.316411798 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.528247983 seconds)
    (142/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.848246007 seconds)
    (143/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.273149061 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.269801035 seconds)
    (145/309) benchmarking ("sort", BigInt, false)...
    done (took 6.247979665 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.985445328 seconds)
    (147/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.355244221 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.509623591 seconds)
    (149/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.056164505 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.683604017 seconds)
    (151/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.347969574 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.230153069 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.360994769 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.394643485 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.341630552 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.313498627 seconds)
    (157/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.355281656 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.321041291 seconds)
    (159/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.251842796 seconds)
    (160/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.280491776 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.975783173 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.533344842 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.294352902 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.332278697 seconds)
    (165/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.244490628 seconds)
    (166/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.231931799 seconds)
    (167/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.319213622 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.644730006 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.265530465 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.796052824 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.281631759 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.877637989 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.538388279 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.243871773 seconds)
    (175/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.993390911 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.264493467 seconds)
    (177/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.260136929 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.285539166 seconds)
    (179/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.378599904 seconds)
    (180/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.262863562 seconds)
    (181/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.595194864 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.352010702 seconds)
    (183/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.423053562 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.995772223 seconds)
    (185/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.266825934 seconds)
    (186/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.253104202 seconds)
    (187/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312140521 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.23839996 seconds)
    (189/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.281241566 seconds)
    (190/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.262026142 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.65936646 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.266317926 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.463479286 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.148432057 seconds)
    (195/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.95904858 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.576040957 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.8781426 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.65567779 seconds)
    (199/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.670071081 seconds)
    (200/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.508276153 seconds)
    (201/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.070567526 seconds)
    (202/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.287038225 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.255049953 seconds)
    (204/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.932092 seconds)
    (205/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.578378213 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.568358314 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.26350243 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.131876896 seconds)
    (209/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.294719099 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.269353824 seconds)
    (211/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.281403151 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.987312241 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.352086389 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.551393731 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.310878333 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.265600274 seconds)
    (217/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.61813608 seconds)
    (218/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.046780775 seconds)
    (219/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.270087618 seconds)
    (220/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.317884068 seconds)
    (221/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.254754077 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.265926293 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.258499232 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.253729411 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.254772368 seconds)
    (226/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.413694667 seconds)
    (227/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.340858593 seconds)
    (228/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.974228718 seconds)
    (229/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.362368431 seconds)
    (230/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.563313182 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.897283398 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.464521776 seconds)
    (233/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.263209295 seconds)
    (234/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.801803974 seconds)
    (235/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.291041782 seconds)
    (236/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.297876527 seconds)
    (237/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.610905611 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.644479956 seconds)
    (239/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.117852038 seconds)
    (240/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.276529776 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.498509569 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.273296369 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.295739498 seconds)
    (244/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.271023329 seconds)
    (245/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.603507218 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.243729429 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.995932645 seconds)
    (248/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.336695578 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.256453161 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.760208784 seconds)
    (251/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.44511166 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.271113912 seconds)
    (253/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.471056556 seconds)
    (254/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.841576268 seconds)
    (255/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.065231895 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.662775583 seconds)
    (257/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.278952973 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.292066444 seconds)
    (259/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.743590276 seconds)
    (260/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.27787936 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.139925027 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.400919577 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.571782385 seconds)
    (264/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.461905863 seconds)
    (265/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.993845546 seconds)
    (266/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.82458698 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.303663746 seconds)
    (268/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.283092596 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.282920842 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.63339057 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.613904 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.233922485 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.237705352 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.262351349 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.085977904 seconds)
    (276/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.390201042 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.821177346 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.077005089 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.450310073 seconds)
    (280/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.339730915 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.689053391 seconds)
    (282/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.559758465 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.621477529 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.655076872 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.245023493 seconds)
    (286/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.288348608 seconds)
    (287/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.377215784 seconds)
    (288/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.412158835 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.366746325 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.341730245 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.342913768 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.144186922 seconds)
    (293/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.373571929 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 5.563890313 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.072744369 seconds)
    (296/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.782073138 seconds)
    (297/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.637851961 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.330646755 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.481365476 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.975342795 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.324168452 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.017811245 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.50137222 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.282227824 seconds)
    (305/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.361895825 seconds)
    (306/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.573242416 seconds)
    (307/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.5032378 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.539703537 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.894900019 seconds)
  done (took 891.315346321 seconds)
done (took 892.479913647 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.291636661 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285065383 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.270886794 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.291582124 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.381403532 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.294283043 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.279786542 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.271215418 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.318227736 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.319519439 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.268518874 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.293045895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.272166019 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.269662218 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.269396044 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283994661 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.266128356 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.2778513 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.287230573 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.278996623 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.286863487 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.269512599 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.320773155 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.294146128 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.275364644 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.274539798 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.275041205 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.290972392 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.381938689 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.274088373 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.274119829 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.2828814 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.266839985 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.278656664 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.266647734 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.290580066 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.283282135 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.281804527 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.276170019 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.302985574 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.648667445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.293638188 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.272577997 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.274461992 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.274714403 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.277556022 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.272831394 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.279174097 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.285063396 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.286058624 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.635763812 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.31055522 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.275837331 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.273276066 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.282833769 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.272224054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.275374845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.28893305 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.292385923 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288498355 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.257961066 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.284621716 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.276220737 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.290239973 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.281782773 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.666093979 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.285071642 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.27784507 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.641703097 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.294596724 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.667994453 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.296986601 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.275638356 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.28772843 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.305043288 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.271464852 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.275766963 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.274731446 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.281160659 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.273018003 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.284764006 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.286786938 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.280077768 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.275317517 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288438518 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.299500142 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.283833218 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.274422314 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.284900841 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.294385871 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.282462012 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.286600811 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.277924655 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.271634613 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.286195858 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.279175347 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.279246487 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.277991831 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.280338756 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.287056914 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.641424145 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307757014 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.27342112 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.273183527 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.275195057 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.288516071 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.643633819 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.292951722 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.297332367 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.323942313 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.278255628 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.262370178 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.286974865 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292470345 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.286280686 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.281258522 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.273811303 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.261567855 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.644806388 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.306867689 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.277957955 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.275741999 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.292837308 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.279093927 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.273924737 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278626054 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.287279166 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.29178568 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.399295183 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.288226894 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.308756987 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.275587003 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.281630855 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.306274375 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295054212 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.310807561 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.281434255 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295389576 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.294027699 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.275151601 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289383513 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.288311092 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.280530634 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.28481577 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.273550545 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.303276997 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.291802108 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291206742 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.300249988 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.400507637 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.27561627 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.265541809 seconds)
done (took 215.697209786 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.337424806 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.271458903 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.359290218 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.276587539 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.374813051 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.374447375 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.272586536 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.273826291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.274096194 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.652162579 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.27374812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.275009229 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.273469415 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.274248133 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.357638124 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.275709382 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.272877402 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.640565898 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.276188489 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.349136037 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.271365471 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.274231046 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.277119777 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.656833508 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.27760961 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.278575987 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.349104049 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.278817532 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.619796576 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.278210424 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.272375441 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.619930264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.36733725 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.294665088 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.287123225 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.284825714 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.37696335 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.295777996 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.357925097 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.357535228 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.360828283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.316935502 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.278095907 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.274225678 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.2795898 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.278390096 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.276587896 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.305131115 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.270153358 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.286085789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.64139552 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.277431865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.287525278 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.277410874 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.277118476 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.306299938 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.277263743 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.278639352 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.36909558 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.279270652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.341123158 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.658255603 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.65431064 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.280658456 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.275478148 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.277487658 seconds)
  done (took 144.687175963 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.345781502 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.352363445 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.388819799 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.304027067 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3285859 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.39333122 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.302260672 seconds)
  done (took 10.606877189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.285602698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.280312801 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.341908973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.328058192 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.28009356 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.427994404 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.280856909 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292028265 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.278786639 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337081417 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.281273807 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.282042856 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.288583634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.275602576 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.328712083 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.293353743 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.395889951 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.283177809 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.281185558 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.432163739 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.280075789 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.288949171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.34271392 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.293381965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.282105161 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.28715497 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.846494336 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.281958851 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279223795 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.28143873 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279542142 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.319610802 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.282154087 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.277872359 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.280129134 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398313317 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283388072 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.279926289 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283213674 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.276165573 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.282536512 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.283314442 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.283280711 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.281435726 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.283736318 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.30534311 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.283437094 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.283392002 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.283391432 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.284070784 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.340413718 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.284669339 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.280705345 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.281957074 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.339734133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291434297 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.283132182 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281154944 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.285346871 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.283641418 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.434933076 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.331742495 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.284343006 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332910115 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.284085038 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.284872104 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.283633718 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.284884206 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337734176 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.285296164 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.333825585 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.2818478 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.440176749 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.307497183 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.286119618 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.287376202 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.286669242 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.283295973 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.277503607 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.291071168 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.282447807 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.286474768 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.291058058 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283261667 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284138528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387913749 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.392756798 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.284239805 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.298652424 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292674797 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.284350218 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.337513219 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.286440852 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.284586472 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337914086 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400939916 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.352766729 seconds)
  done (took 148.289204254 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291334253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.29415624 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.28651228 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.30214812 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.286789226 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286801997 seconds)
  done (took 8.946266641 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.288964497 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.287269203 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.286245626 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.285878693 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.286286593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.288080057 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.287534848 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289320553 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.289309526 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.288436394 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28771124 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.289915724 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.288128979 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.287696702 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.28773765 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.28907791 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.288056123 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286420497 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.289715218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.289547804 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.38224949 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.288399155 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289471288 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.28973528 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.293729805 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.290028059 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.296858835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.289668724 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.289085661 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.297339099 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.307765421 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.288946838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.290498632 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.293533259 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.292793542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289920306 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292505411 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.29121127 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.286636382 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.2896687 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.290749169 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.289225737 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.290102006 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.292447479 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.290809982 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.293499131 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.295715896 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.297887691 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.291223473 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.293430368 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.291995737 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.291145481 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.290054972 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.292368725 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.292072395 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.311948215 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.295602116 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.29123248 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.290583718 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.291068954 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.293286005 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.29163436 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292879538 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.295629101 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.299273221 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.293628331 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.29295988 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.295984735 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292106223 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.292553101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.294342391 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.289973049 seconds)
  done (took 95.280041545 seconds)
done (took 408.998320305 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.602235595 seconds)
  done (took 7.805980179 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.372353334 seconds)
  done (took 7.576972366 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.205840934 seconds)
  done (took 21.419920167 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.34798595 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.347021254 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.326396663 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.308165093 seconds)
  done (took 26.533099274 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.600120975 seconds)
  done (took 7.805420522 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.292944494 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.284677159 seconds)
  done (took 13.782962172 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.778560354 seconds)
  done (took 7.984639088 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.500398114 seconds)
  done (took 7.714305455 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.289572468 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.321393293 seconds)
  done (took 14.073474199 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.270406799 seconds)
  done (took 7.47931702 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.045657636 seconds)
  done (took 8.252561625 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.729689138 seconds)
  done (took 7.939726428 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.335687976 seconds)
  done (took 7.545051135 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.091446658 seconds)
  done (took 9.300653304 seconds)
done (took 156.418044287 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.290085304 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.298001738 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.299705695 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.298551501 seconds)
  done (took 26.394343479 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.331899707 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.330544026 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.332957191 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.34108221 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.337403675 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.33463612 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.336134023 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32370456 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.342576987 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.334859611 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.33200646 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.335720984 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.32897038 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.322418236 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.335275108 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.333921821 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.345302468 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.332637968 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.325671476 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.334841584 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.298043597 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.343893439 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.335114645 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.300901725 seconds)
  done (took 33.158148361 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.818776216 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.369294385 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.451293534 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.350334004 seconds)
  done (took 7.201570575 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.351647636 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.352141671 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.364719966 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.402655258 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.431538316 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.364314257 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.323152703 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.322762871 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.307918231 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.354172517 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.428349519 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.370669947 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.435868678 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.300190318 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.486641548 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.300918237 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.298075325 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.351701801 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.405707476 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.417507616 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.298003762 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.353247226 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.357253541 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.369130105 seconds)
  done (took 33.959775452 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.298715855 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.309933502 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.307507995 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.297109607 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.299509154 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.300526541 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.305351666 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.302376648 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.320666695 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.302236461 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.29852965 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.302108494 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.301683868 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.296493505 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.298768063 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.311087421 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.312178224 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.301087169 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.305033803 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.306147153 seconds)
  done (took 27.288467492 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.294671288 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.148548817 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.647055592 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.552019028 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.29637733 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.296020121 seconds)
  done (took 27.445276732 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.367394429 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.520476688 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.307602938 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.647415327 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.747345472 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.3253244 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.303772181 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.536567994 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.844834999 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.842105024 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.355985532 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.376022761 seconds)
  done (took 19.387300081 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.294718805 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.302703548 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.305633995 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.331930502 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.359089574 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.318050296 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.309180943 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.295863704 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364076522 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377453285 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.326956785 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.358062443 seconds)
  done (took 37.155820525 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382641634 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389805543 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.233873743 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07365119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017674853 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.509163227 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.064213122 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.713505815 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.303334889 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569039089 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292990624 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410317168 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556164197 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31320657 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.306392877 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.265996873 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551000534 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781983489 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307986518 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.16037435 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330979937 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.311616358 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.255388133 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334795903 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510276819 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.281370691 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.563161392 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.080126766 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582099 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307588715 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310362979 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298780214 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.571577121 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948231993 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419108169 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305055372 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.002020739 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.846515584 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.288808141 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.25500285 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.029594857 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308301732 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310336301 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29960263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.23521733 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297964268 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734929179 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.306562679 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.012931181 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303844469 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.312884063 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39692252 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.305896741 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.293345475 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307817296 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.305643813 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.300892423 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309810232 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869446036 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625535727 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308671463 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.243424459 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.686221752 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.243057017 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927425672 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.41650322 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.304330915 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.304109453 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.238379444 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.168553583 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326147423 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446936758 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.327828227 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952328749 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00636794 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.33184076 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237021087 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857622257 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.315017116 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.245604742 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.52765322 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08610122 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237529597 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.237795442 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.232870847 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026624242 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31901472 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.663338642 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.318093077 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.720497115 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.316512454 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321465695 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326431606 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.526763915 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.182734914 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30195789 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.085498534 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457874676 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32421174 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.72391767 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239850008 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.307865136 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55734373 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.514695265 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301113866 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.270329354 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521087575 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308106992 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.325166709 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.31515848 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.320514441 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.861644309 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.337182058 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.633926336 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33077831 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.079814644 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055754378 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310924045 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.433287108 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.304837135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548582771 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.069579778 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472135301 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373314285 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311140719 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.307435456 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.272380344 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.163982765 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.199812225 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.305404864 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316794862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.320720923 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.304940136 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249185298 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.305467813 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312997096 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.092674243 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.528989937 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311187431 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589605326 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239824383 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452574013 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313665688 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.529129332 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.481445365 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.321602801 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564796259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316026186 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315871127 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327052856 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322395531 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406192614 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330231048 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.303834213 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.571316754 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.311518155 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.311520045 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.281125469 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.09253002 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.312993853 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.310842206 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.135539014 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879429048 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310248072 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310259076 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197824261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.321587369 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374134891 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.314453169 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.316578668 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.102084649 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.124049392 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.312480819 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.305948141 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537279357 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.316810631 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.290082305 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398319779 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.497204558 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886809959 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344129106 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.244728266 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.020277747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.999130987 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309110776 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.49678787 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.310671332 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319472369 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319606718 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.825157638 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877330078 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.335399462 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.196704529 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.325192879 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316974117 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.314768523 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307623595 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.058745951 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.670097027 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322687206 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.328296024 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4515129 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.326485505 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.244475143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.827255554 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.313618196 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309095402 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.085818623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347060004 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.19555152 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785750097 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56888436 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.99099119 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327146378 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.376382113 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.347176974 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.313301082 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.108044583 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353712227 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.322204214 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332854887 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.321969108 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.291809621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.755550375 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878988845 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018119532 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877473041 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247101282 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.331615752 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221883325 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741389018 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248452813 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.968201866 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498529014 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.762958051 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.256844006 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504018227 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.484304801 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081594499 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.324179705 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.541102921 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221314839 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.123472761 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.350286426 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.526394426 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34986475 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.316735353 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.253371617 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.595466405 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544548326 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.090344925 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400126069 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.738750306 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.118097685 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.119885303 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.314398958 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.65227705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507486149 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.950718362 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700255678 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313890296 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.32909175 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789227267 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319592619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.837701063 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931152484 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334366792 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.514748941 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252780382 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327968492 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.325956502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.313226578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.575713456 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.326929196 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.576560412 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327298599 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251589293 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32509461 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840071063 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.195994986 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.320830872 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316748444 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080330892 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333726906 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606188138 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.327327652 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.05434349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328883443 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.253841452 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251527815 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.01178864 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32666488 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300306753 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820228524 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.690409722 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.314102681 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337895419 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167117393 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.570778997 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.332162276 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895193002 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567557332 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.110716028 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348837563 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.417363166 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.152267118 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.326594935 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.198976824 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.553229583 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147201313 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542785501 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.276682155 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.225436704 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.317673603 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538545584 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200966073 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320170359 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581701253 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.054338406 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.327710738 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011871627 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368743421 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.328900164 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338590244 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.702385904 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324201796 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3893979 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33119117 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.330925804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.328118266 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485186453 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331771832 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.330543394 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.333251939 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413827739 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691287455 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.065489974 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.101775969 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.90488482 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081102246 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913526559 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354833664 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321142726 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322876845 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252966017 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471083799 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.84612828 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594954099 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450546566 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.763509392 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352697575 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.162100926 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349621296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541189144 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593241731 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.190787128 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.333335025 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987899376 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.212302794 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332781533 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.529966175 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.828556116 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902691825 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44582108 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.322594032 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754402059 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594189445 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411684407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.321999795 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911557123 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.336954122 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.660799976 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.349474639 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336623684 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476120612 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331372453 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977816854 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358568938 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.483816001 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.096915052 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.318665575 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.585226539 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.767316515 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.333025379 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90571371 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.035244163 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.594713644 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392078229 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331640197 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.431319716 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468436474 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.330688246 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.224231178 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322826598 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167281292 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.031834352 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.333909088 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901067873 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6110096 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.322478178 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.332930376 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354960452 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.332033456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545711499 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044180331 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555095007 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.333229447 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330876395 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.8895254 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903543231 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357216959 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.259108828 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.32713186 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559806353 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582581267 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347689029 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.7802794 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.034123987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889123178 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.303288769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346542724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328678467 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.015850956 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903221344 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.093642156 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821007841 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987335496 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323535034 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622642496 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.328675602 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.327873685 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608675663 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.329358268 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.334867624 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34286223 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.910126782 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104990525 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.34609447 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.253022963 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.26734041 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.552972219 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97104847 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26196192 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327732032 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.499197411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.334854034 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458520177 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.335721377 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.336406548 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34388385 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.089051675 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60157307 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.333368468 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.327440915 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.225902945 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341087984 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343240886 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555056515 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331024218 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.998424497 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.679316126 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.584811494 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337132492 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.31773974 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.333762305 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327712017 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044876029 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29806508 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.864264707 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903761026 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.34028393 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.358353573 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.33480806 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.546203349 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540121512 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329949525 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349320802 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331805171 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346977918 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.229399223 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094578919 seconds)
  done (took 1572.328191212 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.359239243 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.365597997 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.373436083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.388019075 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395643156 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438646234 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.401191193 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451003566 seconds)
  done (took 52.415197711 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.326934829 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.500925333 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.359823711 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.341526638 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.344254727 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.341810439 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.781762891 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.329866959 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.334505736 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.336663323 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.33072451 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.341123309 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.966769164 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.338558803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.329598197 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.319688236 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.344874134 seconds)
  done (took 65.217239865 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.327568136 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.84233905 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.430932647 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.339863655 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.251957268 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.354051086 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.075970938 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.350664959 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.326259625 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.53920023 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.998028704 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.348725351 seconds)
  done (took 84.43226736 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.339465126 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.339238535 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.336834904 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.339266832 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.33818686 seconds)
  done (took 7.940400057 seconds)
done (took 1995.534256227 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.694179794 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.003105157 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.969783551 seconds)
  done (took 5.216709307 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.478353023 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.527193714 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.649415529 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.65116153 seconds)
  done (took 7.54994971 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.608810976 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.718544081 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.523854715 seconds)
  done (took 6.097573837 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.728631578 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.348254509 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.468166449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.329648695 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.33579921 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.338956634 seconds)
  done (took 20.25156429 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.338563436 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.33795163 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.338527466 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.334572548 seconds)
  done (took 6.594351787 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.31077325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.019684113 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.310546919 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.334428685 seconds)
  done (took 18.22054259 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.079662333 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.095816159 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.080877311 seconds)
  done (took 7.499830454 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.344135447 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.184160965 seconds)
  done (took 9.776664037 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.620390571 seconds)
  done (took 2.868653161 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.466924641 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.661003101 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.344475982 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.323539264 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.38517202 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.107659665 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.921432497 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.540618851 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.278456814 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.470260309 seconds)
  done (took 27.743208581 seconds)
done (took 125.302879572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.086282383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.580444239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.534393821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.104434765 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.567856925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.533096492 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.554370108 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.0701333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.569711968 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.561914752 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.05686183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.568964176 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.502154906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.582246125 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.49883801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.705329667 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.570399432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.139700997 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.743530945 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.948344265 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.554086805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.701409291 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.896109603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.717611276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.570512142 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.485760352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.280543678 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.703152517 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.922282374 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.299523574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.487276364 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.116938759 seconds)
  done (took 191.458341614 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.341292754 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.335147169 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.338340145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.337706341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.33591326 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.356617173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.3373834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.350706607 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.358530151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.3422762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.335935032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.352584708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.337668808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.354844084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.336757656 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.35359849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.33526654 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.334867196 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347467978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.336183593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.338545113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.34586792 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.335189455 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.337528403 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.335320303 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.336968053 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.337449637 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.34860039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.337299361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.340710081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.340394941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.350149169 seconds)
  done (took 204.196262732 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.349808549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.338464774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.336032807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.355018471 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.353488202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.348363338 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.354041964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.346006944 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.336221251 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.355882602 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.341699934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.33999454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.339269102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.33788861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.369092875 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.352783204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.339784736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.372309774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.33914061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.341791813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.338338987 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.340505032 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.339844826 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.357085318 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.365827186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.355555665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.352596147 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.340338508 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.340375875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.355292996 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.343535282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.346069231 seconds)
  done (took 204.375768615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.534243791 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.347883847 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.347982534 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.284522043 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.347501676 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.348355047 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.341262849 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.562837971 seconds)
  done (took 14.370090955 seconds)
done (took 615.647768322 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.58752225 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.304964658 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.539465606 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.371809848 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.111617402 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.382844337 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.363450316 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.527362422 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.252527109 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.532354318 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.585564181 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.378385103 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723662708 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.363042903 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.608205288 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.458203086 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.217289913 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.330175278 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.672238777 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.858574789 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.618617161 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.806007831 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.54399897 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.246594034 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.738759046 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.806417239 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.043525275 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.198262771 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.380872902 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.676743174 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.945920013 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.288348986 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.421308846 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.420161877 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.473095954 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.455116991 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.260147822 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.417344394 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.557777756 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.583097074 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.86792452 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.073587877 seconds)
  done (took 91.250399712 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.328914394 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.329282325 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.328826693 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.329765038 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.330678524 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.328727995 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.32907571 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.32883831 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.329217418 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.329967431 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.32810584 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.331150229 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.33047974 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.330714355 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.329604551 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.329079805 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.33069039 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.333020015 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.332503736 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.331037419 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.329875032 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.329431413 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.331417274 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.330029853 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.330970136 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.330317558 seconds)
  done (took 35.837123656 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.348965464 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.594401356 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.75320167 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354778458 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.348194162 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351922345 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.424846548 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.354721428 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.35206216 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.352474327 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.499536298 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.353267734 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384286543 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.782646294 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.352695803 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.351298537 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.349998763 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.349540196 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.609132004 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.367456768 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.445217797 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.354145486 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.426401398 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.361007622 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.370589329 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.349694108 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.355671816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.900614957 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378169878 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.500700877 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.123057885 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.433178323 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.859245657 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.78911867 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.124901785 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.360802925 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.35170942 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.504653919 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.353808013 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.352088878 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.426889615 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.352844234 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.768192506 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.997275692 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.378112578 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.352071711 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.921167486 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.530854606 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.589997014 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.36925305 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.789707118 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.362077215 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.354908974 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353066352 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.591765531 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.359411052 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.35344769 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.927729558 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.376171187 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.428846566 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.355727781 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.352894789 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.611309645 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.353563619 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.601459608 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.35446787 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.361712128 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.371459458 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.768443054 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.357521099 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.010462534 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.371201662 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.354752721 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.503284454 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.603829071 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.954274338 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.375538431 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.617106101 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.874946854 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.444358086 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.357735995 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.892271446 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.458254328 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.35903542 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.357689985 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.356452903 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.354760824 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.401341525 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.428484124 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.936646286 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019864255 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.953721335 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.453020696 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.374843169 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35649974 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.932806472 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383795338 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.356782563 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.766866873 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.023133264 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.372826332 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.363821204 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.013275177 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.38431975 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.432856134 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.370083876 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.778543368 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.358052788 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.403623309 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.355828961 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.364031242 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.377563892 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.433242517 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.36229621 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.356591357 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.985589517 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.53786692 seconds)
  done (took 178.547260024 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.352440777 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.35009633 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.351736503 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.351622586 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.35052414 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.355589054 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.351274323 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.351788034 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.357224995 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.351939139 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.35143527 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.351710588 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.352615375 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.352251013 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.377324552 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.356881086 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.966384525 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.351327829 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.350413936 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.367139841 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.145300056 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.361223452 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.353044099 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.350730168 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.351063337 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.352285939 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.352337671 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.35371217 seconds)
  done (took 152.586533291 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.360537497 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.912618889 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.384749809 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.485703223 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.387345712 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.356728354 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.483547502 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423904485 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383610494 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.357960989 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.358000093 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.653536498 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.361289152 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.860076497 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.545962462 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.511254408 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.867674807 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.376688066 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.357413517 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.358635639 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.490326121 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.363554025 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.65662027 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.923065141 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386493141 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.915706983 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.352117727 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.36069109 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.35862161 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918468981 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.384882222 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.657976595 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.43778507 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.420292473 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.943593977 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.888591757 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.878155779 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.504117578 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.368617147 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.359176214 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.358450835 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.344564458 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.919963008 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.386993268 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361257431 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.908279719 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.388907002 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.362051993 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.370894483 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.358399106 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.419274937 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.445814649 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.688241279 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.934975082 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.462059576 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.388844374 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489241081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.739180913 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.363704071 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.864244621 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.344806063 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924125137 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.388950447 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.346730802 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.361989831 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.36685512 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.508609324 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.489413013 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.874371824 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.379744451 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.865635471 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.524602145 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.360771001 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.361373636 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363381589 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.925795222 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.891098572 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525853597 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.49407608 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.554583817 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.348675156 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.362624537 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.347255362 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.438002724 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.370328776 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.925728591 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.891320105 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.381422773 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.363979433 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.365005349 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.365021554 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.535440035 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.949857287 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.464303516 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.86336707 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.682771668 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.674190512 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.373959779 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.42078237 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.387392564 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.668412122 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.375696624 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418774024 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.812967904 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.666918558 seconds)
  done (took 162.487562356 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.602400443 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.533444219 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.454411674 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.50054106 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.971875349 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.931095902 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.576825345 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.501276361 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.480110029 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.626495179 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.515076977 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.46201718 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.530670416 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.435529661 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.10049084 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.448658004 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.472595064 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.505782887 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.473881719 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.373669617 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.005682665 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.650010807 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.540862242 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.243407627 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.465894449 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.131454198 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.919311486 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.909545991 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.539633923 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.657065585 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.913410344 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.471241533 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.31751272 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.048656984 seconds)
  done (took 65.583492341 seconds)
done (took 687.547976896 seconds)
SAVING RESULT...
DONE!
