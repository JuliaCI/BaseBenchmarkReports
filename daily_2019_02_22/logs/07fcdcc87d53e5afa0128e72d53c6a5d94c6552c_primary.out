cset: moving following pidspec: 23694
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348764086 seconds)
loading group "string"... done (took 0.59911486 seconds)
loading group "linalg"... done (took 7.627580225 seconds)
loading group "parallel"... done (took 0.17872833 seconds)
loading group "find"... done (took 1.227465628 seconds)
loading group "tuple"... done (took 1.914000838 seconds)
loading group "dates"... done (took 1.296832835 seconds)
loading group "micro"... done (took 0.239796667 seconds)
loading group "io"... done (took 0.981205664 seconds)
loading group "scalar"... done (took 40.38222405 seconds)
loading group "sparse"... done (took 12.684657039 seconds)
loading group "broadcast"... done (took 0.996219761 seconds)
loading group "union"... done (took 13.949601148 seconds)
loading group "simd"... done (took 4.655433506 seconds)
loading group "random"... done (took 9.377174102 seconds)
loading group "problem"... done (took 1.953059591 seconds)
loading group "array"... done (took 22.162664432 seconds)
loading group "misc"... done (took 1.985008755 seconds)
loading group "sort"... done (took 3.385057412 seconds)
loading group "collection"... done (took 19.152621424 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.562501573 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144748161 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119636998 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141770921 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186629322 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132596352 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.1418952 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086715208 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.872830326 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160261506 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141908218 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.516750336 seconds)
done (took 4.941210393 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.19657507 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089044422 seconds)
    (2/2) benchmarking "String"...
    done (took 0.100655976 seconds)
  done (took 0.858854622 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067201116 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131520934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083795416 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068479455 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068313111 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083476024 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067683723 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067685202 seconds)
  done (took 1.253969909 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075676085 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070682053 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085701812 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070406753 seconds)
  done (took 0.986323528 seconds)
done (took 4.049493815 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.93566258 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256641225 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193695816 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.484985189 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135677874 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192821497 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662582147 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317602752 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213569165 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102683748 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106689325 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391371165 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108042783 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669941068 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075907932 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106272354 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.159392801 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414780323 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081823362 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084375154 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104659834 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141371996 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101025674 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0788742 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170631868 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070801221 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.153339855 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095082252 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067993863 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252389734 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190100065 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686639043 seconds)
  done (took 10.534875976 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099093296 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122008333 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071065634 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.143878361 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119984237 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072660532 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073570269 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082891434 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094523303 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161223248 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117439539 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124998774 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067682055 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071043643 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102710244 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230862795 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092454324 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102310514 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07180366 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091759421 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109592141 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09956023 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081389711 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096337224 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150721457 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.19342572 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100725467 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112029069 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068930629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096504903 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130506831 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133210905 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067898662 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083447274 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158755889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09661038 seconds)
  done (took 4.589414725 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.104308415 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.177435765 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092807525 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155440321 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086192624 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130576413 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067126959 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100895064 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251713791 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.160057232 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.496040919 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129119754 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088786286 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069486602 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.088443638 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0688517 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.618852157 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.146632706 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123370537 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086312588 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093107971 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071284633 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363658009 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082885294 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067511903 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070367449 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07698169 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14932166 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070020639 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.26706394 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089039686 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089190169 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119946434 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181115041 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097483708 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124123683 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083601158 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068012192 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173519133 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.091518362 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068070832 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091507565 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121847485 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120601152 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.11544961 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069790406 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.199110048 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068936092 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066318702 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102632566 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09395093 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.958876348 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164759012 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094547893 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067576199 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296969312 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103477735 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071350267 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081831291 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259272952 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066935414 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.201297298 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069663234 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0846994 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067430345 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06876003 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369427338 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083615849 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.840123218 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071730862 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078616812 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086602953 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068290327 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090952152 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074224803 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102813166 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068080052 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069215594 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084645723 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067060035 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086679587 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087613756 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.207111888 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086942392 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067715448 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082934411 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087284104 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112917107 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071439058 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067247112 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116859129 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070424415 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08400646 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104500581 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086324401 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103497278 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070916312 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128782248 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068683182 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.147696543 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068633772 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114301536 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074010588 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119305407 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096414505 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070135605 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156652113 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066193456 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083410819 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067863891 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082883852 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070601735 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070061905 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082373188 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082002895 seconds)
  done (took 21.591627745 seconds)
done (took 38.501544876 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.313884366 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098179956 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098850498 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096897059 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080059011 seconds)
  done (took 1.440299266 seconds)
done (took 2.165321982 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.15031192 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103757849 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081800951 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097696321 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082393531 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103783217 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117557888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081447153 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1191893 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065371404 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115169142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064221595 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080320345 seconds)
  done (took 2.015412279 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083679435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085767907 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087577986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082756685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081897299 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083526505 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082910573 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108240931 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081770676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091034288 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066228634 seconds)
  done (took 1.651467267 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082129812 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085099798 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088218446 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082985883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082286306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082687689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081576018 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105609583 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081629734 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091275002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066325004 seconds)
  done (took 1.664303525 seconds)
done (took 6.055901083 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080110477 seconds)
  done (took 0.808930538 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.753956595 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.38665524 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084943658 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.138562275 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.227892437 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.163313578 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.464086738 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115288414 seconds)
  done (took 10.270080572 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.118011412 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089561646 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075451225 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089152337 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074663766 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090291412 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074267685 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085711944 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073437406 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073202237 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08907156 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07084567 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085936878 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072592769 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086832393 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07220507 seconds)
  done (took 2.1226752 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10731968 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105846013 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094481133 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078439055 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093057353 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076035016 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094703118 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077308514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089789881 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07597185 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093826617 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077226737 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090313208 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06849606 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093424776 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079597972 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090532258 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078480069 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095511413 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079748258 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094279972 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067924663 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090624621 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077656028 seconds)
  done (took 2.91949243 seconds)
done (took 16.852479186 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136018386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079638501 seconds)
  done (took 0.951423371 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0862707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101152544 seconds)
  done (took 0.927962765 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086274985 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.083856176 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09374599 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096784674 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08445516 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069761456 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106349933 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070133532 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085043061 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069759674 seconds)
  done (took 1.586599076 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072241961 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096905716 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074241922 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100494378 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077714252 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082708 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077717647 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087556775 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082435489 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081639072 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074031108 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101939183 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074110704 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102439621 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092976672 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071968084 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089120185 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07042531 seconds)
  done (took 2.253572441 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06914967 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070184364 seconds)
  done (took 0.882164813 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070487594 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066347275 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085186874 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070074911 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081589033 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066168671 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081781987 seconds)
  done (took 1.264803897 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.42449143 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111936566 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272423574 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07440889 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109285363 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302819029 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068137824 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073049733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091002372 seconds)
  done (took 2.314971061 seconds)
done (took 10.919422297 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08205723 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087360222 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113047663 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.449793979 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107539413 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068370503 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146698618 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220333695 seconds)
done (took 2.020332575 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130869417 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635159088 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.425787155 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.238942534 seconds)
  done (took 2.047648422 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.394057223 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094320152 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07490457 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069845979 seconds)
  done (took 1.381830969 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069307915 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072678998 seconds)
  done (took 0.891832192 seconds)
done (took 5.200143441 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.101702227 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086303815 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068697416 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069567423 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084957349 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068516386 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066329992 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.084275676 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068758374 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083996771 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068975919 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06932748 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084864232 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065951468 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06669857 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084684839 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065991079 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067253321 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083524654 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066762794 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082789682 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069288335 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066298695 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082686968 seconds)
  done (took 2.597386386 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.090228824 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085984772 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073893411 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090952615 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073932806 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090496759 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074218328 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069333898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089725119 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071190617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088433369 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073429761 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086579851 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072793134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087264122 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072890143 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.090363553 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069797649 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086518888 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073108441 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074274172 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085626185 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073446213 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090187759 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072775736 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089680804 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071249027 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086509461 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074530168 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088815936 seconds)
  done (took 3.168155684 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074235492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065791016 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083297108 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073696884 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067200217 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.084726972 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06757754 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083199317 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067591819 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06612468 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085027823 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066181641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066542396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083894739 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067841874 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086369009 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084639127 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06906173 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083847008 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067112345 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.086527224 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066720352 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067356791 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083259286 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067159668 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066548964 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.082631283 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066474334 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083881072 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065979616 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070070244 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086229487 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066048991 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073456137 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.086381512 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066854552 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086406769 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066920933 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068024647 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082702675 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066176215 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066798779 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082829324 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073422936 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06701421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085606527 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066945001 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08434163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067404288 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069658489 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.082745011 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066427954 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084144945 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068202069 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070911625 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0819693 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067328988 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066421709 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084290876 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066328797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08281994 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066163861 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068810923 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083120455 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082798668 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089763711 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066010953 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068991577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084302833 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068560094 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068615697 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097353554 seconds)
  done (took 6.133871607 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122037735 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09563959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085612828 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06778822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082333716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067266532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071087652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082304834 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069409575 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088782809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067210254 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084729565 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069254384 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082582678 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08364341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069674506 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.089136971 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065014491 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06765784 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087266473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068207778 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086669104 seconds)
  done (took 2.514441126 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.193189205 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091821882 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114566416 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093790051 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087052989 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076358235 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089039088 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072553944 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072829799 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087440988 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071470091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08910288 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071395948 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088172549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0726369 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088150929 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073301968 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087664456 seconds)
  done (took 2.378839246 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081484165 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069372334 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109246649 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070063424 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086448816 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071436899 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09123785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078158064 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088170499 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069856598 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094723069 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183435747 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087822839 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068627505 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087205483 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069284728 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071695484 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085086667 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079021676 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091395125 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075610998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09503253 seconds)
  done (took 2.664004773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084427945 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071219837 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.104140209 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089344787 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065829444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067536812 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092573842 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070898629 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09320152 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071560986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085431011 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070137177 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075182452 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085269269 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074564744 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086244288 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071781268 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086265026 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071902542 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066710836 seconds)
  done (took 2.345515632 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091179787 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087677293 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070949731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095656119 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071664366 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088286537 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080529542 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088479606 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070903671 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.112509938 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071690881 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08732287 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078631008 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092498375 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071703782 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095351138 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095768198 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08039424 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087282873 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070927727 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111969457 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071089156 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096624807 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071740576 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.088361848 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0707506 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087390668 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077098483 seconds)
  done (took 3.128678909 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069410418 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068413526 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083201174 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06735015 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067986461 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083103366 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066739903 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066787106 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086063901 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066798514 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084780203 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069327748 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069221338 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085096226 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069586393 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069151104 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085495671 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066671986 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066836027 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08376449 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069485427 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08503787 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069202356 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066596261 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083637798 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069856221 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067625923 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082900609 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069186111 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067096609 seconds)
  done (took 2.972822289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.0798302 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093553167 seconds)
  done (took 0.940689795 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067591925 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084226764 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084101329 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073329586 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090282602 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069636879 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095823741 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074574167 seconds)
  done (took 1.404966032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085504709 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080846405 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087868236 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098627922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080819038 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086646897 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162946745 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088323954 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076974574 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085083977 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083699644 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085392169 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075741492 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069214602 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092744172 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075290916 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084265957 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075984748 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.073171645 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085764129 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071003999 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098756076 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074669696 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.083624097 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071096788 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.080188866 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099311642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071153007 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089588904 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078287925 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092219915 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.0638828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08553398 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070648677 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06799109 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097242257 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086155541 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089465874 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079618267 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087945357 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081131521 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082590501 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075812005 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093451502 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081296465 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071403131 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087737608 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065251355 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084454835 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072697284 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065904497 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087045932 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064443697 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094454841 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073959754 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098220539 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069407709 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072309742 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089855105 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074526111 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093397204 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072166022 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073201706 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086231313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077028476 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091286513 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079431687 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081700249 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06376565 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068564216 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097490577 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094443533 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094082719 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07117656 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087958964 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06802273 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090057004 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071648661 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076081638 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092906293 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070653515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092502021 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077342748 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086828688 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072749215 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.095215926 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067904611 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07267308 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084066826 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086786861 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.085430595 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068300131 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083772011 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080298521 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073268205 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.087427324 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068154432 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094091238 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063472431 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070650504 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087880585 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071134484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098555512 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075759568 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093029033 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079732176 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095178416 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07014728 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0909871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066579417 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071558428 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085699281 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077894335 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.08076831 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072403459 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071033467 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088122332 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080244606 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084946139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07133672 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095249733 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075376981 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06854855 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083046058 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073654711 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087355438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073986434 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095455833 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068153749 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066016547 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083010629 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074049462 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086592109 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073797546 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091699952 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073228501 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064546207 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084995915 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073588208 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097148545 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070441624 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087692291 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07653407 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071166544 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085738832 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076765135 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089477157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068837937 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075962959 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087815001 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065952082 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090842979 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072698223 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086296177 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073714536 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074143872 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089815298 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070224881 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085527669 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076270136 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087375287 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068343883 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070834028 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086057316 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081446932 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090128519 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065594739 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066788305 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094522064 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067793683 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08697353 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068989065 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07253419 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088281325 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068005372 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086424988 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072321893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099606682 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074675658 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088495449 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075665508 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098278431 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069056593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073230849 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087089532 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071303345 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087837095 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079452403 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075863746 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092964557 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071705861 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083709361 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076245231 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09571784 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069064632 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068622014 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086743749 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073608601 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.093298574 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074427515 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.088348015 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067830213 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07006373 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090678576 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073132385 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086482035 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069243257 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092018594 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.0693163 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09437387 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071376423 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081050321 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091987326 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065312476 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090328732 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067944427 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093937807 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065462683 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067680239 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086492482 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071730508 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068203743 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090940627 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065349524 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095497866 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07860465 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08746796 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068763338 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070166461 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094260031 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071343196 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091767157 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074213798 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093816029 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081531347 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069446626 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091461911 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081322252 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.087855925 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064662841 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093220014 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068410801 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069022679 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085949608 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068541991 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090301909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079234691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096215343 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064566712 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073131682 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085497971 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068812486 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082468555 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075171802 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073119982 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087822896 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077123202 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088623896 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071540125 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073938438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087220492 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0708864 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08880097 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073509894 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08847703 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073228322 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069483047 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090777651 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068865932 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085422362 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071368839 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070694578 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087435532 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075546972 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08707985 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071023548 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073053305 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089662812 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07086636 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08826289 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069157899 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090515103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071133679 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070408246 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091254309 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065087972 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095250312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070038719 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078046502 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087729312 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066713973 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092578529 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072719933 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.092070307 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071366046 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070757437 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089317705 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070488779 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.091121796 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07628368 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067708432 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09897552 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078476618 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088791524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072825849 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087750176 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071596387 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069404915 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088269833 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071595228 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087680017 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070060691 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093086908 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073369738 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070138686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08964507 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071752621 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087998127 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071479717 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064822214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087386461 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069774985 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086820337 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080784913 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071178852 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087130639 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069956416 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089303055 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06935217 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067425244 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095916745 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09670615 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071133136 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077866772 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088239271 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071568676 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099134099 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06695689 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085774543 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06835091 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067547316 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096476046 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071108122 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097286753 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070468484 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069327682 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.085653914 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071348716 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086225762 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06461748 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067250476 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091567697 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068506438 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08719806 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07101994 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072656626 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088353541 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080444941 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088010812 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070134334 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088522001 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067150921 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068981506 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08795144 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073223952 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088512764 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067929688 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067681488 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087562911 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071005463 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072083445 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.088524879 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072849051 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096154451 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070090588 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090363566 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073939859 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.0654943 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091024655 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07023226 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087289567 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069356678 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07367474 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092258729 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071749358 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097193511 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070530383 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08937242 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070142287 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067338479 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.089073541 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070408643 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088407726 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069143905 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07202565 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096341057 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067301998 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092172237 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070162296 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088500016 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077195475 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071398831 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091399858 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078942017 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087702796 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072513112 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096247526 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074352839 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09064081 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072548525 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07136808 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094752401 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069164221 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094401564 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070928197 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071173372 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089752179 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067962183 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088048538 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070134536 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069306735 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094728089 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070967557 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087492837 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070095852 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067904897 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089750044 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074786329 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096398665 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073218464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091713647 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066538009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067004131 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089659238 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067617959 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090903004 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073533033 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075796091 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091263733 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069882748 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087651206 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079564178 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093877792 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074204272 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067271173 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.092241279 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07087383 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.090877414 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071175355 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069946761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090166828 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0742782 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090565088 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069191349 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095695462 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073354457 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072022371 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08990428 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070738522 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088186364 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066177657 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070499426 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.090602605 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075452678 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091224965 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071320172 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100167658 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068416936 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070487659 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092912313 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069710919 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093502032 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065715379 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0718794 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089864308 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071298335 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084486891 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070922206 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067918094 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091390636 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070060965 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08420105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082359704 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098830657 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073678207 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069318621 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088648305 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065203326 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.084534493 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070660592 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07165951 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09075921 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081296056 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089035762 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069881312 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.083293296 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070729595 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074018829 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09176685 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067621688 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083285377 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069901133 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073127961 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093956503 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068557242 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088452051 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07387602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072004117 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086671725 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073788333 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08565639 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074371733 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103065425 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072592161 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071031359 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094516647 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078674841 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089681414 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066678407 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08959541 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073200219 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070390174 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090116266 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071720264 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105123275 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073283947 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087896645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069306289 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073441118 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088702736 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079313817 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089626754 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.072032264 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093734552 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072521775 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097461302 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073527896 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095950225 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073863782 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073218974 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087866892 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070384514 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.086525836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069627502 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070872888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089984906 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074580392 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.0969868 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069910318 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101039542 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079368615 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090155906 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067994128 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070104734 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088277444 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066192414 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071305297 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08721667 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068447935 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087016323 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069927089 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070796725 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094502354 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071801595 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.089657242 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070371456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064588227 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090981765 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072577551 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08997429 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067229765 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.07073442 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090373937 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074366079 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092865158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067515899 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089917503 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072308052 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070434746 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083998849 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077706345 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087781212 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073343389 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070929245 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088979858 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071904715 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093229992 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076045237 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089197834 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073727638 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079383209 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091978464 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067557558 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086163344 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075836342 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068961926 seconds)
  done (took 48.35076675 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11107604 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082827848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063331819 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083061627 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078619672 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085565679 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065897033 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066198741 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084778359 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069268636 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084141809 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06623871 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093443144 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092090151 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098680891 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088652555 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065878068 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067392767 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085110888 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066717902 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093820607 seconds)
  done (took 2.501158072 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089773532 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103414148 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081555683 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103523879 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095188194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082499857 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099437258 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082566773 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103830371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095725516 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085139408 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099605945 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077859765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096345267 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078357116 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098481096 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103322828 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076075028 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100373289 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081588628 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097681798 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10030176 seconds)
  done (took 2.834331215 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070564338 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068444765 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089952022 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065813196 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06920514 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083787867 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.074148591 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086316232 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073765524 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068310674 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.096035493 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068503867 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090076493 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.068122513 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069539258 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086432325 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137593863 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073829422 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.088780272 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070583231 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065487342 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091097225 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065192088 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085051919 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069081955 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073679396 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089894315 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067630519 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088314406 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068998993 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068876959 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.087153463 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071742569 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071060464 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088526956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068511185 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.088705431 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069473576 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065620361 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087063273 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070328558 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084639037 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070216986 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071183077 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087361208 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067441458 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089494982 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070207104 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065342275 seconds)
  done (took 4.611573998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08850032 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143917531 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092371988 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127135228 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086006279 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09820805 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073972019 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12768162 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087583049 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068686348 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.107122261 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085999313 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090139579 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074663614 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09586586 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070212544 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090315266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068475077 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093625642 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068726658 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093352076 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076802775 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104751752 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101934376 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074536608 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068669207 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089047955 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074987145 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103909953 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093686943 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075147565 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094355008 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08569937 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094153941 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069989998 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091420355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086760259 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089073572 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072561282 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.087356763 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073091925 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093396007 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077056956 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107110264 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.0695167 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094544312 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0701043 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.086127564 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083051222 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090724026 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078265367 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10497947 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.0925446 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.07014503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092932159 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086266997 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088855284 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069428054 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091496717 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.083289104 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.086726682 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07434849 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103645477 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071953097 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097625435 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085623973 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.09484363 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074031686 seconds)
  done (took 6.908686242 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07890137 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094957245 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085947371 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105752477 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09521812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077559059 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095379942 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07702393 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095339215 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081278451 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096170817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119649762 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071684702 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099716368 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076807893 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0976604 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076901639 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096834513 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095698721 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076559485 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096174683 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085229535 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096230653 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104615106 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107710195 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091633272 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07587738 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0963987 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104059519 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076779968 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107136905 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076486411 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096009447 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104537568 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088721167 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095692136 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069208946 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096151292 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075964843 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095330384 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071086718 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104624744 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095912787 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071898572 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095432814 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076240627 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104460127 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.108028791 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078708189 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10107473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077291072 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104677959 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094401946 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077483729 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103902363 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128826334 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084821025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105022543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095789752 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0847083 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105113089 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111804777 seconds)
  done (took 6.536340401 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092860677 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09893697 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101291076 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066531553 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067873666 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094484092 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067602823 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087408329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07924738 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098620924 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082161508 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093048983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077689986 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10240043 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092377443 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077194668 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093063078 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074008 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09868243 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074934313 seconds)
  done (took 2.543827101 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079233005 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106705296 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071180522 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09522509 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073869567 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076292372 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092544391 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073382443 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089785226 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072521257 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101045019 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081447337 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090541758 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076398049 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101177932 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075968903 seconds)
  done (took 2.18457434 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082017429 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100870979 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085350722 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091307992 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067904205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086917387 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069575371 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065301498 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.087317542 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084461206 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090696989 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072928851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090122677 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068241342 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06640327 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09368905 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065927937 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088101629 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070448745 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105529389 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08176343 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088614668 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070978653 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.092332573 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070579355 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095531678 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070386581 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068360979 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088815373 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069625954 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090024501 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077077475 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087123659 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068659075 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.087599859 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068564728 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069833093 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090007047 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072737389 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.090218181 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068342527 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088797485 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070703175 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071944913 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086384468 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07012382 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085809373 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076390569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067445078 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.092094877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070047285 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.093070713 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070760621 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10056099 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07455315 seconds)
  done (took 5.248787243 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084915862 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073473352 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085685292 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068577769 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092945257 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07269022 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074024926 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093392526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071987326 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087389371 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071890664 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092665063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07279491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074010492 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092523882 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07386037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085951953 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073132847 seconds)
  done (took 2.273552978 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076648063 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068758098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09767321 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070952119 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090197322 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072991644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066279746 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088873869 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068820699 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090506637 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070602754 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072606156 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088498719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072304156 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089590613 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071164903 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072944071 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089434432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070546349 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086581433 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072529024 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068774908 seconds)
  done (took 2.550364969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.077999106 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.098206526 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.171642276 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.113340984 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.087782911 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104793092 seconds)
  done (took 1.486964107 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096476882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104826363 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071794083 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112501827 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079835501 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092872947 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073260071 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092231701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082672501 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10595778 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072396412 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103289477 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100818946 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084603856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099389542 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078615159 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092888048 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072961512 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091350165 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110695766 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073738039 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102152044 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073161611 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091730504 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07279981 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101263877 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101162378 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086343763 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091577261 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081721658 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097874393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072611593 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101224795 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105341944 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074275661 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101743729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072617204 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111703149 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098396167 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081652968 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093186153 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078682691 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102157964 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077715974 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102026487 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091380135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078400409 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092262807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072594671 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118277401 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098453731 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080603036 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099387902 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101394734 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082791043 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119067023 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106950105 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081452694 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098504854 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107209209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081299825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098277438 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100103688 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087425153 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081951218 seconds)
  done (took 6.876519606 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087303172 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110763455 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073656246 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106540023 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100915478 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072834327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092085041 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072404332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091885164 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072985944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137213866 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072135576 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10145767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101886903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073137832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092517701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072361477 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101939622 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072750306 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118439991 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091782354 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081870407 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102479166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101599772 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086679768 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099502418 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072736259 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093947534 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090461928 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073064649 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097208964 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072751669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100475879 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072651489 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101022897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072603197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092369689 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078569188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092805446 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098093426 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082598273 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112308336 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073043564 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092727335 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106071897 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072365127 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092424119 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072994247 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093234923 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072674715 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106134943 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087066738 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108272781 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101791099 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072777894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093830802 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072362685 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092497954 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072904207 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099109356 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100273792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073882105 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117763491 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091882111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072873151 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101712014 seconds)
  done (took 6.775086901 seconds)
done (took 132.680113353 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205825961 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185530301 seconds)
  done (took 1.224976686 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073065816 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.121131194 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083229984 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133564246 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088884761 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102665802 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121260869 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082310299 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069430982 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.092520475 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070809981 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092480622 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135885697 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069083279 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091140329 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072388087 seconds)
  done (took 2.334646956 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105873507 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.207312852 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.115646919 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069649541 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105624991 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082658887 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.091041117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081812491 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097812412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07026447 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103710412 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080984798 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069418403 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.102081544 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097054357 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083936672 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068912078 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102843814 seconds)
  done (took 2.574270193 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098264116 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.111368583 seconds)
  done (took 1.050001116 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204607932 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125046377 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209672237 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.485760563 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.250817075 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294111839 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.180776385 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.181368924 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164492444 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174646406 seconds)
  done (took 3.11010087 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100875621 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177989068 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.328984273 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.146166328 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.093145476 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.122182566 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147457644 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.116642137 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.088070305 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.107323955 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.106328288 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081862519 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.12515093 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079507948 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.100777261 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082174269 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128466275 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078304498 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099893686 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080209138 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124412039 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06998051 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.101194882 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07745974 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10496917 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082920965 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089928334 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070532318 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100846848 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07920617 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104785132 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.120307367 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083950144 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.139162349 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.109600673 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.139193948 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102474051 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07747241 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079098267 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099267904 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081838901 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103466005 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109800204 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080923266 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069250155 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102055724 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069622752 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090555683 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084525925 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104854216 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08481184 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104216283 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.138604937 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.103396015 seconds)
  done (took 6.513578161 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.770167756 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141918399 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076864637 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.846711279 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119781064 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087588941 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.765874621 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097627823 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240731905 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762174711 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11471711 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079376289 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.210293798 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218323811 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.91283721 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28953683 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.647316827 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10761089 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112554579 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136009234 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167604468 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.163515065 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.156282947 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416192329 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099601903 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075037835 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140320606 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101773953 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144152827 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108013223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075868735 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162653424 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.25375336 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.163493786 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098449715 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07332093 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072200585 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.175411097 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.22925947 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.201032553 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164747323 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072381952 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095239022 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15048163 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139160041 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072446679 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148187939 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181397148 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.157362463 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077257976 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103542752 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149138888 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146714676 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150375396 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106064636 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303534141 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30098955 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075452363 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128891449 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089604794 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.247379554 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108613448 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.190597557 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145578804 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19931187 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075535432 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.764512156 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.155187953 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095093063 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080332157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127808958 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100176861 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14950889 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152978978 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390718704 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.152620363 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077860042 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096566822 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190346861 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.110183705 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075323971 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148624935 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10079189 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130264145 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.155022127 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.15782914 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.155475896 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233924867 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.153555965 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.148233897 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.100117577 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131997472 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.079613161 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.198063739 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.203320103 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.14935409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.195894244 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.165692867 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14973531 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154908977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081415491 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17852961 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126382584 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.087027727 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147700176 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201370615 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.130476847 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108572747 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.078702021 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.147808785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.132886076 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112655945 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.148924463 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156918586 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.439920368 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.174377325 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071847091 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11233442 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149213181 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148706443 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102199562 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230007686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130337757 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.15682914 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127540281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092635181 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128624931 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.150278167 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083949275 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13115085 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.165317408 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082766859 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.219565419 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20152351 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.084465895 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228104379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.168989773 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080982333 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157677974 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127922574 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152241248 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103856971 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147212327 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100683031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733683917 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.171556707 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129144265 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077702537 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171859493 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075307169 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107785263 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087119843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091361091 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76287525 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108168972 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101838379 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08624566 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100533419 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128158517 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145779244 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07921406 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168140803 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.195268033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103398998 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127780515 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088768869 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.146944089 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101630254 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.109011264 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088575975 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.111577832 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130864882 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077885117 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110127883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.155829126 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.148140696 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.205073568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.557915461 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096773233 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087582101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213686915 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096748379 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.256088461 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145187431 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211624666 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14983628 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.10555882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301996962 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.152880402 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171997452 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091186057 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158937004 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092597729 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14533989 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.152625824 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096246137 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080615044 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.149025031 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.177273725 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.152963145 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953220316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073253138 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210087304 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091902289 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.158791984 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080487196 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103750861 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274976311 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074991469 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.156242243 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153709004 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099388369 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.1097281 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.837176016 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086527131 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.164161696 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079069619 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207919192 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149336566 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144911691 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167260103 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081781288 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.148498326 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.195947204 seconds)
  done (took 42.241484098 seconds)
done (took 59.886655459 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287293823 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219026417 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.235573394 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149597544 seconds)
  done (took 1.832060622 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150376576 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.112588001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.124154156 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090800438 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.11082337 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090365098 seconds)
  done (took 1.536709285 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.434077456 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.281990871 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24227569 seconds)
  done (took 1.828598449 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.303759223 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234460744 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461288582 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.307380631 seconds)
  done (took 2.27880933 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197413316 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.120098014 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.090999297 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086702963 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.190122656 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252562878 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130987197 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195867126 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.105126992 seconds)
  done (took 2.27824714 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.187187395 seconds)
done (took 10.806173592 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.256122473 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.226315452 seconds)
    (3/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.201391354 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.205426754 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.222283145 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.14009012 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197120475 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.109392722 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.208991713 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.134725559 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.103634068 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087079744 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081818244 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.117049462 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.127064539 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103258848 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085327425 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.227192884 seconds)
    (19/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.170891483 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.198086196 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.153305257 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.145986265 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.216045892 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.11102147 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.169682531 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.16248524 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.103297086 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079723044 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098587634 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.0765808 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.113552066 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100410989 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078460136 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118607728 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.114740749 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.168987485 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.22773786 seconds)
    (38/309) benchmarking ("sort", Int8, false)...
    done (took 0.17115574 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120065389 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.200215538 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.12092249 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078551561 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122033505 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075053593 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.118326332 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064880855 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.214574248 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.162544824 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175373887 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.151118202 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070989193 seconds)
    (52/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100937496 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.10679323 seconds)
    (54/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102314737 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.200011285 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.097908646 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093503544 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119614364 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150751014 seconds)
    (60/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171686007 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067456108 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117632899 seconds)
    (63/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079590203 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.102300793 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07451024 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058948839 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096346528 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091646202 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075689916 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096655635 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.160939542 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07252935 seconds)
    (73/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21044422 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190816084 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053509746 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.092288091 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.219469684 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18098347 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.208031718 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119355459 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066380061 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087307649 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.179602047 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.164643138 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072303129 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.093169869 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10895442 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.097991801 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.179733138 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099002651 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.117329269 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.095941497 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055726968 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124308344 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056118869 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.100947066 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055628605 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144878543 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.076364735 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149465511 seconds)
    (101/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084140531 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.184481452 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064512748 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092707298 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055514557 seconds)
    (106/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06543804 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126276495 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056030948 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.054731175 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093168966 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080756731 seconds)
    (112/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056736259 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.101281393 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078587193 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.097555249 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 0.163864696 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078618744 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076903325 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124409256 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077664816 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.16648805 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066312679 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.097370376 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077648019 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.129724726 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116691463 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.129727709 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075964788 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091472223 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092798266 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098370317 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092328511 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.189351399 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075563891 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089624295 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075782411 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077545501 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075489214 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131995298 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.096945805 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069875876 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074004397 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.11541618 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165072953 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073855931 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064932482 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100510359 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056182421 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073636078 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160072403 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122956964 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068594602 seconds)
    (153/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.172656472 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151819846 seconds)
    (155/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.088421379 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075055533 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06882224 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105212081 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053904757 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063562394 seconds)
    (161/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.094849156 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.291383168 seconds)
    (163/309) benchmarking ("sort", Float32, false)...
    done (took 0.153230831 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078661643 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.109452702 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.100377318 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144458256 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053451298 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089858721 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057118829 seconds)
    (171/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078221938 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078570478 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137013865 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092453764 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.072975422 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071683932 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16952987 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.110898982 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093187913 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075948884 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193987011 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068679754 seconds)
    (183/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217044643 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100331405 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.182905759 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069704946 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070628453 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.156472874 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053731553 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075995727 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05298161 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075359338 seconds)
    (193/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115065839 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071743141 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.158705879 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067693745 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.199736348 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070159013 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080984045 seconds)
    (200/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056821348 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.119229864 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070102806 seconds)
    (203/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.134898186 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.135823261 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080642725 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078693078 seconds)
    (207/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.055817254 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.101268908 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072687274 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 0.153867933 seconds)
    (211/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056442055 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112110684 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16585638 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055245848 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09297834 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05562524 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075678842 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.111163936 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069463819 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102121964 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07766808 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055444739 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138924512 seconds)
    (224/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079974281 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.093375506 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077042078 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.198558839 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070083096 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168940287 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076285245 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088702415 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113004505 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107412442 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068326376 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07102067 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09355278 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078970275 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144853254 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055401967 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168781787 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.0807289 seconds)
    (242/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079023323 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055797127 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075973777 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091722433 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070352482 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075392759 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.163376115 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070383663 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.079712018 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174021054 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093368016 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094796008 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079972558 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127978905 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.102770445 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075663648 seconds)
    (258/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066012376 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141291367 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078153091 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094011312 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069503951 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073417908 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098951092 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054369574 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053700289 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078114605 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055111952 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.207246861 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056696827 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071399825 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100134938 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149852447 seconds)
    (274/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.080425068 seconds)
    (275/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055332698 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055547893 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123285616 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070965039 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102226342 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096556187 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070029643 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09506604 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056635909 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055488624 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093510564 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.056556763 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05525366 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.1756192 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078279352 seconds)
    (290/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120942786 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069679017 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092896371 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056655721 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071243427 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099365384 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066328555 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073015362 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.11200955 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.056494643 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099322409 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056486147 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064917715 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081362989 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096890612 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077757114 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.100249929 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071709966 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055666564 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093246883 seconds)
  done (took 34.442963253 seconds)
done (took 35.307546275 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084894044 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120171538 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080004415 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.121957364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086510931 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.107368382 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077655233 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.107306913 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084753003 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.109865725 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083976138 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.0587391 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102687191 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079272296 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104012761 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097960882 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106027865 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076535627 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101283661 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068535795 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078210054 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092435972 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070847375 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058066287 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105740069 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07662165 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100785574 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079374617 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070835051 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093635202 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.0730018 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100188309 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069095733 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083139586 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098754605 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077876575 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103574197 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080876389 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071954124 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093243037 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078747596 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092784178 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077249639 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078188992 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.099385767 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075362502 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100920021 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084939417 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122072981 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072800549 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078907349 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105321961 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082828015 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.099682247 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07421329 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102086178 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075883001 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122463296 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079096926 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073799713 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102842643 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07966724 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.099934046 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078633324 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078719876 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105779599 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081472548 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098939773 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081013389 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076298704 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093464932 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078065808 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.097651312 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.0695736 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080432439 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104251973 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069678927 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.098815891 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076715155 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07634109 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.093134751 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0724828 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071979173 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099261541 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073137037 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05879513 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096777441 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076288487 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090811142 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077706846 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074627757 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098629134 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070654512 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102971585 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070103858 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074663833 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091629861 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069105537 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070732795 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096167728 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070440258 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093271794 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07947324 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071774651 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.099779719 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084885916 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092722 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076930957 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069695485 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092731419 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086701314 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103426289 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070825415 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073445368 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092827286 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077246772 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069737638 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093488284 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070323954 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093403259 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076576389 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069950563 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096568912 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077098895 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.084482529 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.096249562 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073626078 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09536472 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070779599 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076343778 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094174807 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071067112 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0718831 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.090338783 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073259653 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071035324 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.100836292 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072502003 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101144971 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07205709 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079458299 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097550797 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075720286 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.098988654 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069835686 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062316643 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096325478 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072704963 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071311542 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093631905 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071282689 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069942801 seconds)
done (took 13.847752565 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068294815 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17609299 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131275329 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099943541 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114961078 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06900932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.103901539 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134470325 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071071482 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132169077 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091166662 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111089995 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143620328 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069676424 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069634775 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097057458 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07196495 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11763303 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107789129 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114749477 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148925689 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068369292 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126337275 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095028327 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.114851434 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.121068147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068658801 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094835255 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071934058 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.130087916 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089860352 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072268319 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091844054 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.127402503 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097594242 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111833762 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068473442 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.110031282 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068269522 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068943218 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.118383664 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12565578 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107997708 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084744501 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.094591125 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.072794832 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06942858 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115159952 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119641434 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086433168 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11786997 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.142391348 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073268021 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.111502772 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06780816 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115265169 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08891394 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094628028 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070863243 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071976932 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092023393 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073411921 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119327427 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123147733 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076161601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.112024403 seconds)
  done (took 7.496795598 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089715773 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120849484 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089507682 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112327158 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068765192 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069893823 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.09172614 seconds)
  done (took 1.569428306 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071376707 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091733266 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115731486 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093219266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11165696 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091898013 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102307221 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070030373 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109434335 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070209201 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114345671 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108429858 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094250571 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076139025 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118546686 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069300172 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116608448 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070304054 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072418192 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116997856 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072688224 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114064763 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070993877 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069265243 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106619125 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069993646 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141490102 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074075985 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093399269 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072538764 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068290332 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143980256 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107217244 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080371623 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092307361 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085610846 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.109200284 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069898587 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088241362 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101762866 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08602975 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095914931 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072111182 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070124629 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099980713 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083378731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096541619 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.07225621 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07470232 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116929847 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071582215 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110699495 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07168175 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076948061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097492666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077780471 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10555574 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07223896 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115084693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07343738 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090309205 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114804332 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086784081 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113311517 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07372612 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110472498 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085771435 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.097271654 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07346593 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075090692 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113987629 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068898057 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07352499 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108524687 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073327217 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.12084333 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096082257 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097336704 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082276294 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.09576977 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071888155 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071717657 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118913183 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073671009 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093083374 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074533612 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073356179 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090358194 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068592517 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072556152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091134151 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071421608 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09524127 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070600248 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072846907 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.110766035 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071039649 seconds)
  done (took 9.62676862 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070792472 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071052851 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094680914 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070444406 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070818209 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093389616 seconds)
  done (took 1.404408855 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10181331 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095560766 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084987335 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099327294 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11105669 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108718262 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085393225 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108846442 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088168564 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105492858 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085718761 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10985124 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091156198 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100075133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086441047 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09788207 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085134834 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103859276 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081782631 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099837421 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091024059 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100506646 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076479754 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.109931391 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073828871 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098597045 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081169647 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.105811303 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082244688 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109305101 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076817172 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097128231 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074847643 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108499173 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086359031 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09795097 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076220192 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074340625 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103171046 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072762597 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109587005 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076271804 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105179476 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074431641 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.108965957 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075959021 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097752081 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079813464 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.10779618 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074356734 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097729531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075379917 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096660363 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075490819 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074676225 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107815122 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096414208 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086176228 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.100113732 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075121139 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073906455 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096631056 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084898188 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095627346 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083431905 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097302021 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073949432 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100125351 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077482917 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09843513 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075184295 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097209414 seconds)
  done (took 7.513275277 seconds)
done (took 28.530477391 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.649464676 seconds)
  done (took 1.578055128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.798487771 seconds)
  done (took 1.731116891 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.883035538 seconds)
  done (took 16.826812213 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656411987 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.80431522 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.823251659 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15790989 seconds)
  done (took 3.379556426 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.880553446 seconds)
  done (took 1.833321088 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245708917 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255634538 seconds)
  done (took 1.439408758 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.723435294 seconds)
  done (took 1.666160209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.307525383 seconds)
  done (took 2.244446039 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341134078 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189185434 seconds)
  done (took 1.480288793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.532407819 seconds)
  done (took 1.477440971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.523825706 seconds)
  done (took 7.473122946 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233328774 seconds)
  done (took 1.19056826 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.272208932 seconds)
  done (took 1.218917347 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.242568449 seconds)
  done (took 4.187319202 seconds)
done (took 48.657866465 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08108128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084503529 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107568757 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081881531 seconds)
  done (took 1.29624749 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081611543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075469072 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104050351 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074841457 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105222324 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075779038 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101489658 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080839678 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099750398 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077903189 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075753903 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099440154 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079493937 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103005732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075092964 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07995975 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103542155 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075484225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103539285 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076785043 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097043114 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079100964 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103235617 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074676774 seconds)
  done (took 3.056750077 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080770848 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075416348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100114673 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075356044 seconds)
  done (took 1.290157446 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079061873 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118421206 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093697556 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104972448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097525379 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115370639 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072732916 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072337687 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097455959 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079575674 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094244154 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102668493 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115157488 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07992066 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10580068 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070275813 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096113611 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094061646 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081799684 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105913304 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075945339 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.105732345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073255011 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.120601941 seconds)
  done (took 3.208466401 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079781963 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128880026 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083298717 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117767069 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097736216 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070594632 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105563335 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09713839 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157112683 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.093955348 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074861758 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069992462 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101221066 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069689549 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081957433 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140055088 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.143457239 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073524637 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126593888 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070804094 seconds)
  done (took 2.935054604 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077449159 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072903869 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093278751 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073496487 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081353954 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101138969 seconds)
  done (took 1.463686071 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069783118 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069939663 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093808769 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071833326 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076223714 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.096139577 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07030085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071708423 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095565347 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070769959 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.095197324 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071542766 seconds)
  done (took 1.91158682 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.45617561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071789053 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095071455 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068233329 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074353608 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095009163 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08652792 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072686921 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122731313 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070917945 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096098141 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073322086 seconds)
  done (took 2.347055482 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276473829 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08235694 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.346451998 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176585497 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146457617 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162966062 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1339406 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123561055 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203613155 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142137753 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232018375 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229777121 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114250531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195680392 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092476249 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135439314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217160057 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202560889 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132712435 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231523994 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187554694 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160398096 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210279221 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132330279 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138519226 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151277079 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074070911 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107840432 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240263738 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167034493 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206572593 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139591546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099779157 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240799448 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226567841 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200646187 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166215757 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08811066 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160082854 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169543421 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263823134 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116376279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226165266 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112444808 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108666916 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176571243 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149428267 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.150166276 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139530291 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116214817 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204360934 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249040179 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175172908 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092488897 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139233494 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142058216 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146712085 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131372152 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250827274 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2242328 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163821831 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073490633 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124541917 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215124985 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163504418 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145837084 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159507711 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121469296 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17552268 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218419306 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148851022 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180613278 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190720969 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09304563 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149927801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20165072 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15965938 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237295987 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159504207 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07553138 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155108355 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130999595 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110284201 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148546802 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103639397 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240361111 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103879303 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143163645 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141177348 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141080271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14088526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230322131 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185271199 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134925288 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06956685 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132310074 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154679018 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204966906 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092175533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138623691 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151406672 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.105105026 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171369489 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101948055 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156995663 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081954693 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181739249 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16948907 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079818245 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157031387 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131152957 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130742346 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170312468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227297322 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094100898 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110992967 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233532527 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159962075 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135340788 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182986652 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220629267 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130898049 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106913864 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211217089 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251310318 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117989168 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206056682 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134491518 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11247671 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093493716 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182582284 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120583185 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152604393 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110800506 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15672233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235596633 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078616238 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124490689 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169693755 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109320654 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108104465 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143440926 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105987653 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124156385 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129775645 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135062443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174468927 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159252089 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136559887 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158122554 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129829929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22689912 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118114407 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133088312 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109654051 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097612549 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169720546 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224219289 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08418304 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235286601 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159827888 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133493137 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152086177 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086771627 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199878276 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082311037 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098706812 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179660914 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141983644 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141930947 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192649101 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133904594 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160370073 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.154082174 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191518502 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166525154 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166946246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13553232 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116267805 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144082884 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160612699 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076247578 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123371309 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.111071554 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133109798 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099976007 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110721706 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177878412 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16032469 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126533664 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143011983 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127222827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185464242 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105277999 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163820511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.150936222 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124088837 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194187703 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221443068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170466644 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130398256 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206082036 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075222056 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076927379 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118644075 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161932349 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112001129 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087711306 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172737856 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187580316 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161888314 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196510718 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116797172 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153553199 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220587988 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074869022 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148129483 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211720212 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159699722 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.134532004 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11437142 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128495904 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183003714 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134600287 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256503632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148072889 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157482194 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21639902 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132496035 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08428353 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134088433 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173147204 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135393447 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215272649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130343613 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092439156 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142182718 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10960601 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134588359 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160662445 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151063594 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19719296 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125084551 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191969121 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080635985 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148092463 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179558143 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155271021 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067183376 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153211678 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230734957 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124450389 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151946498 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195192964 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10736514 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155213594 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245975546 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182295838 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113948481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139602642 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154400172 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165785379 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150638125 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177405235 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140442503 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192439752 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117487481 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114111506 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117072998 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103249185 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138938371 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127078655 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144716057 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149944899 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124532103 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167222885 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144009469 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142452175 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15122781 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126479253 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095960226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127515407 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242153448 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153684077 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241474871 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1309548 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189663986 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236245396 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079476636 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10848729 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107888522 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178007128 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087726305 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194157198 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100633988 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135002197 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160471643 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205209737 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099933339 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096537481 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117395314 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194273623 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143089246 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103896797 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136204429 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22951152 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134646849 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082931758 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159124468 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134628923 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133649358 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24405139 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064863986 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126803764 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07949321 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109063219 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165091333 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222203269 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086800242 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155777627 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15124439 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154858012 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163735591 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130089576 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126938387 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142705657 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186742745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164002094 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121883688 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145067817 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164087546 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222627603 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13763936 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.125154268 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210091645 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219889886 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.230079025 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092246406 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147958049 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146316365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144342603 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203112023 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088497365 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233999055 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111106903 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172160213 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133397287 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123237083 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163520232 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126155524 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11801221 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20341225 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151716443 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111458131 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084511648 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14709505 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177487166 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11013617 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102874034 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173643234 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.101212564 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171880591 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235838126 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084898849 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137527148 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126488189 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085069577 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137556958 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134496282 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116227904 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124579051 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235935709 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121570903 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215944849 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178175618 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146798668 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200159652 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131136391 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668724976 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082771924 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220472045 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152925563 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248669895 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130925423 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152675064 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143133977 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155693806 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180481133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135688593 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.206731062 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167186938 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154356561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108909958 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133790258 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143318609 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094591176 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138292409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147064126 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146826067 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130582491 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.15405401 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190289776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085376085 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126738078 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199548654 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176843235 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180761992 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176961143 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114432322 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152726907 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179125135 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108401161 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155290077 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222395119 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140982801 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13023686 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085505712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138241981 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238545839 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076865982 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227372847 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158595125 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143407963 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146559221 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180329069 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169443717 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13893989 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159915092 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126433069 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146116709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149460053 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089947873 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105994006 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137522503 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147620932 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129965852 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132703591 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.122500914 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216195161 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075615228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125667004 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109023377 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205991345 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24733208 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094521047 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111537487 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149673827 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145185133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.148224985 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158825486 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110172795 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086270135 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.111096791 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137446064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119416847 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148752993 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133822945 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143434962 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236546803 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088829091 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255621679 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126494867 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141034752 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073095369 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109476099 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101342375 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127369473 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136627429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127730039 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240356606 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102641867 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121121481 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12255134 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075994529 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113148645 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165254961 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143589833 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154888519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126815704 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066405063 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141068325 seconds)
  done (took 73.621932579 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135396913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105291814 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121158126 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177056146 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149475278 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241966051 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184028066 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227378041 seconds)
  done (took 2.371564139 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071811535 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121578364 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107714492 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.123092788 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094809834 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074385243 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.310133475 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114169896 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092977126 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096884444 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.125124527 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094589004 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485038411 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071261388 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096139596 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086476977 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069189115 seconds)
  done (took 3.255406349 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.445440906 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.624439974 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.450024269 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.101318801 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.859957433 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11050886 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.245299727 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.16448063 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093873373 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.417937603 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.7359336 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.153224405 seconds)
  done (took 17.432647121 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077484919 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072332391 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11294921 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088306705 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100646746 seconds)
  done (took 1.482713714 seconds)
done (took 116.614401973 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08254682 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383074778 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055960844 seconds)
  done (took 1.503164482 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086537239 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089344693 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115978203 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088250777 seconds)
  done (took 1.41926868 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077615681 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079764863 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113436222 seconds)
  done (took 1.307187683 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.300515819 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17271402 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091155001 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086304003 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08048481 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10771239 seconds)
  done (took 1.313281363 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076984608 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080175477 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104527187 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082719535 seconds)
  done (took 1.376482473 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079181743 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056523085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059571186 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087159379 seconds)
  done (took 1.325937611 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094817492 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109599944 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086713091 seconds)
  done (took 1.325490664 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112602238 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115709028 seconds)
  done (took 1.27008659 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08548589 seconds)
  done (took 1.120771433 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096549878 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.145802017 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.169669835 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141002562 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175855391 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143069769 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118285435 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092169266 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10643332 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119800331 seconds)
  done (took 2.351073977 seconds)
done (took 15.988095189 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080948551 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397236883 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364269678 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.120780793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672343186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38673567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.982804736 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124869735 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115113849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101198408 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090348537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680428954 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972817067 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.356957768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959954512 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328397003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681316634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073604568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097108465 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071438502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965091635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096334217 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070361542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097895362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652839046 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373864037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096358653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.321521016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096632396 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072676011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358327602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096491066 seconds)
  done (took 15.987192479 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074726454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146845847 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078915808 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088090346 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.099027186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072049076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100918524 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072980311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152419836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073277637 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118136358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072767694 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104133445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07462908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092377746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099611816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07385771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096907126 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071853587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07185249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.115987702 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071191551 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097124055 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072073622 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071654499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109326764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072094194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097177637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071098748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073914298 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099542922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071653172 seconds)
  done (took 3.897723661 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119084349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.156623679 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07983922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13342524 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.147480376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075745819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.179436707 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099851063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160252497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073877934 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118169969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073901601 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135091301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072469899 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117463063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072908553 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09791573 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072635168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071206991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096469692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089746803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096442009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071608181 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072132942 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.0970313 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083782494 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097512385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073579308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096531714 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073343497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073880027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097487158 seconds)
  done (took 4.222832267 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.0753602 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078273854 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112782866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087102915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098541739 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075438372 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07605244 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098747572 seconds)
  done (took 1.744624128 seconds)
done (took 26.884807937 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081640473 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072464775 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102693138 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083452846 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101949193 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082982068 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069942642 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104252362 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078191625 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102863619 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079594868 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070965732 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100173396 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070395962 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077821884 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097097442 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08318228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101661995 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083714916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.110327441 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072823851 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078649454 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103038816 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082384645 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109026771 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083626225 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.109571859 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07694007 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072774418 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09987441 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079668658 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114581914 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073362508 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109211487 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071299113 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071403266 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097320378 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07142619 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083607988 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104484015 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074169924 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103491338 seconds)
  done (took 4.736950665 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092196145 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096742367 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11603708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06579177 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097807787 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063690933 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120232778 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063566193 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06468713 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11970295 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058963579 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060129149 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089206058 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05615408 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059615215 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059000404 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089845976 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059304793 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060339922 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087391753 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.062920375 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05633475 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.089862966 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061738193 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058629455 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064979943 seconds)
  done (took 3.023272776 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077716349 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085047267 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116922433 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132118074 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135881987 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078416628 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108349302 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089632462 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.11444135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070234382 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100974467 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099709839 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089892111 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104372753 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069881953 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113453965 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085130916 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071820592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104650079 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091635507 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113637261 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080700079 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119079353 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081837685 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070938066 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099919864 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07458268 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110859029 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076721263 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080366122 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.099759793 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073447656 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098312615 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082026165 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100971105 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071669853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090578242 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106041971 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078894181 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097548018 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073512602 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07156223 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118846049 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.11484058 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096607042 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076894621 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104677274 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080539982 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070649622 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115359519 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080862912 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096869526 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073619718 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069963152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096599864 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084104648 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099679468 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073951937 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079178351 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.10020456 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.0832678 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100486579 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085944746 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070425866 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10490741 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070174236 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098585947 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069343263 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092718019 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099254378 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111239307 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098877948 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072021444 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106142759 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078445213 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077403836 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097545006 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086473228 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106728724 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074887617 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079935967 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100702217 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072983373 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115585835 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073076057 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072262629 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09823089 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077160637 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100607046 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071860904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084516328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09780127 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073757845 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115109175 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069882482 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071832081 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103656716 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075841451 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096670843 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08354228 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102115593 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07168964 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080066083 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097805691 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073656536 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081302469 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101591304 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06946026 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103441673 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077227689 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071284774 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098888875 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073616523 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09832727 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080407019 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077684638 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10272725 seconds)
  done (took 11.564201512 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.205239149 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191055673 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074058927 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.182940707 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082767877 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.109794266 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185228458 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.103974407 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098597717 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070891464 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098697488 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109927679 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131030017 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.143170126 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082086765 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070255976 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.123982365 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139168891 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.188937973 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180982355 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089700277 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079447514 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100211422 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070916581 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100025982 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080222213 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114378947 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082846399 seconds)
  done (took 4.349360642 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084716531 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130149941 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076407642 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119270027 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09615347 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098109699 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074945419 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07208638 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11142247 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084156262 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097859668 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076434453 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10485033 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080440563 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071134335 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106730227 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080073448 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099579879 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074129522 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075009453 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104755159 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084018932 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101505919 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069501918 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077569645 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096842451 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068139526 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115422687 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070755648 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119556631 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068213787 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104458576 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080295209 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070818351 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097936318 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073145097 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099753453 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07248674 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071758356 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096150161 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069808386 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060012528 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096941058 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083874626 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.103827705 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062596414 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077049573 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103969607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07559419 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095032591 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073506533 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073473624 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101319604 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078162425 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075620928 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102257901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07451483 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097775203 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077653471 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073185565 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094163561 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069495672 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075099706 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097130083 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079000643 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103087629 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070747498 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073651717 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102042722 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076729726 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099518639 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074351199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068024971 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.100600473 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076044629 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075159065 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100571555 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070222011 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097236055 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071698193 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057935342 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098400143 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056334011 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074380562 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096324077 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069265738 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07251498 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.106102569 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084719884 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098514335 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077420909 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098615064 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069693511 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073376633 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092513427 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073678273 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085635122 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114098545 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.097411493 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06965522 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084207937 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.103240378 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06969129 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058753147 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105823433 seconds)
  done (took 10.047132983 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094087747 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122064014 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073963289 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085132111 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124492572 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095167371 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10540358 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078751294 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072898637 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115663522 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071695722 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106902286 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075318843 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080653569 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123690081 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080311726 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.1001661 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080946769 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106358702 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.107981143 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085817906 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11222669 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.081446903 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099174078 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076074321 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110791159 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099218716 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082197068 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107927617 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085654917 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108648517 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098533873 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114174883 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.075479493 seconds)
  done (took 4.307816085 seconds)
done (took 39.06802198 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.134111628 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.329407813 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.119434168 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.934251866 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.165174975 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.120851348 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.132545868 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.115397976 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.337496717 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.123272219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.374605206 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.694558464 seconds)
done (took 58.644813011 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.197261294 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.253996228 seconds)
    (2/2) benchmarking "String"...
    done (took 1.388916325 seconds)
  done (took 3.702814433 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.542265758 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.048088901 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399278206 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.114972013 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.132256534 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.558057411 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.606399811 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.917827336 seconds)
  done (took 26.83832014 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.121459853 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.454884061 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.225377219 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.222872223 seconds)
  done (took 17.080257509 seconds)
done (took 57.419396015 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.116997881 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.162253056 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.127226189 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.099234615 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.218170779 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.139161996 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.429787388 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.378555719 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.118514005 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.105234 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.113453427 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.112197223 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.130298897 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.388293238 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.114549713 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.119594029 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.156252479 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.655954008 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.468123536 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.123848435 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.139308688 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.111296135 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.117297112 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.116767304 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.151471927 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.111943987 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.118567112 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.125120034 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.977296549 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.119672915 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.179945697 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.623896217 seconds)
  done (took 188.230473416 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.110292548 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.951741322 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.102399655 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.1280638 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.476508791 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.314204575 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.248723311 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.57382322 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.125547715 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.144457443 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.314968414 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.112263933 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.359280422 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.101078573 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.132952935 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.18645353 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.322835996 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.381005602 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.133369228 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.385736237 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.129149803 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.214286516 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.131041945 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.298240538 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.14664064 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.164054342 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.123149992 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.110813516 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.301050629 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.260056121 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.162575362 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.125279495 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.598395285 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.969049049 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.113790607 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.127669523 seconds)
  done (took 145.639236368 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.35538984 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.110816381 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.109383046 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.110838658 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.135187751 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.11453228 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.556898113 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.559032287 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.605226465 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.623668167 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.164185126 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.25276541 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.110190792 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.197174305 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.121467422 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.109651137 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.12399867 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.135822385 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.110153796 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.112586196 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.553684479 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.126227153 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.119136488 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.114516383 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.111094306 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.135495272 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.501776554 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.106864872 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.135309792 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.411026158 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.146032976 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.110593668 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.324414176 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.095422265 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.213648508 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.107669383 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.136313968 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.113593849 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.371781004 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.114149762 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.110504251 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.114264256 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.610036153 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.111963245 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.109773911 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.552630434 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.920556743 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.110342639 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.110984471 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.11160293 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.112502477 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.232269622 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.39609888 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.107904013 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.107565829 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.110943847 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.108867042 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.107744196 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.135372993 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.226438164 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.111392726 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.200856208 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.110496938 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.113374975 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.135678965 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.110180869 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.252564889 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.114454676 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.666602782 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.156912252 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.318314379 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.540783078 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.097625549 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.183827448 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.210361026 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.099867107 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.103183528 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.103659086 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.101194468 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.204624464 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.105656755 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.44762326 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.104477696 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.104875854 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.159938647 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.196392403 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.106235902 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.31356362 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.109603011 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.104955726 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.707290095 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.183383749 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.104946937 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.107705019 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.107457186 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.448978088 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.548977249 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.182613385 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.107774141 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.273449193 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.109131886 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.460229897 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.5357074 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595315665 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.098943173 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.206274038 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.110448419 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.107938007 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.105520144 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.127442576 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.106397459 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.167064048 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.099318226 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.105665475 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.498056688 seconds)
  done (took 331.87168447 seconds)
done (took 668.156824952 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.760291491 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.72425798 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.838858374 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.736198681 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.716886999 seconds)
  done (took 9.826442645 seconds)
done (took 10.874146232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.268030023 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.270323494 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.158776058 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.270720894 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.136412611 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.279854777 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.255496744 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.129007434 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.200040093 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.172922603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.196357952 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.151941178 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.135752612 seconds)
  done (took 16.674672089 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408211897 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.406844885 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.16770903 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.407466508 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.149124431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405022537 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.303589989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310760196 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.301165039 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129505761 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.12537236 seconds)
  done (took 15.168701179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405533309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.410972204 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.179864227 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.415257666 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.153226952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419622852 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.331174247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.304106685 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.300426372 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.127865377 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.122490215 seconds)
  done (took 15.2246015 seconds)
done (took 48.117569555 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.12056807 seconds)
  done (took 2.175119242 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.151379288 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.302493345 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.129572843 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.122111997 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.121232535 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.118854329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.124755085 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.123366875 seconds)
  done (took 10.249669072 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.119123998 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.117714065 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.120543289 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.11781523 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.120009148 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.120361465 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.119171167 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.120223187 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.119889629 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.115239781 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.119933226 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.117135123 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.117620272 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.115465013 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.119227698 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.119220731 seconds)
  done (took 18.953289795 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.120086518 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.117076882 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.117971928 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.116062426 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.116434144 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.117243851 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.119805829 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.115543063 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.118534932 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.1160876 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.117034853 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.116782785 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.116531438 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.116058692 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.115751296 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.119688762 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.117815169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.118939719 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.121720485 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.114533306 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.119610528 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.11734941 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.114163918 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.116978961 seconds)
  done (took 27.876108977 seconds)
done (took 60.309597312 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.913822213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.530327156 seconds)
  done (took 8.501396752 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.115490542 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.122775414 seconds)
  done (took 3.297294841 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.118257747 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.116876666 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.119659237 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.117949368 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.121806724 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.11999997 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.118984555 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.121539711 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.119528509 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.121250578 seconds)
  done (took 12.251540817 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.115189084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.122252933 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.115874202 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.119823652 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.122543029 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.121305484 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.120682466 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.123322441 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.12299382 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.121533784 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.122526735 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.12111237 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.122445491 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.121787274 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.122405011 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.117216983 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.120087491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.12162548 seconds)
  done (took 21.228585864 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.120500107 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.121399452 seconds)
  done (took 3.29825511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.117929072 seconds)
    (2/7) benchmarking "second"...
    done (took 1.119044377 seconds)
    (3/7) benchmarking "month"...
    done (took 1.118765714 seconds)
    (4/7) benchmarking "year"...
    done (took 1.120173638 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.119292275 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.120372857 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.117717296 seconds)
  done (took 8.887631181 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.119338904 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.295588147 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.36907168 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.723618049 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.117398835 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.123413432 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.950025341 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.124440624 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.126176476 seconds)
  done (took 13.005376697 seconds)
done (took 71.521569125 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.069747402 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.114253877 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.878056589 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.127783235 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.130318174 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.456775666 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.16672059 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.23045549 seconds)
done (took 36.234286448 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.128391651 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.764917842 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.800825157 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.107985158 seconds)
  done (took 10.732394998 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.102209666 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.937065911 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.112492538 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.031760727 seconds)
  done (took 17.237967524 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.653918094 seconds)
    (2/2) benchmarking "read"...
    done (took 1.441645228 seconds)
  done (took 4.154179574 seconds)
done (took 39.309243892 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.121683429 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.121148365 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.118290689 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.119342726 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.11580667 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.123693441 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.117788181 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.121852629 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.118888011 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.124483552 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.123418054 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.121522527 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122773582 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.114981673 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.118757735 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123137902 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.116960959 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.117699257 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.123045396 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.120443154 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.121431039 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.124674164 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.123839373 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.123908717 seconds)
  done (took 27.955377822 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.124788607 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.119850698 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.124558064 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.119741089 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.122963337 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.126838394 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.125439469 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.12305577 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.127113522 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.125307543 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.117892159 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.121181569 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.119596155 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.120033521 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.121133176 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.123438521 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.124704706 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.121836358 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.122424736 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.121923725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.121094529 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124327666 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.122289051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.126136958 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.123969903 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.117547306 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.128814203 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.122589462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.12601235 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.123325135 seconds)
  done (took 34.751132362 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.127953901 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.131570937 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.12604155 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.125635915 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.125769022 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.128616205 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.126466757 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.121866702 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.12859873 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.12874897 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.12693623 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.126156836 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.126715621 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.127376311 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.121746794 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.125777601 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.125281596 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.124225996 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.122040039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.122249215 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.123364165 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.125295339 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.126590778 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.120432422 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.121699738 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.123944353 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.125756535 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.125634353 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.127417038 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.119500555 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.126868774 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.120624273 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.122694059 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.127989628 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.126231883 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.125485733 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.12780241 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.130760834 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.119824241 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.124309072 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.126653565 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.126880109 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.123285514 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.127553886 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.126482807 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.125147557 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.12358898 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.123229149 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.124509003 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.126783734 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.126624191 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.127920948 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.126542151 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.122505206 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.127486061 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.126160381 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.125297764 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.127090776 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.126540439 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.124528658 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.126348853 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.124439497 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.124081043 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.127385677 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.125907667 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.127050995 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.125478999 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.123968941 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.126960081 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.125353261 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.12739493 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.126009932 seconds)
  done (took 82.101532069 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.128170667 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.125745273 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.123819345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.125096788 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.121489022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.127982016 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.12427089 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128215547 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122478967 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.127269952 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.127663987 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.124454671 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124035419 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.125338023 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.126009914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.124549213 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.129249519 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.123720018 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.128928098 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.129077447 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.123929712 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.122528227 seconds)
  done (took 25.821293698 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.126831509 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.127262033 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.124378968 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.128440543 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.120933517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.127758102 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.129118145 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.128424984 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.130472213 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.121750175 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122960348 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.126911556 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.1211312 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.129751927 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123313711 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.122937501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127969515 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.125557192 seconds)
  done (took 21.326770894 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.123496511 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.122103185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.127015821 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.124339393 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.122768382 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.129752891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.125501489 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.125583549 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.126356675 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.124415209 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.127976948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.130452247 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.127655358 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.123883956 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128263094 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.126532395 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.130645467 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.124813104 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.125507055 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.12987033 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.126998353 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.130291617 seconds)
  done (took 25.842243821 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.131642693 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.128183916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.12797459 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.124472027 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.125738122 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.127755125 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.132509656 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.129815526 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.127772846 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.132117333 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.130835876 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.131506762 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.126047447 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.132194176 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.125235866 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.124341586 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.126995993 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.128143381 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.129748157 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.128488458 seconds)
  done (took 23.634256919 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.132196862 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.132387413 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.131299309 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.131414546 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.133601273 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.131576189 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.13154147 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.132089752 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.132870126 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.127842423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.133818272 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.131477071 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.13340871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.132704299 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.132302044 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.134924149 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.134532601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.131927724 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.129780046 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.133211399 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.133973854 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.131989286 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.129460561 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.134921377 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.136064656 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.130298731 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.135324691 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.132843013 seconds)
  done (took 32.772395944 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.129025222 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.12870927 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.129023152 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.131430746 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.126981852 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.130150175 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.127378925 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.127438875 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.134345687 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.129355921 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.128949776 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.129793278 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.128783578 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.132195819 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.132944192 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.133512008 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128788343 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.12774293 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12979324 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.127083229 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.129672681 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.132677101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.131923438 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.129711315 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.127652968 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.133182452 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.132743949 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.13279642 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.13003346 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.127753596 seconds)
  done (took 34.966135764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.147643411 seconds)
    (2/2) benchmarking "in"...
    done (took 1.151639811 seconds)
  done (took 3.365192701 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.128050754 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.132481526 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.135355981 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.131088112 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.130323202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.132868095 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.133317742 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.132136846 seconds)
  done (took 10.118835949 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.134302193 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.13185697 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.131665597 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.135943124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.136828669 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.133403846 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.140910613 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.150653935 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.130887594 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.131982414 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.138723916 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.139641321 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.137459984 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.132133292 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.134264167 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.136658469 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.136005282 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.130867091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.132390379 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.133845236 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.137102764 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.13730464 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.132066683 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.132711278 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.133588687 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.141154119 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.137460638 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.134412007 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.134614602 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.139610395 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.134634074 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.136666329 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.13756851 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.134866975 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.134395143 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.136981289 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.142109937 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.150477572 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.138444635 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.137002462 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.14004365 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.131266107 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.134396099 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.13382597 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.136734158 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.1359723 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.132669569 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.131496839 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.133248346 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.135887131 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.140248067 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.132826393 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.135016378 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.137132743 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.13544377 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.140692846 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.150381691 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.138422848 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.146025024 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.144239823 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.151937343 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.145900051 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.139760557 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.136668541 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.144977192 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.152620127 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.142306601 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.147655876 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.131151715 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.135617582 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.142931502 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.152729976 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.145853382 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.136957491 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.138478868 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.140740846 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.139937417 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.134301263 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.141860391 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.153174369 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.139830559 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.13786933 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.143291899 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.149509765 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.139729933 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.137532767 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.137042609 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.140035631 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.136628506 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.145371492 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.148648806 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.139922256 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.134788694 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.135550285 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.139591075 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.135786701 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.133468104 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.135722789 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.134739083 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.138552519 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.139532259 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.140486061 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.144332592 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.138124119 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.136780197 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.147518761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.138561093 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.133945014 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.14395833 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.140784878 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.143448153 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.140959448 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.14349118 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.135455256 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.141458811 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.147016154 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.13987688 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.142612099 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.143248846 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.144036174 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.151798406 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.162764446 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.144192915 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.139543736 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.145320292 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.149186377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.143673475 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.146192778 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.145757812 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.141032888 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.137494575 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.142726891 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.143499746 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.145793369 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.143986139 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.141663071 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.142526051 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.143765099 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.143837003 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.144240016 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.146436178 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.145314281 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.143974944 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.147498831 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.145338568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.145424615 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.1487314 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.143204843 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.144118268 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.145111827 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.142877045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.142009565 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.144151757 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.145370467 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.144249169 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.145799048 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.144730617 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.145427911 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.146584884 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.144833242 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.147576713 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.144314115 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.148287328 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.146687543 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.151203289 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.146390683 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.145672166 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.146917502 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.145842684 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.143721211 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.147222773 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.146665651 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.149876792 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.153833102 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.147538408 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.144206268 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.147857842 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.146691878 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.148225444 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.14759582 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.148284189 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.152889021 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.147756757 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.153225752 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.148624591 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.142701822 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.144026591 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.141906083 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.143332366 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.143455589 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.144901311 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.149610895 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.153698101 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.153101779 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.138241841 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.140594289 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.138075852 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.139966209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.140575691 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.138040308 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.138901353 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.137468259 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.135081378 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.125954656 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.128052546 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.127224938 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.125328787 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.12415247 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.128795246 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.126737178 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.127245041 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.125131972 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.126135099 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.121509981 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.120998274 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.121715488 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.125890354 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.123331366 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.119312117 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.126718562 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.123944347 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.127340663 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.131043 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.124106002 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.125955906 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.128232336 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.126989691 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.125032415 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.127520232 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.126284424 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.12367596 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.131012268 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.134464047 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.124430689 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.131894173 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.140961692 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.124803385 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.129909149 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.126955354 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.124004701 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.125602371 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.134549204 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.127156984 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.124130982 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.126314263 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.123600973 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.127893472 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.132382011 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.121599708 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.125968288 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.125582967 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.126786478 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.12326018 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.125880634 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.127010015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.127839666 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.12595231 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.125653307 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.123392933 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.121443623 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.125340313 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.126452285 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.12521567 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.128779406 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.134508709 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.131673983 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.125626043 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.128166909 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.123117953 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.129100413 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.126071842 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.12419101 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.123541118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.13507192 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.129485223 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.133538993 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.129463655 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.125952393 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.132490523 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.128824544 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.128611524 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.12820727 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.129137812 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.125541705 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.12716839 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.125829384 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.126435355 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.128549999 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.127841396 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.129676564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.128084249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.127263343 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.125311631 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.128400654 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.128865317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.12756488 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.126644688 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.127797844 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.128029731 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.128430986 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.122388533 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.128494773 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.135434434 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.142286604 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.129599664 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.126268276 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.128652834 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.125169626 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.129171927 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.128722695 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.131535308 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.135702616 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.13134175 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.137820574 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.128670398 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.138508287 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.128925426 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.132487657 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.136939186 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.1282402 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.126999803 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.129494469 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.129152317 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.138746719 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.14243303 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.13040745 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.133655258 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.129638073 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.130343852 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.131242103 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.130319987 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.130817457 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.129360994 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.13773903 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.144443052 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.133349658 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.132908674 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.129936733 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.127855511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.130404715 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.129475692 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.134205532 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.131892172 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.131670946 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.130966853 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.129955882 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.130758786 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.129479315 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.129185346 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.127487479 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.130564734 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.136994897 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.14406059 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.135373221 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.132810643 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.140531594 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.132042055 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.136515017 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.14696509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.131574879 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.131691606 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.130696111 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.132369871 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.132434387 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.13164781 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.133141706 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.133306887 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.135967693 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.13269358 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.134580195 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.133436085 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.133109242 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.131539307 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.139957326 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.148426514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.130737749 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.137088741 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.126553353 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.129781665 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.136337076 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.133123446 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.131309664 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.132329161 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.141611577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.14038841 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.13171592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.132914708 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.13395318 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.131158686 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.131493524 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.131357611 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.132319184 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.133924181 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.133498927 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.134093645 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.13474976 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.129702149 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.133306564 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.132941836 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.132087252 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.142538954 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.13335672 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.136628946 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.131968676 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.135190285 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.135275531 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.126570987 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.12951235 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.127052378 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.130257425 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.128090408 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.137439782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.132221099 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.134321879 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.129330383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.116498471 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.117851418 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.118033728 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.116892384 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.116420853 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.115900011 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.118387303 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.115047144 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.117181745 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.112549042 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.113541499 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.11493253 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.113878119 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.116609415 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.117768633 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.114254722 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.112774967 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.114451581 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.114407286 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.112735997 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.113872339 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.121931641 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.117502145 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.121739616 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.121148611 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.11686059 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.114608902 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.116801649 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.119999899 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.113739543 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.116538513 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.116027277 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.117013485 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.117145484 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.117099882 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.115864944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.120358073 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.114552468 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.116116744 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.123557171 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.132501385 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.116590535 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.116678494 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.119040162 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.116145583 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.112961007 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.116546982 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.116825135 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.122813313 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.13283158 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.116005076 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.118225125 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.115442126 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.118068742 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.119075871 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.116359614 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.117830785 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.114904407 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.118363793 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.11705864 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.117601414 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.114331962 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.118300121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.116659465 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.120593399 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.122264695 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.116268065 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.121141739 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.118914239 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.11888283 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.117768806 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.117453537 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.115727085 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.115811691 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.118077746 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.118164378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.117039502 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.120387114 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.11653154 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.118975719 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.117009729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.118053466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.120397865 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.12549775 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.122690722 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.116859554 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.116847325 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.120698101 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.121828641 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.118157928 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.118183202 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.119705373 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.119074214 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.118174563 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.119361831 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.117976412 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.119970786 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.132002723 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.133170332 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.11845243 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.118111181 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.122490962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.120111237 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.115899168 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.120091256 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.118969146 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.120800234 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.124250466 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.117975704 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.125759408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.13124376 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.11984966 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.120614954 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.119595372 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.122839329 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.122003128 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.119491055 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.118947034 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.121540461 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.130959653 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.119957922 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.125611507 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.142267394 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.133267955 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.120359843 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.119215654 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.119618213 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.119408266 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.121949237 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.118810652 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.119624682 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.11989138 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.119265399 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.12051406 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.124131437 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.11951813 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.120052219 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.120017505 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.1198907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.120264618 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.117478194 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.119298239 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.1206143 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.121212751 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.121309776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.121232546 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.120176314 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.130614587 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.127106765 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.121230945 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.121341152 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.118103945 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.123225397 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.12304081 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.128011545 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.125796734 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.121215491 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.120816925 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.122094581 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.121421471 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.118499382 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.121715189 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.121200341 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.121538698 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.119080413 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.132864804 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.126475451 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.125828834 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.121107067 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.121076255 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.121543434 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.12235076 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.121866875 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.120998434 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.122700218 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.120646137 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.123529159 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.121108402 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.122244698 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.124017371 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.125937573 seconds)
  done (took 675.122949357 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.118908527 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.118989478 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.120039841 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.120812133 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.121543058 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.118739871 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.122012116 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.119079507 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.118825966 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.118893056 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.12016632 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.119177715 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.119095604 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.119255632 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.118684031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.118920322 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.119319474 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.119208434 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.119506218 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.118462381 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.119253325 seconds)
  done (took 24.568676637 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.122263231 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.119450451 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.118992966 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.122404775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.119839557 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.122774544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.121072758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123046087 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.122766627 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120208758 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.123484657 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.121738073 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.119600146 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.119053156 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.12054945 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.121662105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.122015338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.119772499 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.123100859 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.119757178 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.120528682 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.12027568 seconds)
  done (took 25.724502094 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.121269916 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.12196714 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.121296551 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.119126076 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.122286685 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.119968506 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.123009747 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.124009964 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.123335049 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.121950853 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.121994431 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.123178343 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.128551855 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.124797758 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.123224356 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.124750431 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.267390263 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.123477761 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.123894099 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.123252299 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.120413123 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.127794186 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.121700994 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.12103253 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.121735147 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.123872495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.123948785 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.123979658 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.123148824 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.124219005 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.126429807 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.123972958 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.123363934 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.125589372 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.123723871 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.12492796 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.125777041 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.123793764 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.122569473 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.125217893 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.131058223 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.140075307 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.124085987 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.131525429 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.125082422 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.125126209 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.127028358 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.130637836 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.12301176 seconds)
  done (took 56.297587068 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.124174686 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.125157378 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.123790264 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.124858677 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.125025929 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.124950243 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.126097786 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.124285051 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.123592695 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.12413545 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.125670606 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.122931674 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.122308356 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.125780284 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.124224155 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.12323157 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.123399381 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.124070847 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.123600183 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.123015368 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.122973517 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.126874577 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.126128348 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.124302208 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.1261032 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.123930936 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.124720993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.125493558 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.125391079 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.124710396 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.127000717 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.127560454 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.126702235 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.1253696 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.124824651 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.128126117 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.126820822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.124215393 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.126870308 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.123795288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.126559969 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.126289267 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.12817277 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.128518568 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.126759689 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.124714806 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.126294088 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.125898113 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.125717 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.127227294 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.128178262 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.126012485 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.128024452 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.126226533 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.128620115 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.128230202 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.124710828 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.125400532 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.127645266 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.126109603 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.126638551 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.12914742 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.126083013 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.128404089 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.127571279 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.126552888 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.127567603 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.130063818 seconds)
  done (took 77.618724311 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.128561699 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.12905822 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.129443593 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.128049869 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.129819795 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.129090251 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.129594084 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.127961235 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.129609001 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.130228875 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.129918916 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.129083255 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.129453858 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.130266955 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.13020789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.13197418 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.130092037 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.131461716 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.130835924 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.130668686 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.130197111 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.130625759 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.131861658 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.131378205 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.13031396 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.13030144 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.131252012 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.130875928 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.130537906 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.131231721 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.131885185 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.132567316 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.131479722 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.132102312 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.132511256 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.131200211 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.130494434 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.132230888 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.131969039 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.131400493 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.131353714 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.132103781 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.132927221 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.132217436 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.131247949 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.132062617 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.13193863 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.132148967 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.131296073 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.130353037 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.132867688 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.133478938 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.133269153 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.132055872 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.131340274 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.132803292 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.133573491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.132668273 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.132133639 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.132053981 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.134136035 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.133713104 seconds)
  done (took 71.200894851 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.132393776 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.133691693 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.129370622 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.129683367 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.133182497 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.130134607 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.133632385 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.132654846 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.134833867 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.134615976 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.134751925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.13228782 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.129618875 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134218739 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.131496161 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.131571433 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.131349061 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.131794643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.135172703 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.131936048 seconds)
  done (took 23.716550181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.131692266 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.134326115 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.131865061 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.131904256 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.134955598 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.13320864 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.134651944 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136561205 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.132325238 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134077595 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.136056087 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.135502477 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133027806 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.132730296 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.135758099 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.132939871 seconds)
  done (took 19.213562957 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.133047448 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.13527338 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.134575806 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.137029658 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.134002309 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.133486373 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.135597077 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.133151278 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.134192052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.135497395 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.135731742 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.136151105 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.135804392 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.135054282 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.133298739 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.135663451 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.133361392 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.133916059 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.136109735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.134308875 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.132425431 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.130842138 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.135897902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.13516157 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.13151919 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.132649629 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.131237553 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.134379206 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.133408134 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.135463172 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.135201455 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.13374983 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.134920477 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.13344638 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.137059996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.132170601 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.137397009 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.136226527 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.137327721 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.135677086 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.135903822 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.134827415 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.137554853 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.137157982 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.134146708 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.138007409 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.134633 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.136149197 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.135120418 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.134099532 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.137719559 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.137953028 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.137647781 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.136603381 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.13779562 seconds)
  done (took 63.502236828 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.137918982 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.137917656 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.13525684 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.138151377 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.138943502 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.134702079 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.139442426 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.135868494 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.135130299 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.138008769 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.136025539 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.139379012 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137298881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.139353437 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.137644531 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.140686562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.136859862 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.137121537 seconds)
  done (took 21.551624908 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.134121972 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.137601923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.139837886 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.137873152 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.137826158 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.140353156 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.135567479 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.138752715 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139372013 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.137223237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139016748 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.14127747 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.13877164 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.140715376 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.138238953 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138114533 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.138890591 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.14157078 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.136680519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.137118817 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.141898553 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.139518993 seconds)
  done (took 26.126941584 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.138662618 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.139781683 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.154056833 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.173157124 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.162769377 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.138688093 seconds)
  done (took 7.98420735 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138586166 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.139807973 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.136969445 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140749707 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.140187732 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.136559401 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138611324 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.135913889 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142786579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.137588189 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.139693357 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142134245 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.141744852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138375232 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.140714547 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141130662 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13835543 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.139253576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13752154 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.139964748 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138295948 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.140687881 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.136967617 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.137584259 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13823828 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138013375 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140256389 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13689959 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.136690996 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142170468 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.140851284 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.139077998 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140914007 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138494656 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.140479151 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14027367 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138213971 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140821327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141067809 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138406003 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.140440063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140656702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142377058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138119166 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141045607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.139062713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.139832484 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.139494373 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138884606 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.14054642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.142551672 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.140463183 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.14179104 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141992655 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142436436 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142613764 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.138408689 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.138792725 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140958346 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13942795 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.138078695 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.14169713 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.140737154 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.140719348 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.141787599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.138983658 seconds)
  done (took 76.30234834 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.140561251 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.140474269 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.138420625 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.141092275 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.140529793 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.140352795 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.140398295 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.139126795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140826846 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141431272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.144851528 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.141115925 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140619893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.141420726 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.141503633 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.139150599 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.140588113 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.141113138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.141965291 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.145015423 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141297829 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.141810736 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.142182908 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.141248832 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142252785 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.143795043 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.140524762 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.141741944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.140760843 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142699807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142758781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.142385484 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.14223929 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.14264634 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.141359695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.14155853 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.140897091 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142272922 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.143088468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.144915527 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142360089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.145027911 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142486996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.141365578 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.143856533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.142284886 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.142990757 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.142587896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.143535058 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.144151824 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.144949384 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.143398512 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.144582487 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.144056349 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.143458578 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.142827818 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.144382675 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.142452026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.145056561 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.146896774 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.143236558 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.143103073 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.147454496 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.143929507 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.144294803 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.143351827 seconds)
  done (took 76.482355104 seconds)
done (took 1569.125619973 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.151744223 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.140813234 seconds)
  done (took 13.372773427 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.303118882 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.25602138 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.140793258 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.166826221 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.14045292 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.163162487 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.156001935 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.141201967 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.140884586 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.139949131 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.139657602 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.327593946 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.134293291 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.140962704 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.141228771 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.232911265 seconds)
  done (took 39.943687551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.166360515 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.146638974 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.241703377 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.175121137 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.177812996 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.315566637 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.207168247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.158650495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.300899017 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.195407525 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.527907354 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.182811954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.156988748 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.13088799 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.175142369 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.316865714 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.374361573 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.512822332 seconds)
  done (took 26.541114652 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.532836722 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.173190747 seconds)
  done (took 8.79630643 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.155337654 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.186581916 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.154795142 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.162252978 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.187488672 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.204920192 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.199134438 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.201135863 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.166652692 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.182279319 seconds)
  done (took 62.893233508 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.172903285 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.157537505 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.158681526 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.156231506 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.158942519 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.148561581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.156363232 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.151978979 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.226935361 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.266213943 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.170815462 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.164535834 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.158651212 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.158857067 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.154390037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.190460842 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.279587305 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.15581175 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.15449684 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.163316465 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.158405926 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.242584934 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.195202507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.156686955 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.264433899 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.232944584 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.164877964 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.164831012 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.269057238 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.156965514 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.157413499 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.15825676 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.160044919 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.705997698 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.618539113 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.16367234 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.179392917 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.167221199 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.156276831 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.300826534 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.160051806 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.166205462 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.151951431 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.59313348 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.306365187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.256075419 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.284514359 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.16314253 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.159697438 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.21530869 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.158803895 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.16075443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.185399278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.866024292 seconds)
  done (took 100.20086104 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.186184614 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.63879485 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.318893331 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.172427758 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.899892787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.728571629 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.154997901 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.396650879 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.200567485 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.154619703 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.468955643 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.610049793 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.160609239 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.168128983 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.819187792 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.152935999 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.152466237 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.799670384 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.159484576 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.153080141 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.554740404 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.167313042 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.157639502 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.313175899 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.189715827 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.576177038 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.397748489 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.559494836 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.157933891 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.152049256 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.571586646 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.165585539 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.231973293 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.155356506 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.405183881 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.468567886 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.452147926 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.156536877 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.177669614 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.152843202 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.180915834 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.575310835 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.462872509 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.157453903 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.157258046 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.581980451 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.158537076 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.160807667 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.154877292 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.35296371 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.140235709 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.153867143 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.406737735 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.155309435 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.485519908 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.202632911 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.211665779 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.603749439 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.158634328 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.181630572 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.181513642 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.154097159 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.156314503 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.159454879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.156638949 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.464580082 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.270036364 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.155028018 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.464108233 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.569718625 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.159373631 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.634971762 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.952261757 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.180185401 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.241474737 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.155140443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.684589677 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.606860415 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.178064938 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.154951349 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.447213812 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.160855992 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.456718982 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.168750845 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.155964163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.556457321 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.169271573 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.215800153 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.157489765 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.159476503 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.795847829 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.160138649 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.404371432 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.221323509 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.155949541 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.157754309 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.194243579 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.165565617 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.154550899 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.155024498 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.636078637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.166885373 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.425834674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.173410639 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.156776953 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.159851833 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.158993008 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.156832758 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.372571306 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.598991994 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.164221015 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.155464724 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.157046522 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.167941638 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.284022443 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.161771933 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.422324815 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.159159909 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.157555237 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.158819459 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.782216366 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.169272667 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.157791526 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.160808733 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.004213827 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.365766056 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.173281938 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.170911234 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.159031555 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.178698772 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.350515395 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.160974732 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.184293966 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.158139583 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.814084433 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.201258521 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.179264294 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.810060693 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.161718112 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.039192581 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.185575818 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.159587861 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.445636435 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.415905939 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.208530402 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.158117483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.157839458 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781457075 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.201008112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.304054389 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.173433201 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.200749421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.355998096 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.579568553 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.159463524 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.722961923 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.160232452 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.368864615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.159334007 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.469837335 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.598818211 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.162434017 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.162663552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809531404 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826963991 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.768951058 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.1617221 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.472771586 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.126287831 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.615359236 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.160491863 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.160819446 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.61497232 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.161255947 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.166017036 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.160256631 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.161678789 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308964871 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.332204893 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.39306707 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.16491436 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.582774554 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.17817292 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.160788391 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.168919133 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.164474648 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.512083599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.24287808 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.164456453 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.174042291 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.163110573 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.166685626 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.596462496 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.992340112 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.164123134 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.312068898 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.746124733 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.164493201 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.161920159 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.770864815 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.470311084 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.628464598 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.215865653 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.429697103 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.168386513 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.199363462 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.84285567 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.18280473 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.590732393 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.166159447 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.165424455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.696864152 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.162318408 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.518917239 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.161803942 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.164648782 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.645205503 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.162261201 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.166090047 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.362236957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.164881361 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.412642906 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.163724327 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.206940541 seconds)
  done (took 1069.166508403 seconds)
done (took 1321.998096492 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.163902961 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.166572069 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.153414036 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.163464618 seconds)
  done (took 25.752172321 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.169997085 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.167572024 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.168986696 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.166679124 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.169560202 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.167956546 seconds)
  done (took 8.114963819 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.204956796 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.165340736 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.16440675 seconds)
  done (took 18.63782607 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.363409457 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.314711571 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.495777923 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.073663342 seconds)
  done (took 9.35209714 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.168786568 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.16780391 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.16940072 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.170750125 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.171868754 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.174117084 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.171960954 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.171220584 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.173612918 seconds)
  done (took 11.643897592 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.632997857 seconds)
done (took 79.239095117 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.193605238 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.440905674 seconds)
    (3/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.383249104 seconds)
    (4/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.671356754 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.375140195 seconds)
    (6/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.21376081 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.748788328 seconds)
    (8/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.18257408 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.277164524 seconds)
    (10/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.349607197 seconds)
    (11/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.20352083 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.411425629 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.229242543 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.141351565 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.502767734 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.219066802 seconds)
    (17/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.259016892 seconds)
    (18/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.688863876 seconds)
    (19/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.521273093 seconds)
    (20/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.294174111 seconds)
    (21/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.177263673 seconds)
    (22/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.706644453 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.170394264 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.860079747 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.751932129 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.586677194 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.204356802 seconds)
    (28/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.282937293 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.30349148 seconds)
    (30/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.298935958 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.513182969 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.237740814 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.183101495 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.228277338 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.415352017 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.019143742 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.460816091 seconds)
    (38/309) benchmarking ("sort", Int8, false)...
    done (took 4.225992527 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.251586993 seconds)
    (40/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.163515767 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.376895176 seconds)
    (42/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.175289969 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.580237262 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.301489858 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.437777058 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.484404099 seconds)
    (47/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.499139439 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.492831237 seconds)
    (49/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.542519971 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.167979133 seconds)
    (51/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.23456195 seconds)
    (52/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.351894727 seconds)
    (53/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.865103313 seconds)
    (54/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.508747215 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.487994668 seconds)
    (56/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.440396297 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.300541758 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.229432363 seconds)
    (59/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.472393044 seconds)
    (60/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.497913907 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.434782302 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.004263815 seconds)
    (63/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.228213354 seconds)
    (64/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.184572271 seconds)
    (65/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.84350049 seconds)
    (66/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.393398431 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.307766714 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.192990784 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.458758768 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.998912087 seconds)
    (71/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.533195503 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.244949598 seconds)
    (73/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.178573619 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.628977836 seconds)
    (75/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.37657218 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.322072169 seconds)
    (77/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.931825081 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.180075739 seconds)
    (79/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.18001774 seconds)
    (80/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.196700888 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.8890124 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.414866793 seconds)
    (83/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.165322554 seconds)
    (84/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.533955264 seconds)
    (85/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.301916578 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.186925269 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.168151846 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.212254407 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.19162182 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.284610619 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.147303434 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.203302852 seconds)
    (93/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.57992759 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.769870788 seconds)
    (95/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.165091336 seconds)
    (96/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.379688336 seconds)
    (97/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.543574104 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.252719707 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.875430295 seconds)
    (100/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.892586999 seconds)
    (101/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.305500979 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.177567403 seconds)
    (103/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.520189234 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.570493695 seconds)
    (105/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.407770733 seconds)
    (106/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.852820483 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.184925258 seconds)
    (108/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.41654178 seconds)
    (109/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.348541651 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.514861234 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.328724342 seconds)
    (112/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.609297916 seconds)
    (113/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.20721085 seconds)
    (114/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.179311225 seconds)
    (115/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.713162184 seconds)
    (116/309) benchmarking ("sort", Bool, false)...
    done (took 1.695876437 seconds)
    (117/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.206787865 seconds)
    (118/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.261011078 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.456980113 seconds)
    (120/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.205654288 seconds)
    (121/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.457169934 seconds)
    (122/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.19225364 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.847584696 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.438608491 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.179302329 seconds)
    (126/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.166092715 seconds)
    (127/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.752035593 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.191465547 seconds)
    (129/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.184760846 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.870086728 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.31371767 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.869612363 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.320929755 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.209448875 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.857747391 seconds)
    (136/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.209782073 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.563114841 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.864600688 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.300803461 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.875770459 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.181949297 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.441969658 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.445046515 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.335782515 seconds)
    (145/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.209541417 seconds)
    (146/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.311993848 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.205898159 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.175506783 seconds)
    (149/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.198178583 seconds)
    (150/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.180574928 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.639788173 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.518078913 seconds)
    (153/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.727746491 seconds)
    (154/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.183472686 seconds)
    (155/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.173314637 seconds)
    (156/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.289743338 seconds)
    (157/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.963769785 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.032402566 seconds)
    (159/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.67332048 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.546982878 seconds)
    (161/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.267391752 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.245307329 seconds)
    (163/309) benchmarking ("sort", Float32, false)...
    done (took 5.141762359 seconds)
    (164/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.182435849 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.390023408 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.170749472 seconds)
    (167/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.186278955 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.345650379 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.932218801 seconds)
    (170/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.197098371 seconds)
    (171/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.196179886 seconds)
    (172/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.392639639 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.280933242 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.685293705 seconds)
    (175/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.177785993 seconds)
    (176/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.330942017 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.18179644 seconds)
    (178/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.529161885 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.718299622 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.211985846 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.39041284 seconds)
    (182/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.30794512 seconds)
    (183/309) benchmarking ("sort", BigInt, false)...
    done (took 6.183021288 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.227723439 seconds)
    (185/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.633421699 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.185959491 seconds)
    (187/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.246915574 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.172647036 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.951090239 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.584752884 seconds)
    (191/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.168614405 seconds)
    (192/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.220058188 seconds)
    (193/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.210615018 seconds)
    (194/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.268130832 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.279488055 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.69273939 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.186225349 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.243755163 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.17319166 seconds)
    (200/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.024358556 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.44337018 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.196047743 seconds)
    (203/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.333635784 seconds)
    (204/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.174930874 seconds)
    (205/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.722339236 seconds)
    (206/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.823527052 seconds)
    (207/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.71611586 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.395953803 seconds)
    (209/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.247221712 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 5.407686243 seconds)
    (211/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.179572115 seconds)
    (212/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.510540665 seconds)
    (213/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.694043169 seconds)
    (214/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.728020676 seconds)
    (215/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.859322141 seconds)
    (216/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.950741206 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.20932083 seconds)
    (218/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.690491561 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.374399226 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.209302212 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.282919736 seconds)
    (222/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.170816428 seconds)
    (223/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.172696701 seconds)
    (224/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.286622581 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.224962183 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.194117324 seconds)
    (227/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.24472869 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.982369557 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.187901255 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.21390337 seconds)
    (231/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.832598388 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.342314112 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.182880066 seconds)
    (234/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.271314443 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.269477038 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.184120149 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.361308654 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.189247984 seconds)
    (239/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.990760094 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.887672211 seconds)
    (241/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.272735264 seconds)
    (242/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.937015427 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.727276773 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.601268064 seconds)
    (245/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.610976755 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.788152492 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.293913735 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.186357334 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.030086248 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.164850565 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.188596907 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.396797584 seconds)
    (253/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.281735026 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.625517972 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.212941112 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.292062802 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.212329414 seconds)
    (258/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.382384259 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.274397548 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.576325727 seconds)
    (261/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.185314819 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.04209889 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.275253673 seconds)
    (264/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.274249966 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.977243493 seconds)
    (266/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.644108875 seconds)
    (267/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.774547904 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.31774914 seconds)
    (269/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.190677748 seconds)
    (270/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.174921253 seconds)
    (271/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.236574485 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.213558049 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.208497856 seconds)
    (274/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.365040109 seconds)
    (275/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.324201209 seconds)
    (276/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.417083758 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.834446338 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.190630171 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.303781072 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.308429073 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.273064421 seconds)
    (282/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.246550122 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.233428661 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.354991143 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.306838172 seconds)
    (286/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.751769883 seconds)
    (287/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.443496138 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.190450366 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.929354803 seconds)
    (290/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.19649703 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.684769801 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.583183146 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.738360808 seconds)
    (294/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.188995093 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.233686667 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.327607759 seconds)
    (297/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.20416926 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.371586082 seconds)
    (299/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.699000103 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.218341401 seconds)
    (301/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.195016802 seconds)
    (302/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.532492212 seconds)
    (303/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.195164607 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.569053269 seconds)
    (305/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.219606678 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.211587773 seconds)
    (307/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.203271514 seconds)
    (308/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.968510621 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.984152127 seconds)
  done (took 860.199988004 seconds)
done (took 861.319206075 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.220749369 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.21472734 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.197881881 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.219622722 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.309892564 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.227722237 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.209410189 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.201230133 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.24708033 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.24790154 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.197322701 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.2251433 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.201368355 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.198600053 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.199058071 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.212242391 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.134554458 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.203576261 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.216211715 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.208755032 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.216385251 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.198665792 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.249085536 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.22632945 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.203001617 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.203587056 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.202519513 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.219301299 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.311507138 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.203078679 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.203188193 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.211098437 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.126481337 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.198883313 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.194650257 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.220766118 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.211714495 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.208713675 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.204078183 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.233126879 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.482455571 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.200521168 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.202733333 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.201718398 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.200956545 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.206599523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.20205418 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.207092579 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.214497174 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.215765688 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.506657551 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.217961656 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.205270477 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.202669824 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.212810546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.201340612 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.206173297 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216958239 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.222269871 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217111248 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.116697518 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.206646948 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.203274857 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.219382435 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.209050017 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.515748201 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.197129446 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.205936533 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.492773911 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.210325649 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.51376031 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.209780484 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.20393317 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.21568465 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.233354077 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.145545376 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.199659158 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.201205274 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.209432652 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.201715111 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.212357459 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.215961682 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.206647364 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.203217635 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215901448 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.231894888 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.213335625 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.204014578 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.211994671 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.222633367 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.211259379 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.214046454 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.207538416 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.198219259 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.212405186 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.206858442 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.206047684 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.205008341 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.208732574 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.213493823 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.48916268 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.219039795 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.200557432 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.20078765 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.202883373 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.218099558 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.501865067 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.207560155 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.225170946 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.251521017 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.204993595 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.136893156 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.20942817 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.219738996 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.212953759 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.206574387 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.200243435 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.147790067 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.518206082 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.221574814 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.207109361 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.20351031 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.22071087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.207952193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.202143904 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.153513272 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.209136955 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.218529267 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.325992454 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.216115745 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.237422519 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.203515542 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.209156061 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.233602885 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.221229867 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.237381808 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.208285603 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.220116982 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.222187156 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.20230767 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.216947845 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.21660935 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.206674481 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.212024923 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.200342942 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.234223518 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.218270517 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218856509 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.227700472 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.327490273 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.203417114 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.143968091 seconds)
done (took 203.535046268 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.264645725 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.20194708 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.290268874 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.202479945 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.301684272 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.30104559 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.201113364 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.201346084 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.201551718 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.581571766 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.201008459 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.201283632 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.202543575 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.200985678 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.287186319 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.204891094 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.201567391 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.568223152 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.203721736 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.273522211 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.19981469 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.201678871 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.20415426 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.611288713 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.199136648 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.20032736 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.274903492 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.204673421 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.547601678 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.204952421 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.201486424 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.573110462 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.294580914 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.222463173 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.214799233 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.211286608 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.302630527 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.22014108 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.285337264 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.28553697 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.291085573 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.243700278 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.199473037 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.202417608 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.207673384 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.204849561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.202850501 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.232120492 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.200483914 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.202962972 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.546488664 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.214564576 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.213346152 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.203600694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.203665272 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.225118927 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.204024627 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.206078805 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.29459575 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.206256722 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.267766082 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.584075687 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.609541054 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.206100721 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.204515688 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.203871273 seconds)
  done (took 139.871793497 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.270810327 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.278761986 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.30930096 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.206035525 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.25479804 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.313473755 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.206389556 seconds)
  done (took 9.977841012 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.213270657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.206817627 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.255193202 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.25589018 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.206314654 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.353926832 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.206968117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.217207118 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.204286405 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.259977634 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.209149178 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.208013578 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.214041823 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.203444061 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.255615565 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.218106909 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.321982628 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.207868905 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.20797539 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357916142 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.204435594 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.214806826 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.271408101 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.219329813 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.209820164 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.213013021 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.771737688 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.207426483 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.206235293 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.20889449 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.205063833 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.245072809 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.209532034 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.209295313 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.205874436 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.322951981 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.207104105 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.206058372 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.209186043 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.204342659 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.208053727 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.208660252 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.20902247 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.205910321 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.208387562 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.230434407 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.208229501 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.210061779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.208645969 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.209770431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.258935649 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.208969185 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.206302624 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.205590003 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.264261689 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.216591032 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.209395849 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.206250602 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.209563842 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.207558058 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.359900127 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.25620323 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.210064008 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.257318238 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.210272215 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.210052879 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.209692992 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.21058877 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.26436205 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.209886097 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.257718245 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.207150829 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.363716996 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.232733993 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.211379996 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.21189976 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.21271935 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.209966282 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.205686634 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.21496684 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.207861871 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.211202751 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.214698377 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.208109063 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.208589359 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31250211 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.318561466 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.207948103 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.222937904 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.217573984 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.209076685 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.264096735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.210553431 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.208146178 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.262749692 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324630009 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.277758174 seconds)
  done (took 140.992375493 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.215075177 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.219373049 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.21250637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.226230965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.211786089 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.211759581 seconds)
  done (took 8.439943453 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.21287836 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.213162465 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.211613257 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.212266199 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.211810438 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.212808456 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.211943312 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.212418197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.215762285 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.212256939 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.213542791 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.214866937 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.213463031 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.212800211 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.213289195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.213036788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.2128785 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.210060115 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.212814442 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.213802651 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.316797886 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.212844172 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.2128567 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.213171522 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.217099916 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.212923639 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.220004899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.212924148 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.212947282 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.219824641 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.215154489 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.214783336 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.21356201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.217896314 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.216168599 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.213635082 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.216966567 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.214793857 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.210570083 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.214033957 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.214583893 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.213116974 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.214473722 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.21704763 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.214491352 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.217125621 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.218449386 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.220798975 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.21533916 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.216364213 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.217159095 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.214646454 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.214690054 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.217714868 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.21616638 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.218506002 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.220306046 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.216310809 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.21525756 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.215414742 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.215672049 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.216610871 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.216002685 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.218239594 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.213393702 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.216428517 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.215976822 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.218145658 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.215896544 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.215057005 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.217340247 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.213256393 seconds)
  done (took 89.723089839 seconds)
done (took 390.142334836 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.400888295 seconds)
  done (took 7.548611068 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.358609414 seconds)
  done (took 7.50810412 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.068039775 seconds)
  done (took 20.220716063 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.21750315 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.240814949 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.2231425 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.219584761 seconds)
  done (took 26.050707184 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.353957714 seconds)
  done (took 7.503895405 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.218182413 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.217929614 seconds)
  done (took 13.588586394 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.350993748 seconds)
  done (took 7.501850871 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.560464978 seconds)
  done (took 7.711223823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.212448901 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.224700778 seconds)
  done (took 13.829807147 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.1954876 seconds)
  done (took 7.344491655 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.849233582 seconds)
  done (took 8.000121144 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.21211668 seconds)
  done (took 7.363898449 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.264378224 seconds)
  done (took 7.415623687 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.59931928 seconds)
  done (took 8.749375916 seconds)
done (took 151.486933664 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.209296941 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.214083398 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.213298056 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.212123077 seconds)
  done (took 25.999096229 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.252037387 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.251607172 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.252370612 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.26171766 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.255522031 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.251703294 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.244316411 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.244700436 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.262561421 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.255632704 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.254086831 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.254579477 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.252698171 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.2442678 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.254076992 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.253738377 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.264077318 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.254330147 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.244654756 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.256201766 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.219997577 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.263000354 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.255793799 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.220015067 seconds)
  done (took 31.17717287 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.414513997 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.29065188 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.37152739 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.270717683 seconds)
  done (took 6.500168327 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.270604724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.272774945 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.284185729 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.323016706 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.350207895 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.282583732 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.246475113 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.241318041 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.227501795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.272322468 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.348343376 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.288673924 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.367185408 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.219838203 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.41624334 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.220162219 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.219219116 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.270999894 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.3232606 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.33638902 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.220281061 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.272920824 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.278587207 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.289785861 seconds)
  done (took 31.996006431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.218870244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.22683445 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.225683297 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.220362974 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.219993182 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.220613796 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.226079857 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.221228861 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.240934975 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.220554403 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.219809696 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.219416051 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.219822012 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.224678935 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.22163976 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.232801114 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.233622604 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.219256807 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.223997267 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.226935643 seconds)
  done (took 25.637084485 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.213368455 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.067371558 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.56606977 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.470428496 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.213929073 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.217243758 seconds)
  done (took 26.902565707 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.282163058 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.408948597 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.223539843 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.53674417 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.613301946 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.221885289 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.222440886 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.444037542 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.713854043 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.703513713 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.271756146 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.281380025 seconds)
  done (took 18.079736041 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.215176863 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.217610258 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.219855377 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.231785007 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.26948571 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.225091841 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.228642776 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.216400147 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.272823309 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.274711159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.227654719 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.270666693 seconds)
  done (took 36.025352342 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303563538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263294174 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.130565905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.921913633 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936811583 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.428368653 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.959703424 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624640073 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.22284811 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490410602 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.834695466 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319855882 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.472707831 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227510574 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.221241621 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.078237775 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445113473 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672168759 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219052187 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858348807 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.245414541 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.223106646 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.934229373 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.245728316 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.429256856 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.19611055 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.478992887 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993249387 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474966576 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.231787585 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.22861734 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.217169966 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492502323 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846046973 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313825611 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227816837 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.887038074 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.85082594 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.221696425 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.866231029 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.63813259 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.22296744 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.229741351 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21975722 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.153672786 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.218905901 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644794839 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.22642254 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.930973617 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.21902817 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.230014592 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.314427798 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.222957908 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.209301234 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241009129 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224674046 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.217798422 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225822555 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787559473 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.735319308 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.236848351 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.156582665 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.568092184 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965371456 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788875713 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322078257 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.224187633 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22400083 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154961698 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.932321698 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.240349533 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367354181 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.245808525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.870376889 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873427595 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.883772932 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.165444618 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738987167 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.222128549 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.159114141 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448449234 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997259052 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156740311 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.163994195 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.154400953 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87059691 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.230289022 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.571612779 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.2280808 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626306728 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.233161039 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.240207612 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244929344 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.444230799 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.1073673 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221844897 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.652113971 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36313799 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243613598 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.629521928 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156339222 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.226632444 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477467407 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.43329748 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233695915 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.089138333 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40626653 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224651945 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.24080283 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.222390396 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.234873453 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.744426791 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237211636 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.333896482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24209501 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.999822843 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910787794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224451873 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.32571215 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.879980675 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.465829242 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.934090422 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.106184612 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291611411 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227630794 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221631371 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.967735332 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.075709803 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.104260779 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.227290727 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.23644264 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.234955002 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.225660485 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171785279 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.225358405 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919327256 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.005664037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.447847612 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228899397 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500588733 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156755781 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370491071 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233473729 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.445644082 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.325403233 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.225541943 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483427956 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230992279 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.238105474 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.237081305 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.242693632 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321051018 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246212033 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.237524055 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.480513734 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.227873511 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.228660812 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.982627715 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004307222 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231809874 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.230422128 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.039236502 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.754199992 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204476086 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.227579134 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114291949 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.238396145 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.291790155 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.23099359 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.235761217 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.866993305 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.005220461 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.232911171 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.235103155 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451483047 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.235017534 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.890771737 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.306468105 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.403413534 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.767089502 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.240976987 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.160269672 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.937138416 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.917790252 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226319729 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.422872104 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.226270473 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235744915 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237671453 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.723332239 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.756100536 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231539273 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.890294834 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.233969873 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.236825898 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.232283989 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225898946 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.842775955 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.351943984 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243371074 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.240455139 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370942935 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.241512829 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.160246274 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.74386546 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.232087601 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.227914829 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.004187652 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262420293 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.888399798 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687249441 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487508713 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.890845886 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.241232018 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.056288795 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.257265013 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.252623215 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.674592744 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244188504 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.246539769 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.238959858 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.23777916 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.954025086 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.667732967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.792911086 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887477077 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706915212 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071926149 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.230088185 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.112875623 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641297562 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.164034289 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.888439158 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398391881 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.643954095 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.174285663 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409633086 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.337138426 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.92516385 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.24044182 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456771707 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052717336 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.695418068 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.254945047 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.440478828 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.263379626 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.237206671 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.160270144 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.514430397 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439757758 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.733118444 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311612818 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638661183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.711137422 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020484491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.228420941 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.537751542 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386344067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.776577142 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.617551687 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.231978816 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.932219564 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698651288 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.233811816 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.755425665 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800512231 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.231558102 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.414504584 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167953612 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.241449902 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.241081885 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.231681462 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.363269046 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.232184989 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.486527178 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.242841082 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165205884 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.231124201 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713252665 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.087787614 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.238037801 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231572351 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928102144 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245707302 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491455685 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.241996742 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.834858404 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236244552 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.165614659 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166303356 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.923444462 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.239933154 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207264613 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69512713 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.567607919 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.210830642 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254466234 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07740366 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.488352955 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.245608155 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.766681324 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460930604 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.996246964 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257661591 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.331595718 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.73249224 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.233440046 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.127304323 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467903847 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.041512095 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457440709 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.176168099 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.13815613 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.230986877 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.447269506 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135533218 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.959560173 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472914812 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.943541836 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.245558908 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884554144 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25936218 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.974081105 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.25809854 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.582465481 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.242395642 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304559423 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.244050945 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.245165484 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.244206972 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388995544 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.980740095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.24906287 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.247725372 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327275604 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.384797804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.844345843 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.009600091 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774286233 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944733712 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.768691156 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.24763948 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.234092423 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234943662 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169116477 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.38315325 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.759891455 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.50841634 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364280344 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.646420671 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258471545 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.783880722 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.254655301 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44961848 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509775184 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.105129335 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234036417 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.911785862 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.13451793 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.244657448 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.446365487 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702150018 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762547786 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350448887 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.24357041 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646471202 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511167879 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.326993857 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.235212756 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.824429471 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.2496533 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.564581451 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.241664644 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017966817 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386371864 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.245797645 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870653129 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.245910374 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.395227196 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.009005175 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012152746 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.493679126 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.651908287 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.247198185 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.774291844 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.882386301 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501579359 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307511388 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.246698088 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.340622925 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381837801 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.240997852 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.136126496 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.237319462 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08343591 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.947127817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.246275553 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774636975 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502067846 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.235075741 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.239013708 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26136288 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.246618026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.460798333 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904794125 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461769964 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.24795363 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.246710605 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.22785312 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776266775 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.252480741 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171792744 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.240512226 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461906304 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.474728537 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263270124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.690666973 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.949419492 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765145298 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.209715206 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259127745 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.243661649 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.884539746 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777552495 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.855546015 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708123306 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.897153681 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253034292 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515114253 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.244133156 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.252450885 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517458015 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.2428938 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.251410369 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.251692927 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.776152447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94300467 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.262454243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.948123856 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.176758743 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465381912 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.849391033 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.179336836 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239401895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.407111506 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.243439285 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368966451 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.251059707 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.244711878 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.242030035 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.974744724 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519628459 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.245475099 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.225594869 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.825450448 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.244341857 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24827381 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454411382 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245427256 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.913468598 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.590695365 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.495829358 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.241131965 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.228280515 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.243106332 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24015053 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.958104156 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.209092699 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.725275023 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770365385 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.241397736 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.254828876 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.244893959 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.45731317 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452169563 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.033812367 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.26743918 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24345147 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.257621994 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.148945405 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.007397756 seconds)
  done (took 1517.290463586 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.27711513 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.260920526 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.261009995 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.319311009 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.2640958 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.342182599 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.295124504 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314179924 seconds)
  done (took 51.514034361 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.250632012 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.393081706 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.268926183 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.240728418 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.251911198 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.248950704 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.666408831 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.248444113 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.251786756 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.251475499 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.251534649 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.247056654 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.851161001 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.252285722 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.246084557 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.240801259 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.251749059 seconds)
  done (took 63.593168873 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.253366979 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.405834494 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.324211149 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.247359491 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.847753574 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.252335031 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.37631977 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.310738947 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.253151232 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.521609609 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.901120236 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.247065706 seconds)
  done (took 82.122535456 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.249090265 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.249506523 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.24963723 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.2496318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.249485686 seconds)
  done (took 7.429145373 seconds)
done (took 1925.420794365 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.487974775 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.849117708 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.837404549 seconds)
  done (took 4.867448049 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.391285034 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.441347562 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.55911332 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.566763287 seconds)
  done (took 7.139736203 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.521617805 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.628083937 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.429481237 seconds)
  done (took 5.76181098 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.511289639 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.254680556 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.362903386 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.245064859 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.246475156 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.245254667 seconds)
  done (took 19.921004848 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.248507364 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.252485728 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.248981537 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.250880519 seconds)
  done (took 6.184352691 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.229563954 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.939827488 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.229434633 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.2510852 seconds)
  done (took 17.833444461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.992829164 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.007507093 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.991542333 seconds)
  done (took 7.175151384 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.245081194 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.090141663 seconds)
  done (took 9.518325582 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.534191277 seconds)
  done (took 2.716333621 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.379615366 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.572603575 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.231179198 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.153516585 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.217183892 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.631528906 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.691503666 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.322599408 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.141129334 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.159447864 seconds)
  done (took 25.684659627 seconds)
done (took 119.600671525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.747469993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.248005707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.452207574 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.715639802 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.473726107 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.45258729 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.456964342 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.680640076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.270091009 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.219137589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.716735809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.473190044 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.405823929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.245826964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.405771924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.245370653 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.477858982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.895542236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.409167623 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.601943273 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.458015509 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.365137783 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.547756509 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.442433717 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.48168778 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.402966757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.934478429 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.490720123 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.581271074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.008743357 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.410830027 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.779900587 seconds)
  done (took 182.682370146 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.245297973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.25505798 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.245758932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.245897763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.246593736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.261132156 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.256182719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.244677673 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.262702601 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.254498454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.245857865 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.246099348 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.247662999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.256809068 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.2477855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.246013543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.24656944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.249015782 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.260280008 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.245932875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.247969801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.259033543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.246979499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.246397338 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.248387251 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.2481949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.246338191 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.246754535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.24674396 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.247190105 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.277726145 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.261736493 seconds)
  done (took 201.219229189 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.247342573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.254529582 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.248314724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.24805671 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.248018054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.262798674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.261668679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.271201932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.251415043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.25006646 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.246422705 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.247620226 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.249000892 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.247780181 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.265025032 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.248619957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.251010903 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.253138588 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.244647104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.254480934 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.245427722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.250630659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.24435531 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.255750103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.244328781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.256917076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.255885254 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.244971025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.257448216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.250073953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.245407814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.256631417 seconds)
  done (took 201.246447003 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.440364706 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.252962321 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.253516003 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.188227897 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.252475061 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.252331446 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.249646392 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.449669027 seconds)
  done (took 13.523136406 seconds)
done (took 599.856144558 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.448472808 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.169868418 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.443316271 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.274940383 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.967542107 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.275275991 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.274577418 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.425754678 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.144249046 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.427009532 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.441052067 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.271940445 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.554065517 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.271250573 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.510188721 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.364425565 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.115942483 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.22764597 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.569435087 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.734137526 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.523210638 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.687075336 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.428283659 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.150829858 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.56354359 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.690502811 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.906481726 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.1252835 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.275811399 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.572900784 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.773721456 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.162302351 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.32478853 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.308909197 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.362716694 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.343644189 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.128685716 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.305653805 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.451266197 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.459270918 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.733214371 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.972152867 seconds)
  done (took 86.347422189 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.243088269 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.242832924 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.243055616 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.243823336 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.243898092 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.242838729 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.243160873 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.242666468 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.243480146 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.24230721 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.243432434 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.244878945 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.243350695 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.244464395 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.242947834 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.243841881 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.243476028 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.24652993 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.242926975 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.243379024 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.243966117 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.243192597 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.24424453 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.244437043 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.244706261 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.243584699 seconds)
  done (took 33.522997062 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.257537366 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.501953006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.644488596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.263379521 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.256463255 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.260968862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.326246331 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.259447964 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.259974164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.260668061 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.40103303 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.260004807 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.291530203 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.683077278 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.262115252 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.258739856 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.258075529 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.257929067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.51202273 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.267811434 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.345298578 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.259310047 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.326767765 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.270297191 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.27746717 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.258856777 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.263993541 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.771667093 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.261936031 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.410134005 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.944063436 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.325362619 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.726647831 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.671393784 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.946223646 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.2619029 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.259620915 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.413391698 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.260682691 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.259936244 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.325985725 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.260531545 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.670025271 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.859564203 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.272539259 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.260447215 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.787082812 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.405797462 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.475879847 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.269715326 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.682550215 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.265976336 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.26238815 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.261621705 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.474036226 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.269009428 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.259790208 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.777543974 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.280281579 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.328662352 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.265068838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.260365737 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.515999113 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.26225652 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.504480885 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.262089468 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.269724192 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.262325674 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.667658542 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.264901559 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.889653009 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.276144026 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.261950244 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.410682223 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.51102098 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824579767 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.267475992 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.518347625 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.738849962 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.328319652 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.267509674 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.761206487 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.333380709 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.266694423 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.265804103 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.26485347 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.263542588 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.31583958 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.326918746 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.810787655 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.868763528 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.791604621 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.347328466 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.276950093 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.262344912 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.785967625 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.279369754 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.263605159 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.659546998 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.879139527 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.276104493 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.270380759 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.864649103 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.277542681 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.330598784 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.269822886 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.672740646 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.264182882 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.315156472 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.263713971 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.269194438 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.266180598 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.33176589 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.267436464 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.263714509 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.851084381 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.427510639 seconds)
  done (took 166.235616924 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.25883838 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.255426765 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.257480693 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.255605222 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.25593775 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.262005945 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.255573811 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.256397996 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.261209248 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.256676851 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.256410877 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.256970864 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.25682293 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.261155095 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.266754887 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.264245444 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.876391061 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.257670193 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.255935331 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.257849936 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.030253086 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.259016769 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.257789049 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.258216339 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.258019185 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.259230786 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.265582779 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.259849359 seconds)
  done (took 149.827756521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.265049762 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.768740509 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.266390576 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.380038011 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.285645422 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.262825054 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.378115139 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.31528947 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.265659929 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.262862563 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.262154542 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.534213839 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.26739 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.723100363 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.43044861 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.381554198 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.723749006 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.267789479 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.263488773 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.263292865 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.381290207 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.271586576 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.535701965 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.77001969 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.266930743 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.770389346 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.253969155 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.266123275 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.263559879 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.770795221 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.264029115 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.534369644 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.332374718 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.318580037 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.770122297 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.721983691 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.722822344 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.392857384 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.263817031 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.263783426 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.26502817 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.254369558 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.77304962 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.268693957 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.266387345 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.765877689 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.280739471 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.267841816 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.275426657 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.26541298 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.317562242 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.319037028 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.538944973 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.778658516 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.334022023 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.28860413 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.38139517 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.635789075 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.26962715 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.725116996 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.254245941 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.777374048 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.271280199 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.255079335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.267505988 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.271553374 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.397925336 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.384198805 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.726473437 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.267365409 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.729070302 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.3998447 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.26793548 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.265432575 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.269236024 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.778137672 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.729602464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.400320588 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.38922305 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.440332636 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.256318084 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.267209681 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.256066654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.334302564 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.268379555 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.780613279 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.729029263 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.269337894 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.268924669 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.269108805 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.270303803 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.422932874 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.782114453 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.336635034 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.720449217 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.55527305 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.544298685 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.270838347 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.32042193 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.267597304 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.54307682 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.270589868 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.317928534 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.699165724 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.544525827 seconds)
  done (took 150.282074007 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.495779243 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.410970733 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.351266807 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.374941652 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.845787794 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.816395021 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.461686618 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.382855041 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.368218811 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.497984266 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.345219281 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.360651605 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.427311606 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.337035782 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.942754374 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.330606068 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.355144852 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.385147379 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.35793819 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.24691313 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.856667301 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.545331539 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.429083465 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.154876951 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.353070657 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.992908236 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.792457657 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.829749545 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.434082964 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.527937271 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.770465899 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.344544978 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.182019928 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.877746976 seconds)
  done (took 61.3871013 seconds)
done (took 648.788453185 seconds)
SAVING RESULT...
DONE!
