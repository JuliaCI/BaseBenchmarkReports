cset: moving following pidspec: 11521
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.272400446 seconds)
loading group "string"... done (took 0.595674198 seconds)
loading group "linalg"... done (took 7.021388989 seconds)
loading group "parallel"... done (took 0.157610114 seconds)
loading group "find"... done (took 1.104210506 seconds)
loading group "tuple"... done (took 1.703385653 seconds)
loading group "dates"... done (took 1.183698272 seconds)
loading group "micro"... done (took 0.221455884 seconds)
loading group "io"... done (took 0.992210383 seconds)
loading group "scalar"... done (took 38.385231131 seconds)
loading group "sparse"... done (took 12.785179272 seconds)
loading group "broadcast"... done (took 0.953745156 seconds)
loading group "union"... done (took 12.788509059 seconds)
loading group "simd"... done (took 4.285327657 seconds)
loading group "random"... done (took 8.596281814 seconds)
loading group "problem"... done (took 2.038521832 seconds)
loading group "array"... done (took 20.784119463 seconds)
loading group "misc"... done (took 1.715491526 seconds)
loading group "sort"... done (took 3.286975786 seconds)
loading group "collection"... done (took 17.161176826 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.513139507 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140843703 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132021276 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13410643 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.171159747 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129337982 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143080809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100320602 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.10809355 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156381855 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134042893 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.467077658 seconds)
done (took 5.237795927 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206217447 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085302308 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096493405 seconds)
  done (took 1.035922398 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066287692 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122259452 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065280967 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065880426 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065192761 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065154462 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0848709 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0664388 seconds)
  done (took 1.394376045 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075376012 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067415411 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084703613 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068205197 seconds)
  done (took 1.155789016 seconds)
done (took 4.725786763 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.838257681 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240397012 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184256645 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448998764 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.124364872 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.185043436 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.66455532 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.329381013 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20188977 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082567833 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121075128 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360447044 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123816997 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665283962 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075123712 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106115832 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161010251 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.431459642 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082792038 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083116283 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104064288 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.129291824 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101810936 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091068228 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158758287 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082846198 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146649715 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081263069 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083535357 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226809665 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18791557 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677696836 seconds)
  done (took 10.483300087 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099584426 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113304419 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069263319 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13996593 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096787583 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086959109 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070826485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066969294 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.103406061 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144322872 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088751917 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118280204 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065817008 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086621629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084730969 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222166808 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08027508 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099026699 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071001934 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092109896 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107582971 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093852919 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079507724 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094674748 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12919584 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20834562 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100470496 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113813001 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068516198 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096681843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.12977737 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127894052 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065195469 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083460489 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124525855 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111128978 seconds)
  done (took 4.609600888 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055730864 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110955988 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139295298 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108281379 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.179079524 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066824652 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124385172 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.081108793 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085401431 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233331795 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.0837183 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.464539879 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128361671 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101675602 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068679911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068103017 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083382285 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.538198544 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145489429 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112432948 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103132942 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073735774 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086286218 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358288401 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070419347 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067658372 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087513718 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061075539 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134525392 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07035699 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.136844236 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108669348 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069030734 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119882935 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179288919 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090677835 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151275429 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084021523 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066408355 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166520684 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090405628 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066921816 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083096399 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122771034 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12389481 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070392573 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086922645 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179418106 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069954062 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085342502 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.836501775 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167369349 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079671065 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066839925 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292953714 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086469579 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087153168 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065285939 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.244763545 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152894515 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069458697 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083797091 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069297685 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067603852 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.088013178 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380241888 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07070525 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712112407 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071170729 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078756959 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069526494 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066628323 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093085449 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072764949 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10287052 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067470755 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06894267 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086865728 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067491285 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069446883 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106893657 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212760006 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067625916 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087399053 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067006271 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10547143 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099921467 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089841263 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067456472 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118232604 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069328017 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066634337 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119843242 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066980455 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10376232 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085704443 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113604003 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085728734 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.11833694 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072918862 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.06501726 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117596156 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089155419 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100416814 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096741246 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06512047 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085629649 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.226556776 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065128946 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065280092 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089014362 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067149484 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086534686 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071319673 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080173453 seconds)
  done (took 21.061913127 seconds)
done (took 38.07016657 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.292371155 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093420414 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074688514 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094768468 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093795631 seconds)
  done (took 1.585149403 seconds)
done (took 2.492789954 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120055632 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117540124 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063356324 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113491706 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06391767 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118123174 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09743816 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.099036534 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118106392 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064469358 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094656829 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081837273 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064366701 seconds)
  done (took 2.155800905 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085081425 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082705207 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08615789 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082366698 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062628962 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098875197 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080666486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104831752 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080177017 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07124353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081914877 seconds)
  done (took 1.815605104 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083466766 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082832842 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086384927 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080916835 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063249281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098146073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080708794 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102641606 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080999324 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089593471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064946447 seconds)
  done (took 1.818284182 seconds)
done (took 6.686735102 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079558361 seconds)
  done (took 0.976212074 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.666634902 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.071870635 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080171301 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.136528834 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.201962402 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.142623607 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.326249445 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08467976 seconds)
  done (took 9.809268413 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087591516 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100999151 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069942645 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.085343928 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07107457 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068805178 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.089982839 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070782789 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087907173 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073038365 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070978537 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089302106 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068639623 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086229557 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070151866 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087344528 seconds)
  done (took 2.241247707 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092518088 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.10898641 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072402994 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094314142 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071939926 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.09110037 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074172065 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092342112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.0704868 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089254421 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074713701 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091306423 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071776315 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082422036 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075040321 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.093080563 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071806178 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090442624 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07608619 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091367184 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075392577 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064772404 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089446254 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074233042 seconds)
  done (took 2.972275135 seconds)
done (took 16.903000031 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113772562 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088799278 seconds)
  done (took 1.101962317 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083850097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099998714 seconds)
  done (took 1.086676966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085345049 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08189647 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089940683 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095236427 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065429167 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083639386 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105144057 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0667726 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065021438 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083992523 seconds)
  done (took 1.729374101 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071207254 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09358792 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071754842 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098293401 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074316917 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08111791 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074008692 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084711788 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079147038 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062693005 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069840143 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10057413 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072229951 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102172572 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073411733 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08563451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071219086 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066469153 seconds)
  done (took 2.33781011 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06752094 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066944728 seconds)
  done (took 1.042736572 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069800468 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063379434 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084221689 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067428216 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080752465 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063128446 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080453243 seconds)
  done (took 1.417779787 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.410796603 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110804498 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.330339765 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071739989 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101459182 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.287216462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066851559 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070673821 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090601584 seconds)
  done (took 2.487839305 seconds)
done (took 12.109832608 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081494618 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085473712 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111956098 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.396722457 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092509376 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083872281 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13260206 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.229420378 seconds)
done (took 2.12751006 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128059472 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618088065 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.385007741 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213010196 seconds)
  done (took 2.132727836 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339685911 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109443358 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05926671 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.085141365 seconds)
  done (took 1.51291617 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067038968 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069280954 seconds)
  done (took 1.051812112 seconds)
done (took 5.743063508 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068326297 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065923143 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084925154 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062416 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086036374 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065095916 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063650689 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084959527 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066904008 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065995439 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083233811 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069317064 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.066013908 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082987465 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064216123 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063026032 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083887933 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063924211 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062997765 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081866415 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063568132 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065528919 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081133541 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063695109 seconds)
  done (took 2.661908994 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085359075 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084224494 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073032127 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070723519 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092188008 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071614679 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09036638 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067500524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089599163 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069045331 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087145106 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071441237 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068252799 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089299654 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068289539 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088264983 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071594591 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083829691 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06950289 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087443817 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072984391 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066273182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088016112 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071736657 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088345691 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070432792 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08593031 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067324884 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088758345 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07113542 seconds)
  done (took 3.271952555 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070983842 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063594155 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081983919 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071040808 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063516622 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082599666 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064203503 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063345703 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082765662 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063700004 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064379676 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082588686 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064280944 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082353874 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065689903 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066941869 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097677647 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064759797 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063852729 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08354406 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067290311 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063754884 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.083071295 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064754697 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081361925 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064873071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064345606 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080989597 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066140272 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06340333 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085136709 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068025659 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063367465 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.089441366 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067971079 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062975348 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086099382 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063821019 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064368208 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081855875 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06374305 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062906074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062835393 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069006381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083949988 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066437887 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064351376 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083963618 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065368751 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06682848 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081785548 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06376734 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082806449 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066328405 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066881011 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081549007 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064952703 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063599661 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082632604 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063900695 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06386239 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081543444 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066622171 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064549815 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096787859 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071114928 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08084974 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066681003 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064168064 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084137376 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06646836 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076459902 seconds)
  done (took 6.093413524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092846007 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106391514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064771238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084816607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062376032 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082567404 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069044302 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064349454 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083698911 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070091796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081569773 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065811969 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065944382 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094706136 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064822927 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08281016 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070820121 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061914795 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082466414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.177719508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082081461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06848988 seconds)
  done (took 2.709141472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.175870336 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070334275 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125400331 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091515173 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069783135 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091769747 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070261102 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070195552 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089793831 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068974856 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086678614 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069719479 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086017364 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068624136 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086507375 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068817098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087464858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069908611 seconds)
  done (took 2.478180387 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079408383 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065523178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104650823 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065962963 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084895566 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069224777 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089550257 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075075399 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086013831 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067032532 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07325587 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087586207 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069309984 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084019511 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069860209 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065282221 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087616382 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065812812 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092497828 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071892443 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089562929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074204802 seconds)
  done (took 2.65065306 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081911437 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067251476 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102038857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068502275 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081357444 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06530985 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088325629 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067752334 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069862352 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088126601 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066194848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064713836 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068412876 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065271863 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090590134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066801988 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086363084 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067278521 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067779645 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080609486 seconds)
  done (took 2.438174219 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090020904 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085949984 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068507574 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093927371 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068699255 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085431124 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077531853 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084899167 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068732751 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105017312 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068978207 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067063967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073820891 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091868274 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068879089 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094445449 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076509769 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094544814 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067734089 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085453211 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088304381 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066467071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074006938 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087914928 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067583204 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085926852 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068661063 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091305502 seconds)
  done (took 3.183358013 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068649603 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065896794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081708574 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064748853 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063116841 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081895997 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064801463 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063834339 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084092859 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064927447 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066171341 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084509789 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066833528 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066672487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084598328 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066303255 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065534974 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083062105 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064217766 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063095246 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084666913 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065990725 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065789942 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082768473 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063872036 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08308775 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065021778 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064215312 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083898609 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0646141 seconds)
  done (took 3.073659824 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078383053 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072183861 seconds)
  done (took 1.088636258 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065537275 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079864209 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082522158 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069945069 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088629132 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067500465 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073149486 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068481702 seconds)
  done (took 1.534844708 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084509052 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078927393 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087793759 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079935968 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095991656 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082599845 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154663294 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086193719 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073086915 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06405462 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099992522 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065756985 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091196807 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06687806 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071319091 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092340355 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064898853 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090796091 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069933159 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065169648 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06610057 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073562148 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089683958 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062503849 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067686168 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108898329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096458425 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067759355 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069318725 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093212904 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072343428 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078458629 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067240235 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067008588 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082833251 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07769945 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100549619 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069993683 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093144858 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069156253 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094688942 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062992233 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070752179 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091430737 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077204459 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085203616 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069142823 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061705756 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082860021 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069183206 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061096509 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085034191 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06173666 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091021523 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071423919 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078385082 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084243769 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067966477 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08813368 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070229955 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072242899 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086847954 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068767214 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08398378 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076835411 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071002575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094420447 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062203336 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.07927518 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065583986 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075862307 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108161433 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072671602 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086632343 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067239928 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.083182927 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070079158 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06671006 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091813117 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072799594 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085258907 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072515614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092981476 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067159615 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068674493 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094217369 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063961037 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068417695 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063743005 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102847954 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065987473 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063692496 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083830426 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077108332 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088162266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067354979 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063691377 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093093413 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06156444 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085276519 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069026219 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066639824 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096367862 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071113484 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091209929 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075503469 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073180739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065661403 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068335882 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06244377 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066418237 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089330805 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074535885 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060233748 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088688231 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067247275 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085312522 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075997943 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064397129 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.086529902 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073974584 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071310066 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064597156 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063288184 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090805706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066174308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089134245 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075481298 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065264262 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061573304 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06067474 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090448264 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067343421 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069729227 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07038583 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068237736 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.082147905 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065117451 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090818709 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075985685 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066596616 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086538325 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.07296322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086036561 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066440871 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07298999 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088310476 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066031999 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090742321 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067955651 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061597383 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089352707 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069714585 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083737249 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071181366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068827661 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08725165 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067379972 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083901342 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075294589 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086810214 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066776496 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066812043 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083749233 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078790875 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086565445 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063363819 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064114751 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.095053386 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064614467 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083765941 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067085484 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068264237 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085734625 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065172689 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066137743 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08731379 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076934117 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090431683 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067769118 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090931023 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07796172 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084414498 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070583264 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066181696 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085904394 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068382136 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093684627 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072923819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070910999 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088911133 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063970191 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090574463 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074862041 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064942843 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08361422 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066101519 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090198911 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072421081 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089359655 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06837114 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064981629 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086540026 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070009337 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087198632 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067522659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065559238 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093321308 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065609386 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092544809 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068225595 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095180619 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070464483 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061372634 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089197432 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065289625 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091479074 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063382055 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064177553 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084726323 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068514347 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065231255 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088625956 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060970837 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091815561 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075383883 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066515343 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.085358544 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066996204 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092324267 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069382659 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06948902 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089636252 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072932923 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076373408 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065382588 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068286836 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098333386 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066232322 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080334625 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072594513 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064110458 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085720023 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065259518 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083341779 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071161873 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094109336 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074286209 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061073382 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088729907 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065807239 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065462421 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08207525 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071333848 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088932002 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068253192 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073715798 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087355814 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067959355 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090378573 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067108932 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066850586 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088418125 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069475959 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086969905 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069267449 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065114678 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089303306 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066126864 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083831622 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069659251 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066383495 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086185706 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072646801 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084678013 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068293298 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068919399 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086407368 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067884204 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085748055 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06709453 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069141899 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086352872 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067583442 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068388677 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081541681 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074021935 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085029676 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075371806 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066669225 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083349846 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07436444 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088312023 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072410845 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086476 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068219209 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067074213 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085189676 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069864054 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072607856 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06373955 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075394545 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096383306 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067452267 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088950369 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067712948 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067933645 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085756996 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068723275 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085685277 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068371903 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066468403 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090522227 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070083422 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084960793 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070112589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067670056 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066264986 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06643736 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060236609 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087851709 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066665538 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084748774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077560012 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066469541 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086573166 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065802672 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086949783 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066853041 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062935206 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095669761 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075713708 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087056174 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073355356 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085037102 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068389188 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095267735 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062113268 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064892744 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.08405473 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065141854 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072395857 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086910801 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074814439 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086436823 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066790379 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.0631291 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087149719 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066003203 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079979424 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066078698 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07063848 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084976168 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066709937 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066283091 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088898004 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06756635 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095395069 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066385035 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066812057 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086606177 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063815053 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08509807 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067082613 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069427191 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086792723 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064516579 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063348991 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086070739 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067497091 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086638302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067393116 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067997032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093402933 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066364956 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088235249 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070624597 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064742596 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089171922 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066961687 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084560719 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066883112 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070463871 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089354727 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068647828 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095243285 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06745443 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067136737 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086829144 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064674374 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085037807 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067883911 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06639261 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085912328 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069165054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092573471 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06614496 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069496595 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086816834 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068035865 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072448723 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06615313 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06825769 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096145319 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067463509 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088381006 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07559968 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090080244 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07169636 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067781326 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087975535 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072997205 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084379027 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074749722 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067550644 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086978464 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068527752 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06365032 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086849385 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066882599 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084941688 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073322574 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067370088 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086026292 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066374656 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083513431 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.0685988 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069755524 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093614966 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069263532 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088802704 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06308071 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063956602 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087560025 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065170158 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067748357 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089519514 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071848565 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088840226 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067704157 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06490921 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075006266 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070501544 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091916312 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064917404 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088963234 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068950844 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069337922 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087358542 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067185532 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067978779 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090859266 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068570962 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085912872 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074500892 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069933537 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087662403 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067609508 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087477914 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067635611 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061754956 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087767722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06908954 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090925756 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069519217 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066096232 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097206453 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064130842 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086367688 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070911077 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065374575 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091438087 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061914092 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086824302 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068877705 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06698776 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081738719 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066107778 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064215331 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068439657 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06470094 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.083649666 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077927068 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09508528 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070491396 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065444044 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085007154 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063166218 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062090544 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086812881 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068054137 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087731246 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07780768 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064969202 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086098148 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062335236 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086034258 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070114644 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069529544 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084292732 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062271055 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064816658 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089979736 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072231118 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085288687 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066575779 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068710441 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089328921 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064965576 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089175037 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065134851 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069864947 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077599088 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065484625 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089471813 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072948174 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094433357 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06817423 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061842844 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087130785 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07006893 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085959275 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068733379 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066883441 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101427303 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069756798 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085970468 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065469375 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087461824 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067573504 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073969366 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087528182 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067789607 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089650053 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069804686 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076019523 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069044796 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072610784 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09304518 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06963831 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085232109 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067819689 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065655815 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085525948 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068433653 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067177883 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093234278 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07441123 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087000486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077515604 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09627504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068990436 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082831492 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06752596 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065441103 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082174245 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068532806 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064909537 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085033053 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0646611 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065419116 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089271684 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072597699 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08765723 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067710035 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066236179 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.08236025 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068937731 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088314441 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068806179 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063829603 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086820732 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067832725 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069995314 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069069257 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062881479 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09022296 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069157867 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066902477 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08288223 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072935596 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085089147 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069662112 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065780366 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065471746 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066881126 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090643933 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07327469 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067125114 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090043279 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070528149 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089432032 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064833219 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063300668 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091999705 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065550122 seconds)
  done (took 46.282860855 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100719622 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082955772 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062940844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061980892 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094890871 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062817575 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083231091 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063396822 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062846926 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064033885 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061185901 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084045193 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072181768 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099307083 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074438384 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087773558 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061857913 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08335229 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0626068 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062418247 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069919393 seconds)
  done (took 2.545181979 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076057277 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070186224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071167011 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098377715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068193417 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092093913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073871681 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09145207 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075954581 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08755475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076444177 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091139895 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067093139 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088076153 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067102765 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091075569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075959124 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088631631 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070487776 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094523508 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070545192 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093080491 seconds)
  done (took 2.763478751 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06835163 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06574496 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087718328 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06274866 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065368074 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081088034 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.078477507 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064240235 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067931844 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063892176 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086861693 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065493501 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06678352 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082560206 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066782097 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063072686 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.129798662 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0898112 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065332097 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087255298 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063083976 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067913909 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0823965 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062814094 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06497234 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090140749 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067269846 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084227242 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066907726 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065140197 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086221111 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064631318 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066877315 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087402125 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064997383 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065077246 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086665101 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066119464 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081469965 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064988361 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066804501 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082772622 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067211094 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066538849 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085586825 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063626379 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08731578 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066884954 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061071002 seconds)
  done (took 4.590433662 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.082190882 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129413098 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067395859 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086495188 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104026347 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072673358 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091924436 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088908629 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062839999 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063125399 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10628712 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104520536 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066407452 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091920143 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073355086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085450539 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068576865 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064603983 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091541533 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065562551 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090649595 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072768649 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10156677 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099336326 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07075392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084605933 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066083332 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070105866 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100780752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.091391999 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071633888 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092151088 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081515306 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0928051 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065627501 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08872785 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08275096 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086918528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069036197 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084311898 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069603527 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090092104 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074153264 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102547315 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066988839 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.09049946 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067889155 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063260534 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100477093 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067531569 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095341695 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100049213 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070343035 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087117519 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07230958 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101532705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066985906 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084086872 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070348301 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098984341 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064097041 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08894128 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081948124 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087530655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074083312 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100896556 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071448041 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090831039 seconds)
  done (took 6.74546973 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078030123 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092213838 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082075674 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101629941 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07157254 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.095609945 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092203611 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074850924 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092107904 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078628877 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093596208 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11379001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069498869 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095982426 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073662344 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093708834 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073334544 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093281866 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073653383 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093497438 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072950557 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078418716 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070554806 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078099291 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122901785 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068442712 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093408083 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073040597 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101585053 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092161323 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081798177 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09283039 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073171082 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102022053 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080005403 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0708889 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063950667 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095679039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072327374 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094326666 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067273328 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101727873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093196945 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068004508 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092810747 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073928585 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079389408 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078544807 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099113844 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098007712 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074798971 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10147882 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072364523 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093565609 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10094369 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104959748 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102230128 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101869625 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073889326 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101692019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100275862 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087529583 seconds)
  done (took 6.371865119 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086185371 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096280407 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077146075 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083473447 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064729323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091370718 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065130313 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064537744 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096040517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074501263 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099055745 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090295229 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074269576 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097746234 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070946253 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094027253 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070343808 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09155084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074934008 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092486834 seconds)
  done (took 2.654664314 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076277712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082493099 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088800463 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071017667 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090090429 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071664248 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089235109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070435921 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086189567 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070145577 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0753115 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097612358 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066985557 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09364467 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095992953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073662498 seconds)
  done (took 2.298469594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.077864547 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.0924436 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080904739 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086895224 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065918519 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06216363 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088014792 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062546134 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062502271 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099715588 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066145977 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090416191 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065996328 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085331833 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064325779 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068201548 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084183915 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.0644294 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.086270159 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079654982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096840443 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066425733 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066120305 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087565481 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067100771 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092438938 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066644865 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084238095 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064334224 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06686205 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088489094 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069496665 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08413972 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065348569 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065005695 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084814286 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066316026 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087081099 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069351119 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065684699 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085978963 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066030894 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.08649444 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067511119 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06200212 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088598035 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06264014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.089400124 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064765378 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086833476 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066648541 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068280601 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08860539 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07305002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089883662 seconds)
  done (took 5.18688061 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081668562 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068864893 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08359478 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064570698 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067821846 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066474712 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068639366 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091343494 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068791963 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08435674 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06986733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068544261 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088529478 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070023371 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088465565 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071100602 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062087576 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088986872 seconds)
  done (took 2.354904488 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074122461 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066563807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094466185 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067001815 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065192256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090756025 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06258337 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085793867 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065957805 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066247531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087129876 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068472144 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084551109 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069155289 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066389409 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087258025 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069777947 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064679521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087886419 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06281054 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088718237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065617232 seconds)
  done (took 2.643445073 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074412729 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091068507 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162059013 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105519932 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08189812 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077991198 seconds)
  done (took 1.600051258 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093230858 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100508665 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067796674 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086915296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096327019 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067079615 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090252261 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067658637 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098679995 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097929032 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069559301 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097915444 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076528367 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098210017 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094634433 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0766533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088804329 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070037812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066880597 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107494379 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089242735 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077832998 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090164661 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068651852 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089780038 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076939048 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09828218 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076646317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066534116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098559722 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075638682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089316031 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077673616 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099155556 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070482185 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098861043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067968421 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1080675 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094760838 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077569203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090529717 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075160119 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09795278 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073801985 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098086367 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06824869 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095809113 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068287537 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091092048 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108572335 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075473751 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098065667 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074130744 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099053969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097881477 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08835736 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09954673 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097396993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075387839 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098267218 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076107998 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095411801 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096994155 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078333332 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095565352 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079750391 seconds)
  done (took 6.710452316 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08481258 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107316377 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069445952 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075583979 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074142866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092883914 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068575211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090904925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068505471 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08971603 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130222722 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070607957 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097561456 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077242297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09019496 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06827201 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089980555 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076626632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090001465 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107795332 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069484076 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098169263 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076752146 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098572525 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098320651 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075355217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089206274 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069770697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089384085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069364187 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094439332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069739168 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098391174 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068581922 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075105142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066933368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092721278 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073491705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091042915 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073290434 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099028498 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107195419 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06870203 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09005623 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077190778 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06679837 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066781247 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091801193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069103948 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089721402 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078152402 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0994117 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09845525 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078834126 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089991129 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069480358 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089775771 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069651972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089239932 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075502341 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097933974 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068855212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109303176 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067383149 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067876849 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097913312 seconds)
  done (took 6.548558746 seconds)
done (took 131.39910647 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204549761 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187229199 seconds)
  done (took 1.400127118 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071560716 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095986964 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099861142 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128676496 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088307742 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100329307 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097974882 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100383452 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067151981 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087784782 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067429248 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068367674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153307019 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067734895 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065949581 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090886407 seconds)
  done (took 2.466149005 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.1002849 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195659699 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098572646 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088091881 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09712706 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096431532 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065081302 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097648037 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072304707 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065503146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096379735 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070597787 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.086782503 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071919746 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091606685 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075288383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065098042 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095761198 seconds)
  done (took 2.646205915 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103816044 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143647545 seconds)
  done (took 1.263411142 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.199812417 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124624481 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207032526 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.409217664 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206246663 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282086072 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179328965 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177074654 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158712108 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175372756 seconds)
  done (took 3.132898634 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099644787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170626765 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.305001179 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117024256 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095729571 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115615791 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118410787 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.10115559 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078704363 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101548328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099590463 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078060907 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11867135 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075308157 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095791623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077732842 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121424442 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073787432 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097370758 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075718692 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118828369 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067581774 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074656468 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095265149 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075403411 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097414831 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066090264 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08673512 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075931573 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095285157 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07913087 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113597748 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075896313 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.128628457 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092638393 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106547709 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075330272 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096134815 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075327665 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07136539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075006068 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099838164 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073478225 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098675801 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066595256 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076587239 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088186972 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066776167 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100251632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06818361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099995807 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078833264 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131592608 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088775065 seconds)
  done (took 6.21018537 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.707683878 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126563765 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070477125 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130468566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1174644 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07480243 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.761993587 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11427148 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200721432 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09272901 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108998745 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071300957 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10189185 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08541785 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131033045 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100966054 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115601435 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07142576 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099153449 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.122190129 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068095318 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115484624 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09036679 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.3994006 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066976176 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092190097 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068253614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069814894 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.132979876 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080672587 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069866333 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167765794 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086509951 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.146193769 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088992516 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068913831 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068327385 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.101829905 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.203854856 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.181742508 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152524386 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068805688 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067696223 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069107558 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088641166 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090932231 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135338998 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080799022 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14186308 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091758595 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070486374 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089819447 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071449138 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100665413 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079880124 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102887294 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.251453757 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089684558 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069584476 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071464072 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224666441 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079680355 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102693548 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093436117 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.156679284 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06959336 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.741843706 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086989772 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067796656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092357765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068505802 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092380816 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069919759 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.141177301 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.380656603 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071467961 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069928324 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090590214 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174856869 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078129924 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091235409 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136731652 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06797655 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090288211 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070535913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069414797 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.160943347 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.0820228 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069224462 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067853511 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069369923 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09247818 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068731803 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18895244 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10187974 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081247501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185097178 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091150395 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.136343902 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080926711 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069961968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07878067 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091083874 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0723406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06873132 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102385841 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117694711 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081032303 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091999692 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069580648 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121375148 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080642726 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090662998 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079614294 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.42266891 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.101935731 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067317552 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080222601 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066913786 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.138047896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092583914 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.205683972 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068342804 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101550998 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067872098 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090301843 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068556564 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134736943 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091744167 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069391658 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068933693 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092209051 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079042587 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181578101 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070746381 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.182013101 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.156362067 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.091894706 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.142687775 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069077514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141263995 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090691159 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071269152 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07014539 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734990849 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069242967 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068649795 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093185035 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161636687 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069081232 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101381838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08019124 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067473345 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771259032 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080810377 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100160532 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079276764 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092098245 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069079019 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089238098 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070669336 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132743785 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191378837 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071905169 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068043615 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100200369 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.134874326 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067492185 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100726258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077778636 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100844666 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068803891 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091855563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080511744 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141448092 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101283549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.159056124 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.527933622 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069459777 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099477439 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168474508 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089003198 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085661416 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068109559 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081789393 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136810463 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098947742 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.253474694 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138895715 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161249681 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080587751 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105944942 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068159706 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090093061 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080140884 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090783433 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070778013 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100150225 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071051771 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069429567 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.106638257 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068773629 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.19960152 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.089894955 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079428446 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0895464 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070576503 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105333147 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069297846 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068892042 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102481143 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070228093 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09974253 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.814025899 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100037633 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069123483 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090248707 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.162588941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137352413 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068328489 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09095447 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070828358 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133498221 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.160183554 seconds)
  done (took 30.74516781 seconds)
done (took 48.878232676 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257783089 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148885751 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.227315204 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.114960531 seconds)
  done (took 1.86067159 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147404391 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101343672 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118222692 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065414941 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125417345 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087379883 seconds)
  done (took 1.689868828 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.391543782 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.237978279 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206478961 seconds)
  done (took 1.874272098 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.226358964 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.23591246 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415748342 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.277342258 seconds)
  done (took 2.308909479 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.167766562 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114075941 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068041619 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082555178 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160506981 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212101176 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125515959 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.172809119 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079318315 seconds)
  done (took 2.276231604 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192938759 seconds)
done (took 11.24541339 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.109109719 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099976582 seconds)
    (3/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074702489 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.212032955 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.102093117 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.219016204 seconds)
    (7/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067078788 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076070587 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.191645521 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119834878 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.146785503 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.205663163 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081847738 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.106413536 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 0.173879329 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077205236 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09778889 seconds)
    (18/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083273347 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17850973 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.182922391 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.175574856 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201412103 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.151927798 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069975726 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.142113362 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.215809299 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101932814 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065410405 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122715746 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.136411295 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10699094 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.19005954 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099890979 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.17239173 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.152442668 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071156446 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.119217775 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066104349 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125263355 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.224976092 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079286206 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.160876284 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.125410777 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.202541896 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136726966 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088414707 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090639243 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.145826051 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073324011 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072024531 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097435347 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073071157 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.201080934 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097257664 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071512633 seconds)
    (56/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.185512929 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078005265 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067014792 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095265338 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.179300708 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201394387 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.133511439 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191905583 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.159082888 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076846566 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066101439 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072305286 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.099151615 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092213614 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094737864 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.146701936 seconds)
    (72/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131795927 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051430644 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119661477 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069782303 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050641031 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124211477 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066472775 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066373196 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.097340115 seconds)
    (81/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066262469 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.21504642 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.089224077 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073707372 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092661036 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132962923 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.162159951 seconds)
    (88/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081077694 seconds)
    (89/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071617184 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087052699 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06886139 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098511134 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124394959 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066728571 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123816437 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066540509 seconds)
    (97/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126492038 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158511622 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.056162399 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065760981 seconds)
    (101/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09703075 seconds)
    (102/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074104452 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099471403 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095295995 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098068646 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099201696 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097395031 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116319619 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.171065114 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101154915 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078080454 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111303583 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075553242 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095043643 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078150403 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073813178 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168446657 seconds)
    (118/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.167234912 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073334963 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095054041 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101033103 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052138561 seconds)
    (123/309) benchmarking ("sort", Float32, false)...
    done (took 0.152216229 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06878374 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069664468 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08896944 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073475026 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.11293322 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093369314 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052907966 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164920489 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.158934255 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.290848889 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084931883 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073211856 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07158289 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072876863 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070123175 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.102196583 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066148098 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105208571 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052066621 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071814592 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09236477 seconds)
    (145/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101520942 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.161142956 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073655683 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067154862 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.214406554 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194604721 seconds)
    (151/309) benchmarking ("sort", Float64, false)...
    done (took 0.12575708 seconds)
    (152/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.123073042 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065983463 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09622018 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070841213 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051197299 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.165316024 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067676352 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073187824 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.114645194 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066060837 seconds)
    (162/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.051964828 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.084449256 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.162736572 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.132387472 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053034016 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050979865 seconds)
    (168/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094009676 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189323581 seconds)
    (170/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054411304 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077522615 seconds)
    (172/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060213624 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072412983 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064085989 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09665535 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105077788 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051447881 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098812011 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.202175809 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177148909 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193540958 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051421496 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.172432143 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147617979 seconds)
    (185/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100431698 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.090508565 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.139801856 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.138159274 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135726661 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09638893 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051782948 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066381514 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088639685 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067872342 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066979115 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09908545 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053943711 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067304005 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.126824285 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163206739 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.136755187 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.074994113 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073452387 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064521879 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111920986 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08794416 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185223787 seconds)
    (208/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05225285 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.11966329 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066975315 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082969015 seconds)
    (212/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077104921 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067583349 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078713212 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091955264 seconds)
    (216/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.053316685 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051067417 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08941214 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066613701 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074095082 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097339149 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054219304 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051478394 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086354167 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134683343 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.07575748 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071835949 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050935695 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.11794714 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065398818 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050807254 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.075933188 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13910351 seconds)
    (234/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075482887 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061210994 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.160289296 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167970585 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.076411735 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073144654 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.192873155 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072430484 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.088813489 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171487808 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06264557 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076107784 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05251937 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051445929 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090027041 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052251837 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092446397 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092477901 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.11818774 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.135603988 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094179112 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078202765 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091544888 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061452592 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09106461 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089255453 seconds)
    (260/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182833343 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093081987 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079251151 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07107874 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.07741843 seconds)
    (265/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090099567 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098083318 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055416593 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066724362 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.086992883 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10107877 seconds)
    (271/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051679221 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076660944 seconds)
    (273/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062496592 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06660458 seconds)
    (275/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105402033 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063244186 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112956167 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052726863 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066813077 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067581646 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076011868 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069557423 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141327854 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066874495 seconds)
    (285/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052581623 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.171108381 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052748517 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096764628 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0525029 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065747951 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064456138 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073560645 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050888931 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06338694 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.100081674 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066320797 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089270259 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081484802 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.15106614 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052787701 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071534116 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087468127 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064990285 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063932614 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.098186168 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053491886 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052546081 seconds)
    (308/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.085996363 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053021857 seconds)
  done (took 32.835940397 seconds)
done (took 33.883085915 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083922173 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114574474 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075427611 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092107376 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105434762 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076163981 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097502146 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078382916 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104603407 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081568395 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103217363 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055075916 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07315352 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098863896 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074976402 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115732364 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078153118 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096731138 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074204552 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065007113 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096880267 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066424834 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066947804 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079050321 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079284856 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071425775 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09703622 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07421748 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089626773 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066875626 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068688962 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096972248 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06580342 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07712161 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09616087 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07329018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098093881 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077428936 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067490487 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089412052 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075040439 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065712972 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097232129 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073495775 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071094797 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095702045 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072679315 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102134796 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091999136 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091850106 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076571069 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077053375 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101643441 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072558469 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0932048 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074134751 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071157344 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089483484 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072325127 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094146337 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075008439 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074001343 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096866437 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074296238 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072878999 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074442771 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074033957 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097810253 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07581746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070371076 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090823338 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073581493 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.091750752 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068090838 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075610128 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100883784 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066344633 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071585064 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071731771 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070203504 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064049337 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095401427 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068475583 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07122505 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093102845 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055641211 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069306683 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09659357 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065875235 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096922399 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073578054 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072438291 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091510526 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077425503 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06526335 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094989588 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067225218 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065876044 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092914118 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070315 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065356562 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092135827 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075183255 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066895841 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096616302 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079529551 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089610647 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072819664 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064917423 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090133954 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080952801 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098054087 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066857173 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068641471 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088838492 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073337031 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064736656 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090250858 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066994712 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065559681 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095735947 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066144256 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067300624 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097095531 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078182807 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088606471 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070882137 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067877891 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089825413 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072486534 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066342284 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090446764 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069208192 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062562 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091825317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067650845 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072864594 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093441612 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074674821 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066670462 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072433215 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06953071 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096434993 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072690839 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064742596 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082520198 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069394099 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068177806 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09086542 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067294043 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067956758 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064698057 seconds)
done (took 13.218589081 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069894961 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169414139 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122853105 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096875908 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111110467 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067118055 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.07641883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127983385 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091620273 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103657043 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.112386313 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08519536 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138928374 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065031183 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090475844 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071330786 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067162867 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112888293 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100884391 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085080558 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136799011 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06553836 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.121003283 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089450163 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11334535 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126826231 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068458648 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069495038 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093782874 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092016913 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110949458 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070030664 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066049019 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123868126 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117814354 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084755444 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.090159332 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08486701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065979628 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090385258 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08856163 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124149774 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079894949 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079391361 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097137485 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070370545 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067058708 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109965991 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089228371 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104470903 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110581857 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106462229 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093629903 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08164606 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089012368 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086908616 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10608219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068779814 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066587807 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093055384 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066427445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069127061 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112688099 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114481976 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071032134 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105337539 seconds)
  done (took 7.298302193 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085667255 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090616095 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.108619069 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083048992 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.091493808 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066901229 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066588563 seconds)
  done (took 1.701904737 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070669794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089575977 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114160389 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089879273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110071923 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087744649 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101623472 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067740427 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082430426 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093948694 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088762601 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127599672 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069278178 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098922193 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091610371 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090141333 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092487356 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067183415 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094614921 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091090675 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093061046 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088419285 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068453487 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092113841 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081411179 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092282891 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114720818 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09626536 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069852998 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070596516 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090412023 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108473981 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105107646 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075182805 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066671434 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107169059 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081801236 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090177258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083842611 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095809865 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082800247 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067824118 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093239796 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066489464 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071737203 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.103100805 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068545081 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067510452 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068710415 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085403363 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.094596184 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081616098 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.0673151 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069113493 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067410262 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098429285 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078481339 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067958838 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112478809 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06952733 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108945494 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084940304 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080728856 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082529404 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06865191 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079044018 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079257652 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.097806342 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070517603 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071793615 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109581947 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066054877 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068509079 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104020039 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069054377 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114800632 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090789947 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092214618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078848953 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067324787 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092857902 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068379845 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089500866 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096447802 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067411414 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.095243961 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071407582 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065242824 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091897054 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071522962 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064969078 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068017636 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069822109 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066955995 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096964164 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084503077 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093669327 seconds)
  done (took 9.330951663 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072287273 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068423318 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094069413 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069142078 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068275679 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093668297 seconds)
  done (took 1.588186755 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097371896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09370017 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082000849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07225819 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130473365 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081191745 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10797785 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103898093 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085406599 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078613004 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.108305122 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082213346 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113735414 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073129044 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106651503 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072957465 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106651575 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076854497 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103540296 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074906196 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.112149916 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074580136 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073349912 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108684977 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071516765 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098349447 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077368311 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104169055 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079879136 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104852809 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074726637 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071403876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096548026 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079775591 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107833883 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071416215 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098050214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072126726 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101405801 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072299842 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10599982 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07553687 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075145597 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097471274 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079180287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096022734 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072124963 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101092132 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08238335 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095027456 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073359923 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072159479 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096001926 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072079645 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095627241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080626772 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095519892 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083422721 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073344557 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096900882 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069639469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.095863868 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080100706 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095752653 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081336514 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096214376 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072305584 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073442491 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098977648 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073467834 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.09614522 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070902777 seconds)
  done (took 7.449089513 seconds)
done (took 28.477441218 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.681920207 seconds)
  done (took 1.800209101 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.780197564 seconds)
  done (took 1.900523807 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.137754461 seconds)
  done (took 17.267550024 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.602812556 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.77536187 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.84588681 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158144017 seconds)
  done (took 3.5027031 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.910527725 seconds)
  done (took 2.051771053 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240167448 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225866664 seconds)
  done (took 1.590053506 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.792020526 seconds)
  done (took 1.92854769 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.302204719 seconds)
  done (took 2.429869291 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.293642508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180765726 seconds)
  done (took 1.612088997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489516278 seconds)
  done (took 1.623365322 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.847247643 seconds)
  done (took 7.988885799 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206494369 seconds)
  done (took 1.351545421 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267005984 seconds)
  done (took 1.407116171 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.394852112 seconds)
  done (took 4.532134593 seconds)
done (took 52.120125067 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081016551 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080640003 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106521467 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079137655 seconds)
  done (took 1.477410943 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079845555 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073103275 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102554748 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073072088 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102526113 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073973677 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073990881 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075648173 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071279336 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101619722 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073575717 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071686176 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101837329 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074649669 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095529306 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076118595 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100050437 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074069349 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076120204 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098192384 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071671735 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074445496 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101500271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071883391 seconds)
  done (took 3.135861187 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07951376 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07245358 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100664463 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072519977 seconds)
  done (took 1.470728902 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078937526 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091454166 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115271662 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076445721 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.119117384 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111871624 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070323464 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06944575 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096542553 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077386227 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068081624 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.124304173 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113326042 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077732525 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078965129 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092129106 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069695593 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.113398245 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077808962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077371098 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099750772 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078072239 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09258145 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089977061 seconds)
  done (took 3.305873714 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08099705 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102505526 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104661668 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087120213 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11738623 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065524968 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101319036 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089527942 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149561148 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065874663 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095844651 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067103332 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072258307 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090928963 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078062223 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130592839 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110543755 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067930491 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122328462 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065498396 seconds)
  done (took 3.017982297 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075329726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069964409 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090031849 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070590121 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077442705 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09841083 seconds)
  done (took 1.63742914 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070373684 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068313129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09200242 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067998233 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072120118 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092968817 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066679972 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067814507 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065951619 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06591764 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065481036 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093896541 seconds)
  done (took 2.039519936 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.399617517 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096840145 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069871509 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091766201 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071506561 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091450831 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080811198 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068123108 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117052088 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067165668 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066480443 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095183692 seconds)
  done (took 2.463117051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263257658 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077316985 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292748921 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165234765 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141114014 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14366784 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132524412 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112587885 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17238306 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130555759 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224892551 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196427487 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135608564 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165556675 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114871463 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099524722 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212870588 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191659002 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102092129 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222915568 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173801953 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152927352 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175546266 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128043728 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134654455 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151167441 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071353077 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106446142 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227092073 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161216418 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174849217 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138136382 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120609015 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231638526 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22631958 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171685284 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132812764 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083321249 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.15895504 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162427719 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227112689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117965365 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193964978 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135488348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106377367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168988724 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117709837 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.147509001 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13426665 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089438546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20104957 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237555086 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.167854419 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086999748 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137962705 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142002159 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142760081 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130096331 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238326863 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188699355 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153618792 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.097177609 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098781234 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207037584 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159320741 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135741429 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.154820032 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119942927 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162001625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182746876 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145932715 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197803149 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158658881 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11366055 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120076375 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167172004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159058364 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197778085 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177191315 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073657338 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15148362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131279158 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081671198 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166797362 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074868113 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230660971 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124458331 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107322596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110956793 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137794269 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136603039 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219605269 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175071331 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129664544 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065887889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130152473 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.146778315 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176382804 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114213169 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135131815 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144430887 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079029348 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166658799 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10086578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150792762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075369963 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151557413 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156391507 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102864112 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151092389 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12693271 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101775213 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160517195 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216796338 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089048827 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080234096 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195382362 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175366928 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106587421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198703462 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185553027 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.12625574 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130616574 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180949873 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238525264 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088522986 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219923492 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134761597 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083474773 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114970463 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15246954 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140711079 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14996281 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082311655 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14748687 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224206219 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100902139 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097068659 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130362393 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108993015 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082310839 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132578811 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128959889 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121108735 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102317388 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133804835 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19692621 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15163749 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108013178 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180391726 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100748905 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197316827 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117074025 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101516855 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131075263 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095535357 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166297111 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186209363 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107270162 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194297178 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.151670378 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132911133 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147579812 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108848698 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169558621 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079733716 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095537869 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175843953 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137171949 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137478513 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181023672 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131025623 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156058058 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147271257 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164950067 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161144283 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156702947 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133695707 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114185492 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112556896 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182793477 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07425035 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120258937 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081261662 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132627476 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123740514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083620118 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198627128 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155232777 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126523361 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112818683 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095071144 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142790515 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108095867 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158482672 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146851576 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121880333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182489141 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207750836 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161494874 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100006477 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202650744 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070827008 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100936821 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091819056 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151963496 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111216287 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083626565 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172242274 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178072848 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158427992 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166951215 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139363608 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14909466 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183602144 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097346865 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11710562 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204374411 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150206235 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.129751807 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117983025 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098547449 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198215193 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109741845 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21050092 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111052758 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15420593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212430826 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126165058 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082000652 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13399659 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166026494 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13410658 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173854789 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12786596 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116046907 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138283439 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075358821 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12914652 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156495298 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150258727 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162843093 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111200912 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192010713 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077388413 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151115619 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148937436 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120893787 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092884503 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149824794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192855083 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122620673 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146798827 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210719916 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080806593 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152461414 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23592581 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174547474 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112084481 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138225178 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145913359 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157928554 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147971969 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169001272 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139149398 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164363088 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137072752 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085983496 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115673051 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098436354 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133086549 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123206664 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106173113 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14441383 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122124425 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162072556 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131012261 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111170498 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146527314 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124661789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08957107 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125564611 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231285678 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148456148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203549755 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.12841086 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.202954362 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196836414 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102216841 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08056373 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105688967 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170242987 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084760353 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160178381 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125482708 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133236381 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153515017 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172113185 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123159942 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068598099 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137449704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164262794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141098462 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125871665 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133048022 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194603178 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129132579 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080516808 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142460482 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132814171 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102682129 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232168418 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089558918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099766516 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103331635 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081427064 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156102927 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211593635 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080845647 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152615411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150317059 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140338247 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15727025 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130944171 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100001944 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142723131 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207644538 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158992371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089619671 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141208879 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186521675 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187556874 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133499457 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123035031 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171637365 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211268595 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.190425682 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117292003 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141686189 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142117255 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136334574 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170770117 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110669619 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197177121 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10989703 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16668739 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132941821 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134817521 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160204074 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125411289 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089527473 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205408546 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146319492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082810208 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105455431 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146983004 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120884539 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135306644 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075902982 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169601533 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100364277 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162139215 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227224613 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082268576 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132970285 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123447536 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082074301 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136592002 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131468936 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086360142 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149062015 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234246485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08808656 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208807173 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170550752 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142779684 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19524312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100031172 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664543295 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106258469 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181636512 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148963548 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231714273 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126099571 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145208423 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13739424 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154064517 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175395387 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104131658 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.204262805 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16362904 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.14553915 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07923712 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132015483 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131333701 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116719909 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105850533 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142527988 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145413233 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121889948 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145151929 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152837738 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109429584 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095179654 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213942881 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11590028 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174160625 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170573639 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112863313 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146494564 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169364074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108135344 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151567963 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181963763 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135971506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096048694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110396736 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10367771 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228846962 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073549907 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221202451 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148477854 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138162611 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142275356 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14366842 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161112248 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137008715 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150195636 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122108953 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1387599 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140852191 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082479416 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105205318 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131224352 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142834385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099611291 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127771959 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123679854 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207674999 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07167732 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125226936 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131503864 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176800557 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234175862 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088234566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112134592 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14791525 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143729266 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143560888 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150478178 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080974557 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111318451 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08249721 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132003858 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109251158 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140723685 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133189712 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139760451 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223191259 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084234598 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251476798 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094459925 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133842648 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097380863 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081390354 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12388455 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125451326 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136458884 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102587166 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228253812 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094613569 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117903786 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121346634 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.0736763 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110140844 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156978789 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139525072 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149159674 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098756976 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091053588 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137593903 seconds)
  done (took 69.68987081 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144999763 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.122416336 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.13691601 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191294161 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166447674 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258141119 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199467816 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243810468 seconds)
  done (took 2.682201492 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071649926 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121320754 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101093737 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.10922276 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067302146 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095279274 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279027732 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081205579 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.094269903 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089068639 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.107514667 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095566672 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.491305065 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066579919 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093486385 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06502433 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094207622 seconds)
  done (took 3.339782316 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.432933032 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.664788775 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.422608162 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074387307 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.102070368 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113136643 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.685570363 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.171128231 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09566365 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.449485495 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.721474412 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159002227 seconds)
  done (took 18.313875268 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077880377 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070283051 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110654457 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083869094 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071485502 seconds)
  done (took 1.642632509 seconds)
done (took 115.355869096 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083968856 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356215698 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053383468 seconds)
  done (took 1.676396663 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086519013 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083645757 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112651986 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082780532 seconds)
  done (took 1.605223561 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077043046 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07630249 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111711361 seconds)
  done (took 1.499872625 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285446649 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140534029 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116440539 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085712369 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077773879 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104586952 seconds)
  done (took 1.499577012 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074922887 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07485715 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10042069 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076454493 seconds)
  done (took 1.556635355 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078169477 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052542271 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054497734 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083554193 seconds)
  done (took 1.504466462 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088789115 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077516549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106419988 seconds)
  done (took 1.503152834 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111008554 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113875109 seconds)
  done (took 1.458008466 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084588157 seconds)
  done (took 1.313903326 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10372669 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142123382 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158135811 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.13727343 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165733715 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137815154 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0854805 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116482471 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104837184 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08783492 seconds)
  done (took 2.478209395 seconds)
done (took 17.958615733 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082317573 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.387223133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361543106 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08970108 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696630168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35626703 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012053553 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091503801 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149171495 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095256616 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085651206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648763418 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003680675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322636697 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.989149024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321898317 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649465352 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066621179 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065977958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096456896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971562706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067285997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096371294 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068637682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676287184 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405714756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068464761 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.350497184 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068318417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09510109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389695158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068621187 seconds)
  done (took 16.123209431 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074383238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144877554 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074797782 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083115204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068894779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068189334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099687608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070520919 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152796815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068875976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112209785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068503883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071713142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066959093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084980742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066326063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066839491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067326961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100192653 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069016862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085861985 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066502165 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067053384 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097387722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069355009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078860556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096642309 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06872004 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067812716 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098205522 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070745699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095302965 seconds)
  done (took 3.884864681 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119057929 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152973499 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074398769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130285192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112418849 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098479913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168939975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094679454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154958129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067619732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112321056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068577718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127610788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069849762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086952746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097026809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069176334 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094945181 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069593946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068758851 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114533783 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068308535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094997409 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070425684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068036235 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108958171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068720743 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093781466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069926492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069977992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098478547 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069293783 seconds)
  done (took 4.272340817 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075707244 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074908287 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11013794 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083048836 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069052216 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100167176 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07215307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095868353 seconds)
  done (took 1.926325332 seconds)
done (took 27.446368534 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081958649 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069059801 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.09939917 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081261449 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071883593 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106155862 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067015322 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.10173327 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073773667 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072358818 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102649434 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067878825 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071030686 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09573901 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073499617 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067435401 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107346819 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071503577 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.107543294 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080641146 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096515032 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073821899 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073453366 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106450136 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079313613 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.106248014 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078692013 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072244855 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.097417421 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070443319 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075811427 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11284724 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068056335 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106752078 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068467486 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067094042 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09989071 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067294557 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.106657485 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077957516 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06950494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10437749 seconds)
  done (took 4.78330162 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090430773 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089934483 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113213322 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061609981 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065836987 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063827462 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087228821 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088856903 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060610151 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087053169 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084130322 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060764313 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062085005 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053345017 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.088372519 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.0567476 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060873904 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083638041 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060125232 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059776317 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057469837 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081744023 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060842968 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062066698 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083979 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063021442 seconds)
  done (took 3.132422467 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077249698 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083699183 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116389437 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126067982 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133137969 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076624091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107366247 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087526182 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112927202 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068206712 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071443342 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121956444 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088147968 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101556677 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068805261 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086027275 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11005575 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069512287 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100047402 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092299302 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083999221 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106302278 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092353764 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108482372 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06861083 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069774751 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099829187 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081484706 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099325913 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07851537 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070483525 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099565863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069733657 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106194586 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073408305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069889997 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117787176 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07775395 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105337154 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069751242 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070416314 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097112072 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090114669 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.150872076 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06860908 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074083134 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10386587 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077002473 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.094976363 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087216225 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077872072 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096126556 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071826162 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066991874 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09729606 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080313816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.09641488 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071567538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076303911 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099367929 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080790565 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070779573 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111757757 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067034867 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10344785 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068261769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068634818 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095226086 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092890328 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096468186 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110747859 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068205433 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.09719291 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076935816 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103096806 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074436849 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06733102 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112209204 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077400475 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098491709 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076963284 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070677388 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099228664 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089298882 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069882534 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.097952606 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069013862 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10117029 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071955906 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069082323 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108923334 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068952625 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07036382 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082462795 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066385644 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.098418634 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075152231 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07122289 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096354107 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079960589 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100119618 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069971481 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076912482 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097589424 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071271878 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077261416 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.104082985 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066707398 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099614921 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074663547 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068516334 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098634273 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071326821 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068757896 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106829967 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074115456 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101765929 seconds)
  done (took 11.456144153 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190199773 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153686502 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.09994916 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1734665 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077517954 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078043828 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177630252 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123824326 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068373313 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067913288 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099120573 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115206933 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137330274 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.161522924 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079079431 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06688963 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.081896779 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.148657183 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1786123 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.171307001 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085641312 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076461453 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100055765 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069615399 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073630223 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081217414 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.128622181 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078135499 seconds)
  done (took 4.402029858 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084790128 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128873551 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075571654 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088620032 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120889756 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067899908 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098886155 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070496492 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.07938649 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109101837 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067253386 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101921094 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075445412 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10195249 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069793952 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07407389 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.104062084 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070286557 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070637389 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102689431 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077242587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109769947 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072363704 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066499107 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103777435 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066734688 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093206639 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.0842257 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097529106 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090496245 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065559865 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073760443 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080181186 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.099392448 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069219723 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067423641 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097092169 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068831315 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06904086 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09605401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067230692 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057902381 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096243226 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080480402 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102618619 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057783852 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073009496 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102135873 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073979142 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064737841 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100218035 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071041539 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07055196 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.105208546 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073061198 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101054605 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070762937 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066356786 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.103612345 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069363876 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064477514 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094579458 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073814403 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065949936 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105698289 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071972127 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094002672 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069340318 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06953216 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102168051 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068543217 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070538188 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064652561 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068733134 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071703807 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.101479618 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069211137 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065787326 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097509326 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068944523 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055483304 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097807184 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054134093 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070458911 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096042558 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067312047 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094150924 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074726605 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079730724 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067879484 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073035443 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09906808 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068335059 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071003093 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089409257 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072184634 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082500927 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113157917 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067938307 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095684751 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083256511 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100172978 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069318953 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057491271 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102734408 seconds)
  done (took 9.85058707 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098605056 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087615123 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.100463423 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083316238 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119267957 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089077123 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074230547 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105803985 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069285982 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111229906 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074948256 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076375527 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097674789 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078213202 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09398163 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106306225 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070775934 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.105014331 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07412402 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100744998 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112758237 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082000283 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103986746 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069011606 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076018119 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078541805 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088988462 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.111047964 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079751675 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074863385 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110463025 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090838932 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103756282 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072598045 seconds)
  done (took 4.338095889 seconds)
done (took 39.202494498 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.329627847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.578139731 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.320796215 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.322968966 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.325485697 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.347217408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.334648734 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.323798255 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.788793332 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.321396336 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.590495493 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.115855529 seconds)
done (took 60.96538063 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.398381458 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.46420286 seconds)
    (2/2) benchmarking "String"...
    done (took 1.598261043 seconds)
  done (took 4.342364826 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.726495002 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.246139432 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.583521783 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.326114437 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.324919474 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.617665895 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.070628943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.220121978 seconds)
  done (took 28.650707147 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.327307451 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.709675167 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.895309495 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.904028347 seconds)
  done (took 19.10131607 seconds)
done (took 62.481505576 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.328977114 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.412642117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.33090563 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.321780215 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.437986654 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.360128088 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.531794348 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.395930132 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.322713967 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.314933261 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.328026361 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.324460402 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.326906704 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.504270205 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.337680331 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.32697 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.39926061 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.977844492 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.737359625 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.34202374 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.340518201 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.384195443 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.340260797 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.329519546 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.391369844 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.332717258 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.325152996 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.34855134 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.79202328 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.327994043 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.329124561 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.691119816 seconds)
  done (took 194.557591964 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.327380122 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.404070298 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.491367817 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.364287547 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.967016278 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.523987518 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.46419947 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.868601458 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.343650968 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.333578923 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.573690578 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.327434322 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.644667682 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.339248306 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.338661656 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.400564961 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.529511234 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.669578933 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.343998677 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.601225629 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.336579623 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.642560027 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.58185047 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.559906823 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.339396848 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.360582349 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.332491908 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.372749982 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.518842847 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.46868064 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.359970008 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.376023803 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.934656484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.187150932 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.345149405 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.371537066 seconds)
  done (took 155.214090817 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.888452865 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.328544218 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.329805664 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.329796647 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.330507726 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.362717578 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.329274097 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.897419926 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.897438182 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.875473772 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.491824474 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.391063047 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.598976773 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.3295662 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.423868993 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.341355093 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.33083237 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.34512295 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.357548099 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.331163016 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330537283 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.897969194 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.343103412 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315604022 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336688286 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.330650061 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362196843 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.724915244 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328219744 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362252971 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.653030504 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.377681765 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.327968342 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.665983457 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.193143638 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.439002734 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.330133179 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.363106583 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.331295785 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.604655338 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.329449086 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.331623121 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.334153055 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946172884 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.331920341 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899667806 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.332683389 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.282763125 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.332009023 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.33311023 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.936392728 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.906090564 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.331269384 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.331974737 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.332707273 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.330681635 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.332388169 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.36607811 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.951663285 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.434546013 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.333253416 seconds)
    (61/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.330834664 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.334748381 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36481043 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.331382519 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.758499468 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.330483823 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.326754732 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.391275359 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.436954895 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.902694151 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.332795244 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.425926042 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.450156574 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.330643693 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.332751358 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.332769452 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.332206052 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.439492456 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.330415133 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.748111224 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.337834512 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.334525285 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.395000136 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.428964254 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.330256949 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.68034541 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.334535237 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.332357251 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.058033581 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424136938 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.331225343 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.333933183 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.335214796 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.749809535 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.901105411 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.570330219 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.333839443 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.03452989 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.337062177 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.333219757 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.761714806 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.889832418 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.974917292 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.334412892 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.334848558 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.443078607 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3364207 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.337600784 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.333918174 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.365837641 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.336555464 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.391930059 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.334954968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.733961009 seconds)
  done (took 361.94243928 seconds)
done (took 714.867857463 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.040877382 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.027176011 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.139547025 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.017936406 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.978582267 seconds)
  done (took 11.475297792 seconds)
done (took 12.747239482 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535377804 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533953259 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.397537583 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537370962 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.366713664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555820996 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.513370175 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.35613444 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445216538 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.420341193 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444920239 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.390063017 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36519842 seconds)
  done (took 20.132993505 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.669847091 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.663237703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.399887396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.664249768 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374961626 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.675688809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53676889 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.547845227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.533263016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.349764797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.350156388 seconds)
  done (took 18.038743339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.678096552 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.667201438 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401958958 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.674055543 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.375846192 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.676999364 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.542405453 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.553921133 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.539154044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.350325762 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.349137014 seconds)
  done (took 18.080884082 seconds)
done (took 57.525864702 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.347702483 seconds)
  done (took 2.620132604 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.377693128 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.548211869 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.361004467 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.349749097 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.349410062 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.347006535 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.34953885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.34545855 seconds)
  done (took 12.30292129 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.343091583 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.345737768 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.34094233 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.342986251 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.341856569 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.341404846 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.34525594 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.345247116 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.345134559 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.345275175 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.345905915 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.344924043 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.341958674 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.342178119 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.342873594 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.345629963 seconds)
  done (took 22.774843598 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.344950786 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.343014185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.343785171 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.343419092 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.344155886 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.345237062 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.344535943 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.342766281 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.343598755 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.343865689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.344353119 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.343216918 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.344046902 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.343177304 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.343308945 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.344599742 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.344025503 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.344291575 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.347841928 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.343532126 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.344959044 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.342572458 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.344924784 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.343611524 seconds)
  done (took 33.534658541 seconds)
done (took 72.504463367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.490981452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.009864672 seconds)
  done (took 9.775141334 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.3474934 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.347301685 seconds)
  done (took 3.971414984 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.348521905 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.345399404 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.347136191 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.345754544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.346024553 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.34697209 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.346398887 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.346930895 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.347673274 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.347663247 seconds)
  done (took 14.744441985 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.347685171 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.347215747 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.345390494 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.347344686 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.347729557 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.34434981 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.347711463 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.347483324 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.347326923 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.344483286 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.347286334 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.344392564 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.348707006 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.345126152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.347516822 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.345725366 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.345227357 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.344940855 seconds)
  done (took 25.512960647 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.34807205 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.348165244 seconds)
  done (took 3.973370314 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.347275246 seconds)
    (2/7) benchmarking "second"...
    done (took 1.345450584 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345670795 seconds)
    (4/7) benchmarking "year"...
    done (took 1.346119484 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.345405443 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.344503764 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.345697792 seconds)
  done (took 10.696911192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.350819949 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.527046531 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.60925848 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.038597466 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.349877759 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.351525597 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.314643939 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.351783716 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.354393158 seconds)
  done (took 15.525749379 seconds)
done (took 85.47571575 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.358885881 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.339675651 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.293755339 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.350296167 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.354700483 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.682482403 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.392206527 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.59428429 seconds)
done (took 39.645969966 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.354397576 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.065731395 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.141003291 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.339508717 seconds)
  done (took 11.824273074 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.336000564 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.304346288 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.335705128 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.401501266 seconds)
  done (took 18.65753935 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.996618122 seconds)
    (2/2) benchmarking "read"...
    done (took 1.677633166 seconds)
  done (took 4.953947515 seconds)
done (took 43.068359836 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350198907 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.350096685 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.351363653 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.348057971 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.349794167 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.348693264 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.346796286 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.35053188 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.350193694 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.351419694 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.347740445 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.350701891 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.350351391 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350811814 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348303828 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347795146 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351815959 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.348003462 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34896275 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.349179673 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.3484534 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351982313 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.348963336 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.348241426 seconds)
  done (took 33.667645832 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.352283765 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.349584423 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.35170674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.35122113 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.348794005 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.350922174 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.3505778 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.348111829 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.352928678 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.351600926 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350459189 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.349995637 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.351418047 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.350199668 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351491299 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.350849174 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.35187647 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350360854 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352068389 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.349338611 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.353522872 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349586953 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.350297837 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352931719 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.34998943 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351593629 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.353408362 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.352180487 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352569863 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.351650136 seconds)
  done (took 41.815550908 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.358649461 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.361750523 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.352927941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.353174745 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.352526396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.352785974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.353265349 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.35297827 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.3522339 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.353667446 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.352344131 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.352344638 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.353471053 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.353254473 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.353256915 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.353322452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.353980702 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.353568947 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.352476791 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.353966573 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.354164484 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.353594949 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.353451942 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.354265708 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.354138669 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.354106399 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.35396048 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.35339981 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.354353946 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.352734697 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.353598141 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.353363903 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.35492424 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.352917552 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.354439909 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.354641137 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.35970649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.363580062 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.354680543 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.355337079 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.355224415 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.354013285 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.354953916 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.35517618 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.354140574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.354886499 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.355368005 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.354581896 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355003232 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.355024614 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.355006751 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.354954707 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.354492206 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.355767114 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.355837439 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.355965964 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.355873447 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.356190419 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.356175027 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.356434287 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.355368833 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.356350774 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.356104897 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.355777906 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.355750609 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.356305292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.355776742 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.355781018 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.356355848 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.356841183 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.356088357 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.356229832 seconds)
  done (took 98.832090228 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.356652986 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354780587 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.353257168 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.353284883 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354017161 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.356478571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.355270854 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356980319 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354497632 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358596921 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.355757705 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353870496 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354663283 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356766401 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357044518 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.355619214 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357561935 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.355383706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.356146637 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357570957 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.356920602 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.354714531 seconds)
  done (took 31.112016359 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.356564589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.357823647 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.355805523 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.357527925 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.355513148 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35788146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.357178353 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.357956142 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358398646 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.355908533 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355030469 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359108871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.356297496 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355892448 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355328231 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.355923936 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357509835 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.355409596 seconds)
  done (took 25.708291678 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.356665281 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.355948923 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.359375657 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.355088413 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.356137702 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.358335843 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355934465 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.358281065 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.357692979 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.355621657 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.358326384 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359170725 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.359953642 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356319053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359365109 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.356243841 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.359053391 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356726714 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.358864765 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357031929 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.357747463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35979627 seconds)
  done (took 31.156204317 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359014612 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.359331075 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.357078505 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.35775729 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.357513288 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.360538136 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.360407177 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.357356094 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.359724278 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.360767012 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357024497 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.360459525 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.357435682 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.358226484 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.35715056 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357765392 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.359636635 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.358324297 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359988604 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.357567467 seconds)
  done (took 28.462104185 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.364751794 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.365309447 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.364494918 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36521073 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363869956 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.364236812 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363971956 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.364133305 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363784948 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.364944499 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364103107 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.364803288 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.364347149 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.36457064 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.36470596 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.364121906 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.364053222 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.36416043 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.365059713 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365241795 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.36563936 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.365158691 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365663978 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.364605377 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.366036816 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.365133409 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.366291127 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.365498783 seconds)
  done (took 39.505102729 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.36179445 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.362390546 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.360222213 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.35959973 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.359805347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.359848431 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.361063222 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.35994192 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.361457452 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358431882 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.361330707 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.362617126 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.36283523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.362999035 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363215543 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.363182369 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362676431 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.360375237 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.360498649 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360764927 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.363803256 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363484452 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.363606206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.360790814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.360132117 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.36352456 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.361088451 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361112109 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.362794931 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359614227 seconds)
  done (took 42.136843897 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.382018003 seconds)
    (2/2) benchmarking "in"...
    done (took 1.38243101 seconds)
  done (took 4.055908063 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361847062 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363586527 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.363485587 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.361238219 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.361310498 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.364478001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.364138245 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.36079914 seconds)
  done (took 12.193424746 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.364823463 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.364495817 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.364075811 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.364182627 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.367345773 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.366950701 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.374147904 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.383336262 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.367879297 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.366067995 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.373603933 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.375621887 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.370858568 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.365959943 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.367225511 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.368248063 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.364432979 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.366902158 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.36856647 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.365846401 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368204556 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368708506 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369466897 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.362843819 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.367833253 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.380088134 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.374166126 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.365364049 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366452814 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372480504 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.367179439 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.36251765 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.369197581 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.369771445 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.365564101 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.369323652 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.377936631 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.39078158 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.376689921 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370098766 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366508007 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.36404324 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.369825543 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.370453055 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.369587491 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.371122668 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.366766708 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.36337074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.368282959 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.371007121 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.37420475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.367510365 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.365788839 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.375279946 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.37015742 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.377601461 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.39005889 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.372264135 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.379437441 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.383336708 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.38354992 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.379971594 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.371270146 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.371724764 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.379128536 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.395316108 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378834438 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.384798786 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36518976 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368493678 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.378670717 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384226604 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.38173635 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.371809829 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371477923 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.369210501 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.370327839 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368849062 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.379359934 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.392302944 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.372202785 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37217947 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.380964614 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.394750634 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.369662346 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.372766153 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.371995456 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.372195334 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.371684684 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382542206 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.391213138 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.37020587 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.370555891 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.370231564 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.374672157 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.373610333 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.37063845 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372816443 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.367873534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.370845014 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373120942 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375094696 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.382150985 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373034952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372545262 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.381861712 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.370548282 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.371250691 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.382880538 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.370955101 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.372686421 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.372532734 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.380995799 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.367825357 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375687417 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.381838 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.374359011 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.372998271 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.373705798 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.371451223 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3812102 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.402095181 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.372109709 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.370863402 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.377812006 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.389319795 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373963161 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.376651961 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.372618058 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.368640627 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.36975572 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.375085724 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.371585102 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.375125034 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.374542914 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.375344265 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.368862154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.371200381 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.374656025 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.37413973 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.375644349 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.373794968 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.375493042 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.377541442 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.376312085 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.375570587 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.381775914 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.374271101 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.375363094 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.376218583 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.370632506 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372603947 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.376822274 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.375730547 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.374266927 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.375945387 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.372686827 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.374710151 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373565605 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.373984647 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373584198 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.374709217 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.37787299 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.376441643 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.378783165 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.374770462 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.370538328 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.374074432 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.373445203 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.374321204 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.37268034 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.373856814 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.377373536 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.386170006 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.374701025 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.376130436 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.379016067 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377938965 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376458193 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.376143875 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.378929666 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.385564002 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.377307845 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.38353412 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.379099543 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.377207514 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.375005186 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.376219481 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.376608626 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.377461863 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.379966359 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.385393142 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391718237 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.388063709 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.378058943 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.379694981 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.377217208 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.383363107 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.381852593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.378477553 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.375802754 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378444363 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.375813265 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.378713885 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.379627527 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.37901223 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.376299751 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.376325821 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.376118358 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.379418589 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377297798 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.379080424 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380040389 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.375298071 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.3776947 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.379569252 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.375110477 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.3749882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.376492797 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.376884602 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.376549079 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.379081321 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.386830146 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.375432981 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379675501 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.379135489 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.378619743 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.377631574 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.377255694 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38055177 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.37855176 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387076288 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.398304749 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.381195014 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.385304366 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.397456083 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.379192538 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.382166314 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.378583562 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.375351829 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.380983567 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.38710565 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.377949742 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.379875229 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.380640717 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.380045199 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.378850309 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.388292811 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.375847676 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.379023429 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.37876461 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.383606253 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.376622855 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.381131348 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.381842577 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.381095597 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381521884 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379176984 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.378773137 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.381622947 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.381183336 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.380707821 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.381023066 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383462704 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.391086949 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.385421282 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.38115054 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.383194125 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.381467718 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.383219576 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.381740242 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.382430372 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.37940261 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.394670493 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.393983573 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.388486857 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.385963826 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.380732301 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.388223054 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.381798165 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.387213927 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.382661807 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.382005772 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.38136506 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.380613829 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.378076244 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.383497942 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.380517662 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.382371272 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.383230123 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.38581808 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.381242207 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.381040409 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.383120112 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.383361892 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.381354865 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.381045737 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.380654247 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.386139222 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384255422 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.382817866 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.382036461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390721989 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.400629938 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.385317609 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.381263127 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.382918416 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.382093133 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.383576246 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.383254225 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.385097582 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.393590828 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.384974991 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.394729106 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.383710723 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.394639561 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.38496867 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.385807024 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.394232485 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.379949545 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.382164224 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.385067031 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.38359291 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391886625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.403784702 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.383992821 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.389053165 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.384783164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.385181475 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.382661664 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.384921805 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.382714901 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.38533708 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.394103995 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.40760869 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.388373965 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.385907555 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.381146186 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.386267867 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.383511425 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.383748921 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.389853221 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.386293087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.385479016 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.383416614 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.385607567 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383899757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.385645056 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.384949135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.382212218 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.384759771 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393943724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.404798769 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3909995 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.382779557 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.396125473 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.386543283 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393411689 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.405783276 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.386260633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.38642332 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.385356969 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.388959277 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.38495421 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.387903296 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.386133029 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.385898043 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.388065449 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.387331668 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.39154223 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.38576173 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.38666869 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.385670295 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.396020447 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.413714514 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.38688212 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.389798183 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.381984873 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.388363785 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.392529869 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.387396264 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.384414449 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.389321192 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.398944811 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.394645591 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.388074395 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.389055978 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.387033852 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388017511 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.386519611 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.386068689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.388950949 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.386195496 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.389336827 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.388943136 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.392638916 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.38659704 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.388420462 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.389441839 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.388332829 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.399449121 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.389075581 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.389046466 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388345319 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.385778481 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.388779972 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.388118459 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.388963385 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.388764891 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.38712643 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.38876651 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.395192961 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.39673853 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.390334153 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.386893579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.388729522 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.388778514 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.390607035 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.389137295 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.390776423 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389528424 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.39032055 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.390702955 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.390662558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.386886381 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.389378359 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.390540767 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.387947358 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.392066605 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.398244948 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.388877914 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.384754954 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.38800676 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388070142 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.388430978 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.389539462 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.400524543 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393337665 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.401787484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.399857314 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.395396007 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.390957831 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393389455 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.399581604 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.389553418 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.390900372 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.390283005 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.392059941 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.390423548 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.394744626 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.392148975 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.401062786 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.390992666 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.390821601 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400038115 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.413077412 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392688524 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.391469292 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.395511049 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.39124548 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.387625542 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.390329025 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.390001925 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399521215 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.412499466 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.39335201 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391916182 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.388910649 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.391178627 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396583214 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.389011884 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.392195311 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.386517715 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.391039622 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39232924 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.390429659 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.387241303 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.391467397 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.391152679 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.39385858 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.399669372 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.387665201 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.393584453 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.392113416 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.393296638 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.393524007 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390053043 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.388411878 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.387726061 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.391525093 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.392625343 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.392688429 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.396662304 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.3931281 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.393595098 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.392754947 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.393762311 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.396251579 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.404816569 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.400215779 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.389354574 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.392844507 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.392759564 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.395271955 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.394629203 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.394176144 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.39359627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.395568377 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392967706 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.394024581 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.391237945 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.396507959 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.413146363 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.415573411 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.393035154 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.394660342 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.398516942 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.392760632 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.389790519 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.39279736 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.396888175 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.39627019 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.404431881 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.395236694 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.400580845 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.411908437 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.394107756 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.397843948 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.396414844 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.403834985 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.39705046 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395654572 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.395600956 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.398892461 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.414678461 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394283808 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.404502293 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.430282409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.41307255 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.395892344 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.396184898 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392645698 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.395987733 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.397784709 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.396363491 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.392652303 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.393778663 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.395761623 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.396004019 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.402173843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.398644325 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.394470068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.393581271 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.39527355 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.397637199 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.392516202 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.396640486 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.394729482 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.397394068 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.397902837 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.397487225 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.397258891 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.409801088 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.40950896 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.395329367 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.398667936 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.392494008 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.400559625 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.399627583 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.408805847 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.405624067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.398313796 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.396883661 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.398968112 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.398736771 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.393149709 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.397644554 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.397004977 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396262559 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.394218218 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.411931459 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.409612974 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.403747395 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.398566976 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.398641092 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.397165114 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.39787865 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.399514326 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.397938027 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.400007638 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.397787382 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403155675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.395823085 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.395883886 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.400667178 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.406626756 seconds)
  done (took 826.68782065 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394452152 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394911992 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394063918 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.394570301 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393810187 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393245854 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395752645 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.394275671 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.394670148 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394166043 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.394739959 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393613401 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.39402116 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.39502979 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.394641046 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.39460392 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.394729736 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.394472198 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.395022289 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395378921 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.39482481 seconds)
  done (took 30.60917782 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.397591251 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.394979608 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.394715935 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.39714426 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.394590093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.397551601 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.39449299 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397852494 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.397936182 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.394987452 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.398239741 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398664172 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.396095003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.395536814 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.395051957 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398236349 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.398359953 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396470027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.39719858 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.39645231 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.397719195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.396005565 seconds)
  done (took 32.051840915 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.40154991 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.401888548 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.399588901 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.396313137 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.400070906 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.396430494 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.402202168 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.398713694 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.398762526 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.402305313 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.399168053 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.401327862 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.408490167 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.40582348 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.404591526 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.39902647 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.544686152 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.402726021 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.401829258 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.402937932 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.395425069 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.40816159 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.398863791 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.397695447 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.401024021 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.402179711 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.400431305 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.400402102 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.402558809 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.403119612 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.408752491 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.399755287 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.400901327 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.402419922 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.401883763 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.402081277 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.404644529 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.402903048 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.397913013 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.399713732 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.411753436 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.424999891 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.403793319 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.409569591 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.402207005 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.400729753 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.405112839 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.412496153 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.397551924 seconds)
  done (took 70.196479638 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.401283382 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.401276345 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.399620381 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.40063159 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.400425576 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.401535418 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.401240359 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.401385187 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.398786947 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.399377308 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.402371969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.399094772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.400956495 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.400606039 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.402282001 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399316927 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.39971193 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.399899276 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.400159794 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.398951555 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.400491844 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.402854171 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.403497307 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.400005853 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.402419817 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.399536319 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.399536535 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.401787731 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.400579554 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.399198262 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.40243255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403278839 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.402959354 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.400171215 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.399897281 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.403620207 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.402976001 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.399582439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.40377039 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.399557966 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.40259059 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.403515671 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.402705547 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.40460998 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.40090877 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.401076553 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.401701418 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.401591931 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.402422557 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.403827756 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.404096721 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.40152068 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404458506 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.401091118 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.403828735 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.403638849 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.401596343 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.40087842 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.404812719 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.401384539 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.40176242 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404180956 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.401586494 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.403807827 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.404022688 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.402279292 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.401617865 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.404741891 seconds)
  done (took 96.644964818 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40727078 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.408170087 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406830726 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407126905 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407032521 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.407300866 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.40751737 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.408020189 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.408626901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.408137839 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.407049106 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.405585747 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.408736786 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.404912955 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.407870428 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.40770943 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.406757909 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.40770684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.408272432 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407856515 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.408945537 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.408530602 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.407614145 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408142542 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408913984 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.409357011 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.409373381 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.409060196 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407608006 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.408878708 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.408481542 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.409190524 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.408572653 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.410387854 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.408999516 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.408703033 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409672634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.409341211 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.408598531 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.409107031 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.409666006 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.408831925 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.408768979 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.409557818 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.408666513 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.409835904 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.409722827 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.410374862 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407191243 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.409140072 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.410047066 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.409757382 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41046591 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.410172769 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.410147568 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.407448263 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.409738236 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.409106839 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.410314486 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409612795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.409480344 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.406967626 seconds)
  done (took 88.665383252 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407129363 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.406937128 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.405660343 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.405470324 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.407794621 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.405225612 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.40743093 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.408416229 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.408976774 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.407876427 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40791547 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.40531018 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.405089151 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.407832405 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.405705615 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40637893 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.405739766 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.406862439 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.408433585 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.406306804 seconds)
  done (took 29.471747146 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.406487888 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.408263119 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.405524062 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.405918053 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.408699246 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.40676334 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.409999109 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409341665 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40800482 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409771082 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.410215516 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.409855583 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.407151566 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.406653865 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.41209057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.406665885 seconds)
  done (took 23.867618704 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.407784414 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.409693719 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.412442895 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.412394416 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.407853397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.407709997 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.410589966 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.407490678 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.407735255 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.410194382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.41067474 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.409988967 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.410368744 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.413409035 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.408139362 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.410363738 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.408217102 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.410064673 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.410541264 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.414584207 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.40893113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.407713662 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.41076439 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.410494741 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.407266563 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.408480698 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.409459364 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.409351444 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.407555561 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.411368335 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.407547031 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.409442184 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.408567595 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.409002635 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.413045959 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.408783265 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.411991509 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.411781716 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.412151304 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.411731168 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.411979152 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.409096526 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.412218559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.411778519 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.408695622 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.41170047 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.408611998 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.410563299 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.408813076 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.409375165 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.412333312 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.413991862 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.411387442 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.412746138 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.411887798 seconds)
  done (took 78.899757528 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.412442826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.412322113 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.410422259 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.41120259 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.413483624 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.409828944 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.413484537 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.411273564 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.410273849 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.411732744 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.410436316 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.412637714 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.410266757 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.413847989 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.411503801 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413330429 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.408818384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.410032357 seconds)
  done (took 26.746927276 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.411738318 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.412045869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.412835672 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.411996565 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.411069994 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.414078575 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.411564438 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.414206919 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413053988 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.411278701 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412579294 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.415409291 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41519529 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.414031728 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.411931688 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.411419568 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.413731556 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.413854478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.409930018 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.412110314 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.413933182 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.413589879 seconds)
  done (took 32.422427635 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.414828667 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.413343886 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.432866072 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.461221172 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.448061696 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.414694655 seconds)
  done (took 9.926779963 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412633186 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415120759 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.413660441 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41670268 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416167805 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413150524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413247276 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413829678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414629004 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414024924 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411757092 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414350242 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415474976 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412433682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414319574 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414674312 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413957011 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412659065 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41302274 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415671812 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412314221 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415341502 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412351814 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414587287 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412815566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412701529 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416587779 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415199285 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414916034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416659236 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417364613 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414014887 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416833291 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415690447 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417736354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416896494 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414714064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416399315 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416957628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414153947 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416687523 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416728778 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417600164 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413496807 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415240915 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414650862 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415160768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414304232 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414152368 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417119351 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417953113 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414652057 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418473654 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416943491 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41779535 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417269453 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414813179 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414408243 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417005338 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415422136 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414223776 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418364282 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414381901 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416217979 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417355297 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415499271 seconds)
  done (took 94.746295688 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415311305 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.415688336 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415716337 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417298353 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415537138 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4164924 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415693218 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415120573 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416443779 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416000541 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418868829 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415659196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417290797 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41670384 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416546472 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416915934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417450722 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415968426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417054621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419800985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417158713 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417201039 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416482606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416980358 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417262219 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419873141 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417233495 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417065684 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416906521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417214194 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416548975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417813261 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417682621 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.418105299 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41754214 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418305687 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418605399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417898144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419410623 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420980653 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419124353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420833735 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418940372 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417558242 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418208364 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418628745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417867632 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41861713 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418238583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418691916 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418934161 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418514559 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418923836 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418648451 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418036513 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418496446 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418958465 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419319088 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419046266 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421407238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418597464 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418870832 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42226676 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41836511 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418704677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418042726 seconds)
  done (took 94.927262382 seconds)
done (took 1925.790225398 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.466958251 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.543466015 seconds)
  done (took 14.358572567 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.585812862 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.537262624 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.420929434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.439920586 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.418425527 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.43659377 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.419762999 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.419350488 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.421022863 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.421615201 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.421280186 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.616833464 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.452771633 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.418706416 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.422383364 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.515727339 seconds)
  done (took 44.725452043 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.425045635 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.427222219 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.463884416 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.425633722 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.425924657 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.467288082 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.494977387 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.425725732 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.620410582 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.473917712 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.870526839 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.426663911 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.426484587 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.742697346 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.462233757 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.469692594 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.720919119 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.869568755 seconds)
  done (took 28.988881118 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.921769448 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.453088455 seconds)
  done (took 9.725942123 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.432906571 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.41590407 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.457982885 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.422453541 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.433126181 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.444315067 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.485946592 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.477892912 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.436763204 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.448155978 seconds)
  done (took 65.814775341 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.447467197 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.427130382 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.4282698 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.424365797 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.417502193 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.433628449 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.424346848 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.417356148 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.329818747 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.564726317 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.448178504 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.433089207 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.426608581 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.428587095 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.423820927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.462835784 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.554126548 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.422940219 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.422006608 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.431246326 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.426902752 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.53155573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.466644177 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.423487321 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.563854966 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.353710898 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.428404518 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.432270601 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.566178126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.423048988 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.427261824 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.426648921 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.428825832 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.031951548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.001640182 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.431959883 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.449859959 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.434161052 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.423748926 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.569175368 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.427505339 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.43246699 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.427685464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.970740522 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.584608344 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.549821814 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.771825242 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.429266452 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.428905186 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.494169051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.425833992 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.428896539 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.458910127 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.221576356 seconds)
  done (took 117.415889626 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.452315511 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.91113246 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.59315495 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.438760086 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988470313 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930548935 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.421774286 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.735991443 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.443012566 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.949228277 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.73160628 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829574196 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.419842871 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.420028875 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.418423424 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.418900167 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.705946508 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.778483591 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.422425295 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.422495805 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.474689709 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984743387 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.678882866 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.5910422 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.463068715 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925375078 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.675644886 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.829660846 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.421921502 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.422176976 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.765213014 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.427626888 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.424843184 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.419802406 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.721219724 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.817541576 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.792835988 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.423000852 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.434747711 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.421029753 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.438574257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920089456 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805022192 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.691683974 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.823168865 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.942518175 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.423299105 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.423446085 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.421604924 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.635106709 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.67394827 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.974452416 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.679269756 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.436674096 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.813901682 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.422681697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.499856688 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.9527446 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.787240402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.825708898 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.429605744 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.424579166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.421636173 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.020484042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.424851826 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806116017 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.524433571 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.424936288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.807827348 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813554001 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.783778856 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955077451 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.469663078 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.430071139 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.49394247 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988953335 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.768933559 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.952463969 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.433024734 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.421546363 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.797045836 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.428129387 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.731913173 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031070812 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.967237316 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.481212749 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.445246543 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.424652477 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950437334 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.952506038 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.676387711 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.82460593 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.733295002 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.442186456 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.425860459 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.425483568 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.471414559 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.691351025 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.440790838 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.789058079 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952627048 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.205433943 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.47487634 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.020558468 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.696013325 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.439375601 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.428945067 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.427730812 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.648981881 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.502631557 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.449929167 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.42634032 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.951278043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.303351241 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.567404055 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.173422174 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.769515047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.429066733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973004456 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.428740724 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953074483 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.430125683 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015410136 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.159996009 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.487514271 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.654448045 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.826713118 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.439121059 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.972072835 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018785953 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.683367236 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.961778383 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.189513755 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.427488984 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001944465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.43920247 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.462748349 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.614849491 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.446231045 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.722527238 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.444550033 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.974614783 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.468007506 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.731381513 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.464166881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988148815 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.488246887 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.767965662 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.441747134 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.560978082 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.444813991 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.425442166 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.629223058 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801341932 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.426462797 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.014764197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.42854015 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593867436 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025986679 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.468848869 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.778003131 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.428661215 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.433975883 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.804286226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.47301469 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.329315107 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.430657396 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.731893551 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.426696064 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.887112157 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.428283766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.021919764 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.656190984 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.450691776 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.438124541 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.233672886 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.429675973 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.496723729 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.607828353 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.767559515 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.435217535 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92912931 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.431551547 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.693496604 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.441103988 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.425510505 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.784256423 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.508869801 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.432844224 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.472381903 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.428501534 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.431864879 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.942036673 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.474016868 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.150782212 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.586113926 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.977778699 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.740612802 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.977880593 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.494131788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.451992775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.018682926 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.457703392 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.777408671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.431866574 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.471214021 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.955278389 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.432101157 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.94117684 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.008129023 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.471726135 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.752951644 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.431067554 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775137232 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.43017461 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.710127585 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.825035299 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.431753245 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.432128275 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.682104873 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.701933419 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651364136 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.448028551 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.482818479 seconds)
  done (took 876.378439438 seconds)
done (took 1158.756768309 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.433011649 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.429986429 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.419415873 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.433355757 seconds)
  done (took 27.080098906 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.442903735 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.440158882 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.442548391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.439614587 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.439923858 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.440328506 seconds)
  done (took 10.012587624 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.659374688 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.433522887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.432978318 seconds)
  done (took 19.891968727 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.690946857 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.77364241 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.850649625 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.784214111 seconds)
  done (took 11.466688849 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.442722104 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.443328711 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.443452025 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.441958916 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.441891402 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.444178815 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.440439 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.441315387 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.443333303 seconds)
  done (took 14.348239792 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.670058725 seconds)
done (took 89.834366551 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.443285627 seconds)
    (2/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.517211193 seconds)
    (3/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.539391454 seconds)
    (4/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.845112255 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.452141919 seconds)
    (6/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.436417257 seconds)
    (7/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.561553466 seconds)
    (8/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.44405136 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.387103888 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.869587782 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.128273975 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.521987284 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.701760525 seconds)
    (14/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.447750603 seconds)
    (15/309) benchmarking ("sort", Int8, false)...
    done (took 4.46281721 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.47344062 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.461053859 seconds)
    (18/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.010417531 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.435635778 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.766289078 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.574850598 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.139506868 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.674523557 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.268419337 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.422163654 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.420260115 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.570745398 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.444261574 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.278671373 seconds)
    (30/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.822500816 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.52030666 seconds)
    (32/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.841158153 seconds)
    (33/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.556457037 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.153145565 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.537075012 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.539159144 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.871089932 seconds)
    (38/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.535193891 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.436649651 seconds)
    (40/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.888109565 seconds)
    (41/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.591873246 seconds)
    (42/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.873693666 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.105597566 seconds)
    (44/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.398471967 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.437379223 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.322513258 seconds)
    (47/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.45404564 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.478883155 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.462121254 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.548719763 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.694707291 seconds)
    (52/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.25629945 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.427498534 seconds)
    (54/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.56129727 seconds)
    (55/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.454576169 seconds)
    (56/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.287535611 seconds)
    (57/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.549787695 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.493948515 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.52403474 seconds)
    (60/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.420865749 seconds)
    (61/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.438882041 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.03289414 seconds)
    (63/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.6535252 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.421100843 seconds)
    (65/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.420254514 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.829022483 seconds)
    (67/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.477265955 seconds)
    (68/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.449689044 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.448968822 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.669530187 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.918242316 seconds)
    (72/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.020536821 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.395953937 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.400062601 seconds)
    (75/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.198561245 seconds)
    (76/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.36392955 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.309591443 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.463058203 seconds)
    (79/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.496944489 seconds)
    (80/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.520121572 seconds)
    (81/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.439035941 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.020418947 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.712261241 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.463825965 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.012954165 seconds)
    (86/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.44016838 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.623695979 seconds)
    (88/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.181412584 seconds)
    (89/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.478797277 seconds)
    (90/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.455505173 seconds)
    (91/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.192370668 seconds)
    (92/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.449324669 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.515858069 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.440033653 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.480901088 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.439385645 seconds)
    (97/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.114450209 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.909658292 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.424528282 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.868872941 seconds)
    (101/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.478173154 seconds)
    (102/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.524347732 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.107412558 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.991327464 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.48788937 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.582559497 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.43536901 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.644574659 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.436545016 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.452955397 seconds)
    (111/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.528477697 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.1655327 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.489533316 seconds)
    (114/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.466618787 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.464213325 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.439777598 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.503952893 seconds)
    (118/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.650567639 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.526032292 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.487996982 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.133704393 seconds)
    (122/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.884390611 seconds)
    (123/309) benchmarking ("sort", Float32, false)...
    done (took 5.47522591 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.425516043 seconds)
    (125/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.52234436 seconds)
    (126/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.542768674 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.466148644 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.692780095 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.694283766 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.430964183 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.092286797 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 1.947275507 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.462499814 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.889387537 seconds)
    (135/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.482223346 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.704142436 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.440807782 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.281280748 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.696488921 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.939036599 seconds)
    (141/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.918111968 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.771753202 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.466305439 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.588712632 seconds)
    (145/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.848667259 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.195349236 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.558664225 seconds)
    (148/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.55051084 seconds)
    (149/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.429717094 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.470924065 seconds)
    (151/309) benchmarking ("sort", Float64, false)...
    done (took 5.816410731 seconds)
    (152/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.636415555 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.295610713 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.46736006 seconds)
    (155/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.505677678 seconds)
    (156/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.078459045 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.463851931 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.523323267 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.465615366 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.487466766 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.862016017 seconds)
    (162/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.205411669 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.832304982 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.983811065 seconds)
    (165/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.926973825 seconds)
    (166/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.60011424 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.805631741 seconds)
    (168/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.565879227 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.512187417 seconds)
    (170/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.216055663 seconds)
    (171/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.449342147 seconds)
    (172/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.832803159 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.444335954 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.258020215 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.619232775 seconds)
    (176/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.460847807 seconds)
    (177/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.932684778 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.47338157 seconds)
    (179/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.454596005 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.443140383 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.45755177 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.717915708 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.065410824 seconds)
    (184/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.43898843 seconds)
    (185/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.111181358 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.468565421 seconds)
    (187/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.085058221 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.515787205 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.69089602 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.469998714 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.587962154 seconds)
    (192/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.441277457 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.145979664 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.444165979 seconds)
    (195/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.471578898 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.484032265 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.428848073 seconds)
    (198/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.524537215 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.429239015 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.483518233 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.743090432 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.475776927 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.324441744 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.502161649 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.471676333 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.159406799 seconds)
    (207/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.680183959 seconds)
    (208/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.351332524 seconds)
    (209/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.639832505 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.442021479 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.110992785 seconds)
    (212/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.023788324 seconds)
    (213/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.057452648 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.90841491 seconds)
    (215/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.55464408 seconds)
    (216/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.018075485 seconds)
    (217/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.392743954 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.374488193 seconds)
    (219/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.821688252 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.192854892 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.677943716 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.429701726 seconds)
    (223/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.903441842 seconds)
    (224/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.43913945 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.545952129 seconds)
    (226/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.982375854 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.467235415 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.964184345 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.319382169 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.499721969 seconds)
    (231/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.098314661 seconds)
    (232/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.44127442 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.554262514 seconds)
    (234/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.855156489 seconds)
    (235/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.869883904 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.44660204 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.457506235 seconds)
    (238/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.628004909 seconds)
    (239/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.485798482 seconds)
    (240/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.145172692 seconds)
    (241/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.481321871 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.046855605 seconds)
    (243/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.644196189 seconds)
    (244/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.432640923 seconds)
    (245/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.064178125 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.99860295 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.730816689 seconds)
    (248/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.465128162 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.092317735 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.012132133 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.510387876 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.469466299 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.770434416 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.454865472 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.301069242 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.713059246 seconds)
    (257/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.900155599 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.677517156 seconds)
    (259/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.474104316 seconds)
    (260/309) benchmarking ("sort", BigInt, false)...
    done (took 6.448402048 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.457515345 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.188065768 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.487721267 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.383276558 seconds)
    (265/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.461851443 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.834205424 seconds)
    (267/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.438776896 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.457648392 seconds)
    (269/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.912524732 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.521217573 seconds)
    (271/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.136325942 seconds)
    (272/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.431769753 seconds)
    (273/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.312990603 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.479005011 seconds)
    (275/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.91381029 seconds)
    (276/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.908867962 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.032221393 seconds)
    (278/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.320599193 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.330339516 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.579171309 seconds)
    (281/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.373175839 seconds)
    (282/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.451865087 seconds)
    (283/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.280708909 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.102303958 seconds)
    (285/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.025680151 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.450791124 seconds)
    (287/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.735801549 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.553139419 seconds)
    (289/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.976419298 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.483357713 seconds)
    (291/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.534343933 seconds)
    (292/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.476626642 seconds)
    (293/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.781437487 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.559667563 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.652834169 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.045406192 seconds)
    (297/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.718206017 seconds)
    (298/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.13467303 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.559026382 seconds)
    (300/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.997071974 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.49340541 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.874431189 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.395786837 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.534086265 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.474332604 seconds)
    (306/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.751825123 seconds)
    (307/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.436833335 seconds)
    (308/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.887084347 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.168370005 seconds)
  done (took 980.318031104 seconds)
done (took 981.685912725 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.48083861 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474995913 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.458509467 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.480065493 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.571039528 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.487260824 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.470554805 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.461119809 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.506883619 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.508427913 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.457325143 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.486829377 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.460324523 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.460950644 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.459898336 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474116039 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.540904322 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.458487435 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.477213994 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.46968896 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.476028582 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.459560932 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.509632491 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.487006469 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.464521901 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.464373563 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.463848162 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.479640276 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.573556915 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.464465835 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.462863199 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.47196314 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.543651408 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.457327316 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.455128803 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.479729793 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.472137476 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.470478227 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.464624206 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.492778697 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.978134569 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.458779002 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.46347783 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.462301788 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.462273634 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.466047621 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.463763545 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.468189625 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474569817 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475587368 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.969985768 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.474354152 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.466047407 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.462418953 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.473323869 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.462188422 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.465128949 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478126095 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.482261525 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478058653 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.538076953 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.465465789 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.464027697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.479464982 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.469790418 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.008371009 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.456468072 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.466590214 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.983073243 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.464955944 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.009003147 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.469485952 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.463796569 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.476927894 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.493935039 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.551251509 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.456389708 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.462357375 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.471138105 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.461684686 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.473535014 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.476080331 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.468480972 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.46430329 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477805329 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.493182175 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.474743598 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.466263471 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.472399419 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.48326018 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.471205864 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.475086276 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.468383769 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.46007113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.472663037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.468764677 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.468396729 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.466971167 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.469657037 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.476581048 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.979480808 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.479695505 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.461868214 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.462563665 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.46389531 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.480025092 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.986575822 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.464824743 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.486854062 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.512584426 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.466036301 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.541683961 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.466803003 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481805973 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.474097368 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.468429806 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.461201963 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.543666587 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.976333481 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.477849969 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.467355143 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.464223417 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.481591775 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.466470483 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.461490078 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.552405376 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.465093952 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479342924 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.586842293 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.475621149 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.497097759 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.464636852 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.469116409 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.494476138 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4818586 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.497812448 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.469938544 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.48176253 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.482652674 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.463706687 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.477696847 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.476459189 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.467861364 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.472639399 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.461443361 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.494284762 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478435284 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.479011293 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.486676382 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.587514549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.463257363 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.545230647 seconds)
done (took 246.324385593 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.530628362 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.467033112 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.565000222 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.467211711 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.570123055 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.566671092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.464625816 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.46455353 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.464282891 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.847488633 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.464432934 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.46440209 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.465064634 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.464249308 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.550114481 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.468235545 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.464772686 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.810213271 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.469842556 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.540355219 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.463232725 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.464776989 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.466696936 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.851992784 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.465401453 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.463220374 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.538775905 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.46882053 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.816941935 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.467848621 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.461755021 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.817948361 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.558670739 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.485878914 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.477913914 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.475590589 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.571271067 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.483825288 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.54929597 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.549657628 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.565121987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.510608533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.467732977 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.4635763 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.468385567 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.473267899 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.466520436 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.496353561 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.468945482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.468034321 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.8116255 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.477928666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.466807084 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.467398988 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.467539239 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.501125655 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.466876233 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.473291507 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.560112246 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.473323351 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.530674907 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.855570935 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.849447343 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.471024091 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.462741704 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.468903473 seconds)
  done (took 157.513591838 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.537264703 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.543790025 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.59025999 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.469346688 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.519869368 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.595487112 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.468936124 seconds)
  done (took 12.120522122 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.476863721 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.471338997 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.521397376 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.52115085 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.473006094 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.620325546 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470953538 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.484033934 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.467971697 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.524988224 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470660295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.472458219 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.47772219 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.464016416 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.519876996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482959417 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.587635903 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.473270816 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.475193262 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.629570758 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.469717703 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.479906199 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.523661044 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.482976425 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470946618 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.478313336 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.054613944 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474440904 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469674983 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47151139 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.469273715 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.512647044 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.472821163 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.464901899 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470589123 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.588399485 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.473298822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.469946835 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.472458265 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.469557833 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.472441294 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.471532546 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.471716669 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.470336804 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.472341511 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.496397791 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.473563727 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.472208578 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.473168719 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.473831177 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.524858792 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.473970496 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.470876486 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.46924094 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.528944036 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.480058108 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476068885 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.470212082 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.47355716 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470500904 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.629389416 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.521432074 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.473416549 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.522325042 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474921064 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.474493785 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.474007649 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.474795748 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.537128297 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.47332235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.524178589 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.472557277 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.631585144 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.499734341 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475867148 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.477612954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.478310342 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.478712719 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.469062788 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.481617321 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.472476339 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.476899725 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.481936132 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471928242 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47142597 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.581598839 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.584797664 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.472844478 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.48825466 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.482484926 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.472691684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.527869864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.476066902 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.472728451 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.5268244 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.589743779 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.528941276 seconds)
  done (took 166.933290646 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.480771929 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.483417441 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.476497992 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.491441132 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.475761873 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.476768464 seconds)
  done (took 10.284848765 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.479027275 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.479272418 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.47581668 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.476868613 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.479120112 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.476354544 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.478734189 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479146042 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.48617355 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.475500267 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.476984575 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.476750226 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.477633861 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.479888383 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.478187506 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.47694399 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.480807609 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.474963437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.476835084 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.479917711 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.571943831 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.480098489 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.480164283 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.480801297 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.480841701 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.479566944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.48573802 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.478656355 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.479006377 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.487762096 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.484017261 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.478500692 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.481008418 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.487204175 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.485455086 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.480926674 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.483516481 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.949508804 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.476681889 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.47965214 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.480912333 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.481101202 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.480085652 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.480037078 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.48324173 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.485794237 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.486392843 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.488110206 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.482814065 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.482720622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.480446213 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.480206598 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.480560772 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.481014589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.483376131 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.485020087 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.484765696 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.483247203 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.483149079 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.482856173 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.483071391 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.480856217 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483034562 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.487172895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.486663741 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.481392151 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.48198783 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.487492688 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.48341254 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.481763905 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.481783757 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.478490668 seconds)
  done (took 109.61205811 seconds)
done (took 457.85697455 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.814459487 seconds)
  done (took 8.21776282 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.725761915 seconds)
  done (took 8.133413353 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.708202205 seconds)
  done (took 23.119961911 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.549812568 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.507913916 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.472919753 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.480756925 seconds)
  done (took 27.419010414 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.48191749 seconds)
  done (took 7.889039737 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.472903499 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.472927978 seconds)
  done (took 14.35371071 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.888785318 seconds)
  done (took 8.295126365 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.138850715 seconds)
  done (took 8.553554985 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.499628516 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.491541248 seconds)
  done (took 14.672505937 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.459186959 seconds)
  done (took 7.867024284 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.718528089 seconds)
  done (took 9.12487556 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.476471829 seconds)
  done (took 7.883847197 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.515138007 seconds)
  done (took 7.920587565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.866897386 seconds)
  done (took 10.276938448 seconds)
done (took 165.133514877 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.474814747 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.477070858 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.476130451 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.475431188 seconds)
  done (took 27.308463098 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.515680598 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.516824096 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.51684158 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.528701883 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.518377302 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.516653886 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.50762369 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.508317059 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.527113143 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.520259692 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.516551345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.518583899 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.515987935 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.508036001 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.517904984 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.519084685 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.527380216 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.517194326 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.50929346 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.520313576 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.485491895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.527023891 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.521065222 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.484749404 seconds)
  done (took 37.774492656 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.681561302 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.55567352 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.637366142 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.536682758 seconds)
  done (took 7.819092837 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.535839394 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.536822621 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.550385284 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.589314342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.624106434 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.547517165 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.513777051 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.505540453 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.489854865 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.539154356 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.613740891 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.554903301 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.678086221 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.483405014 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.669453868 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.482612824 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.484965212 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.535090884 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.587941903 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.606317078 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.485092039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.538066681 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.540274142 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.554158422 seconds)
  done (took 38.656593606 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.483842767 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.491506396 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.490211399 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.485075356 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.484537288 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.486091052 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.488472075 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.484958341 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.504845083 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.485157166 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.482988988 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.483656275 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.484464174 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.484279292 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.484434325 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.497030711 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.498058987 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.484312339 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.489854915 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.491965023 seconds)
  done (took 31.17387472 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.478653582 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.333570256 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.831189251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.736397927 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.479746119 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.479376698 seconds)
  done (took 28.748062087 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.564974365 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.701101589 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.484731215 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.89543156 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.975481366 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.486620712 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.486438773 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.742794317 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.099704265 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.101779932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.546873345 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.542482594 seconds)
  done (took 22.039118201 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.491733091 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.479369352 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.497313987 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.496783151 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.547811787 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.489811138 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.492531432 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.478791207 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.549716373 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.552936559 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.487746144 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.551616994 seconds)
  done (took 39.527674624 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566493189 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.531621921 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.529446027 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401118351 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.86268892 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689576604 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416865754 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.965312858 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.483832517 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754854962 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488970489 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57179613 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.740650525 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48214067 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481760827 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.607117592 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712274796 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025622443 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479840096 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.84450103 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507477119 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.497185372 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.044046859 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.509628939 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.692651763 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.619231469 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.742648639 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481219443 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791990565 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493240747 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492442377 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.483140005 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75487775 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20315389 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574029481 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493010952 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431101809 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.192496521 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.482665013 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.916866968 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.484171999 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.485840475 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494397424 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48223613 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.418540336 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.490979768 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984572189 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.48621338 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.194313267 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.483102069 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495248599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577186744 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.486769841 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302288309 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646836951 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481984888 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.482482991 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49009722 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053090824 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42681229 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49649105 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.42089995 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.652927976 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.881019754 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193203861 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.581828947 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.486858389 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.48872595 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419531443 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.901825244 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502301204 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.822605862 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.505258767 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.146805312 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289893319 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.490163353 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416151331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083280226 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.481215628 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.421246059 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712170751 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484251647 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426782923 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.43195614 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.419800573 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247991878 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489906526 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.950982861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489338571 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969889742 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.494329419 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502081771 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508072818 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71285856 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.369392166 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483856027 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.502114574 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.608120447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507740073 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.982065844 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419822336 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.489260732 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745220952 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.698345748 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496353655 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.611630156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734485714 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486494899 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.504354961 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.495487673 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.498057675 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.167330137 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.496284235 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442138835 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504107395 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.485932465 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.313075518 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.498307092 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.587701893 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.488356982 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.753890778 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.330166992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485277442 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569967647 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.489306539 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.486855436 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971121069 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009417738 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48773185 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.490329368 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498146612 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498651662 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.490489534 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450617902 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.494429706 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506721586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.491002884 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.712582032 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504988567 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.76336103 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423646621 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.828594815 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.588919622 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.709470298 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.843931674 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.489338536 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752160503 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488668201 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.494235794 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.502141327 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508929645 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587753089 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512061112 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.501932706 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.749577445 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.494866154 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.492881177 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966791565 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.492990109 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49991815 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.494246284 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469323789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162123317 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459505679 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.497172383 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.383243066 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.502807437 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555666459 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497238573 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.500988635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.513540367 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.547810568 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.492066343 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.487158265 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717038685 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501559458 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.874387926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571569206 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.72565093 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165252193 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501416097 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.423855245 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.201059166 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.185248066 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4912634 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.428483467 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.490336827 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50254111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500922209 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.818733541 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170669465 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490527014 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.885121502 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.498346066 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503589997 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.495890572 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491901156 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.503249145 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.461452105 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.504621548 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.503971692 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6367051 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.505703496 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.424961155 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.496030351 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496205205 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.493003737 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.491899597 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525743902 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.895841809 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016727034 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752685285 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.407032068 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.501012324 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.009107881 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.524972656 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.491210973 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.50352388 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495554028 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.507915515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502711265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.504862571 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981504554 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.17620111 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058577471 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313872953 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110329384 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641817958 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.493087117 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.494047667 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.00024461 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.425285664 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060755069 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707908461 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985140132 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448485153 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.729187907 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.853205091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.344034712 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.50602278 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.722262233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640685595 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.497428585 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507783373 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705789223 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52691347 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496770291 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42560816 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.779159177 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785988984 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498624777 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572705911 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986718605 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496818181 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.495961685 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.49498417 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.917673158 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685658444 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.207794203 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674215399 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.506622157 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.496399009 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021458022 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.498549403 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.724881602 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207497074 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.504347097 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.733875763 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434176765 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.505299369 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506507441 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.496597333 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.014637941 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.495223783 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.751812544 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.506258282 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.431570312 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.506935998 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11885278 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.367703062 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.50278693 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495610466 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.297278697 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498328098 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.81316748 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.496871326 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.505456067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504174003 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.430504238 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432017742 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.189297496 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.503378348 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467525906 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043836379 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.608136184 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644884547 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.53273973 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.554735093 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754610401 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.510715357 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.178926245 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724608722 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.528091753 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516894008 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.596212603 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.497224092 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.500477033 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.498012394 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.73290983 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.473469399 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719636758 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.599862121 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.404965734 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49705674 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707980783 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4984119 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49759203 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775764871 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.208698818 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.501431217 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31247281 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519671672 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.497037183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42092261 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667766161 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504985024 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576899359 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510594377 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.510639955 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.511341994 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.691933609 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49662235 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502608467 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.514805166 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592076529 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495816495 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.511765871 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.504199593 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184587107 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324407628 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188238332 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508381628 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.498058166 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.509447643 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436989397 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647308384 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.731884249 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774809436 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.620829174 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.716578028 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51823846 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.512532876 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.518391282 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713440946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775679549 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401190311 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510818425 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.514559597 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.498674597 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510694867 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.711718151 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050848126 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107528865 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614724316 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.511978124 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.004019621 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773351083 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501401812 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500920671 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099611362 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.516037925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.947790786 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.505260257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504766883 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649440307 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.512527893 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231877602 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.511196063 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.660891454 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.274913046 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994192532 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.760778692 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.077089423 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.512618427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185717094 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.331242399 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766128939 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569393812 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.514584887 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.609327576 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649681559 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.500877146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.520030013 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502017129 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.726744966 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.212473083 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.512893947 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190542519 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766232603 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.499490101 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.510580985 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525694321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.513504779 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.729749614 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.289394594 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.72629274 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512055467 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.509844226 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.323445167 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190501005 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515530627 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.440511778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.506663446 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780371026 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741451976 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524469677 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.956934512 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.216010185 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117990509 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.477879405 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526241813 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504471386 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357859781 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194201495 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.521938523 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.059620247 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.070093958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.522080048 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780520394 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.510740328 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.513675696 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780735741 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.50833817 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.506292949 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539743948 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.183427093 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.343959396 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.529582149 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.94458085 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.443955574 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.85505829 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288529474 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441785628 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502413088 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.715143414 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.504996909 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625992298 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516414623 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.508416174 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514876377 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.242259921 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.794922237 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.509265385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.49190316 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.52717455 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.509477085 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51821219 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.799863137 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514010925 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.183312648 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.860302088 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.764694702 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.505506741 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.493923477 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.509018326 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508310993 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.504948576 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.711861759 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.835660345 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.120266597 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.507826105 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.518844594 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510998579 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.727428734 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720245037 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.510371167 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.523400378 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518539103 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523850951 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.415853457 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.015604537 seconds)
  done (took 1688.424467863 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.544466888 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.518351415 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.529864061 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.536724766 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.514628374 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.575821173 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.537962103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.619237725 seconds)
  done (took 53.815942291 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.52020939 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.750656173 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.547029558 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.515280428 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.523097717 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.516415282 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.000088736 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.519268103 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.523590166 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.521771887 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.511318334 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.526697564 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.224209784 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.520153911 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.517039085 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.508797467 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.517614712 seconds)
  done (took 68.709865753 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.51567805 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.992045513 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.540827549 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.511002437 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.213089287 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.511149777 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.052098479 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.513515109 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.523248617 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.881286423 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.176617106 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.561298759 seconds)
  done (took 83.431813876 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.518410295 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.517111408 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.513966713 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.517153086 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.517680936 seconds)
  done (took 9.026857581 seconds)
done (took 2137.8649489 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.792422158 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.325356117 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.240487588 seconds)
  done (took 6.004665168 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.656306813 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.706010365 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.826805102 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.841546364 seconds)
  done (took 8.470232434 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.795742528 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.897415044 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.719873583 seconds)
  done (took 6.84917131 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.07507174 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.505863104 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.580210633 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.506857641 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.506306887 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.5107896 seconds)
  done (took 20.966218429 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.513948238 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.511546373 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.512907956 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.511476962 seconds)
  done (took 7.488351675 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.493827549 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.258194975 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.492784522 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.504182202 seconds)
  done (took 19.190221241 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.260033991 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.283196881 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.256334252 seconds)
  done (took 8.24028189 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.511629504 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.351255574 seconds)
  done (took 10.301724082 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.83898551 seconds)
  done (took 3.276599704 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.642303727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.775186139 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.7494251 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.612943734 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.790755181 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.886244701 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.389608255 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.90232905 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.603324907 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.000257919 seconds)
  done (took 31.790318428 seconds)
done (took 136.970186053 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.646172143 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.527242525 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.712670949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.620329206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.741885106 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.712941399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.827349755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.58732132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.357706133 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.118238757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.623624413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.741785733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.778901154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.526160099 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.778874137 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.526341364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.747508836 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.678519632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.305366783 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.503723868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.832805902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.259437655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.450796191 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.517647625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.747540255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.619989906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.842867564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.520612959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.48470925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.099674989 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.623544456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.510921001 seconds)
  done (took 201.01093068 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.506131406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.508281774 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.507870459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.510903655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.511206792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.509437229 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.523093234 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.522272733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.507891802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.523815959 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.508883181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.522857514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.512216881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.505352002 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.509247239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.507886251 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.51581423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.510634264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.527928301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.514506553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.508119031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.525322712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.505420704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.525566792 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.514468997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.518467992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.50844596 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.51075617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.523844135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.52352912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.512967317 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.518840498 seconds)
  done (took 209.900852486 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.510403004 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.511817748 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.511824324 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.510121463 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.51884151 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.508921822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.512919722 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.512443421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.519758473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.515662929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.511722029 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.512281268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.523934396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.511326728 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.509294233 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.51057152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.515452942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.513648091 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.549724961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.514759461 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.533636868 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.524127246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.510223595 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.519948982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.513626524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.513389732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.524933789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.512757821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.509973955 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.510096814 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.514507989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.513702012 seconds)
  done (took 209.9501976 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.71193122 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.521113782 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.51785905 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.458433488 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.522730055 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.52251154 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.524249904 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.718657516 seconds)
  done (took 15.945065284 seconds)
done (took 638.247888208 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.050408342 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.675539912 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.732247317 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.5414986 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.461230544 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.547679126 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.542026497 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.728145752 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.087255998 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.707917706 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.834769646 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.538788101 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.039744214 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.54024411 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.808457649 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.648335417 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.451876002 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.559763514 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.883547417 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.167046702 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.817516944 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.216514232 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.734162699 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.173375067 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.041974771 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.240384118 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.427439095 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.45118646 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.537866835 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.885111889 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.420192183 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.659488137 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.612774353 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.59417057 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.64541187 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.627143973 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.679813139 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.590373467 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.737563092 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.961726491 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.180437928 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.890914318 seconds)
  done (took 104.118490493 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.511879468 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.514823417 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.51441598 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.51639832 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.511776767 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.513058665 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.510910819 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.512431704 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.512499337 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.510973767 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.511321086 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.514230717 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.509989361 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.511523325 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.509308115 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.511878224 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.512198725 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.51147332 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.513155222 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.508287979 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.514146851 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.512598304 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.510045928 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.511016318 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.513319873 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.509738888 seconds)
  done (took 40.763187763 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.522472741 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.775833916 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.985538952 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.531891106 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.525061348 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.525213393 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.614935793 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.522570954 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.529618459 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.528057321 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.690330019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.528777194 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.559809519 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.986285924 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.529739359 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.528820009 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.526308426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.526564742 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.786870694 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.536997142 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.636337758 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.525870399 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.615864693 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.538722054 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.547279333 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.525661107 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.532263089 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.10711177 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.531065706 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.692160807 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.422446757 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.613565916 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.061314492 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.994997964 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.420891754 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.529828878 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.528425695 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.701593003 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.531337326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.527435639 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.615984433 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.528054375 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.993797987 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.183189119 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.546322845 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.528532314 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.134054688 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.701564644 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.811054031 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.536895758 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014666172 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.53150766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.528999357 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.530259747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.812485126 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.536276023 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.525719728 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.988289654 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.532050736 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.616245351 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.531024868 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.530685497 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.7971117 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.53172473 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.793888376 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.533162439 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.536909813 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.531433109 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.993058742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.533307028 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.195878443 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.54820701 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.53035107 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.694781442 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.795173723 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.171848416 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.53534444 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.803041418 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.074252682 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.617411283 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.534998362 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.098689554 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.621136595 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.536212013 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.533240441 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.532637665 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.528638484 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.57271355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.6173839 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.131953126 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.193254924 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.007282342 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.622860126 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.541185831 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.532038585 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.991074189 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.528687563 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.532109575 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.990696406 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.202215084 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.547908301 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.536346885 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.185700981 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.546762711 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.619667918 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.538906067 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.999674082 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.53436373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.577358944 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.530362191 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.538695511 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.536223317 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.6205326 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.535786371 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.529326141 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.178626275 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.721588779 seconds)
  done (took 199.900462454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.52259442 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.523954422 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.525931645 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.524373824 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.526054301 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.532047467 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.524534786 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.526347751 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.530560561 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.526448028 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.524747868 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.531277881 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.526709221 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.559385735 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.535322893 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.534143565 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.13897341 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.526381509 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.52334649 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.524570321 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.345542109 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.528653197 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.524282663 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.524628739 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.528926923 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.531709744 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.533642615 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.546976664 seconds)
  done (took 157.709671943 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.530689258 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.190994565 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.534567724 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.684562252 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.555420804 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.531840602 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.684012081 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.59930977 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.535612606 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.529621454 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.53281875 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.887843138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.534382831 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.102920481 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.743738784 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.686831825 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.137348276 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.534537078 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.532225452 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.532193161 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.684680195 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.545849136 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.890940139 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.191560638 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.535358864 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.195167962 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.524492218 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.535886821 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.53492294 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.200547389 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.534555025 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.891783347 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.623848029 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.603981973 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.201061727 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.140104819 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.138494498 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.702292542 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.535382424 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.532624143 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.531242073 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.523852964 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.198459362 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.537777175 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.536764605 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.187590325 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.552955663 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.536401424 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.543741422 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.53468739 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.604858976 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.599781985 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.894701511 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.205074238 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.625070707 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.557968202 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.679849268 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.932187854 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.540719663 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.139773878 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.525783023 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.20138242 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.541051003 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.521878068 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.536060922 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.541049638 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.709372601 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.68293203 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.140138206 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.539838447 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.141367726 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.708884555 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.537088236 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.53521891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.538429501 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.200360164 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.143773127 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.70746871 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.687806913 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.754625017 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.522312466 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.537276616 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.524551212 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.624927524 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.538000895 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.203209195 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.145576916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.537086878 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.537606752 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.538662074 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.540065835 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.734262855 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.203711547 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.629535871 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.134921821 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.910772574 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.897395327 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.540904578 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.606936081 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.53955826 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.898126402 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.541589004 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.604756725 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.00516864 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.895518069 seconds)
  done (took 183.554567674 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.805762775 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.793087055 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.635743711 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.66161897 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.122599831 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.144177186 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.707436701 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.621600347 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.642267038 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.668378939 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.310329883 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.62793564 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.749020294 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.623006168 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.279837171 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.614133559 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.639462882 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.663705694 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.660016809 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.601234508 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.187522235 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.847180708 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.713911084 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.571793462 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.600708995 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.384018306 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.342222982 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.069141 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.726857379 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.763622406 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.083637972 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.751847161 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.366091332 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250449066 seconds)
  done (took 71.693856103 seconds)
done (took 759.186636891 seconds)
SAVING RESULT...
DONE!
