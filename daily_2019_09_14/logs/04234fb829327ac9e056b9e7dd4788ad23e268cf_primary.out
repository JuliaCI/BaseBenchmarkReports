cset: moving following pidspec: 27603
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.300813052 seconds)
loading group "string"... done (took 0.611914583 seconds)
loading group "linalg"... done (took 7.130302487 seconds)
loading group "parallel"... done (took 0.16190948 seconds)
loading group "find"... done (took 1.123869947 seconds)
loading group "tuple"... done (took 1.77174854 seconds)
loading group "dates"... done (took 1.26074399 seconds)
loading group "micro"... done (took 0.226169812 seconds)
loading group "io"... done (took 0.918667257 seconds)
loading group "scalar"... done (took 36.421400341 seconds)
loading group "sparse"... done (took 11.405928051 seconds)
loading group "broadcast"... done (took 0.936185955 seconds)
loading group "union"... done (took 12.573353037 seconds)
loading group "simd"... done (took 4.607772647 seconds)
loading group "random"... done (took 9.181928364 seconds)
loading group "problem"... done (took 1.869932299 seconds)
loading group "array"... done (took 20.849729997 seconds)
loading group "misc"... done (took 1.845890101 seconds)
loading group "sort"... done (took 3.482246831 seconds)
loading group "collection"... done (took 17.644471427 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479466538 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121120944 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112866368 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116578818 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.130284636 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113430098 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122097801 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082869203 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.778910922 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143367657 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117379463 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410017601 seconds)
done (took 5.038413433 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173712827 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081982019 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080397408 seconds)
  done (took 1.292099103 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065090462 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119545946 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066340242 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065938892 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066450084 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065723238 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065049222 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065333291 seconds)
  done (took 1.644619115 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072278862 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067928921 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068009386 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067587569 seconds)
  done (took 1.406907026 seconds)
done (took 5.722098304 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.757563114 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.199851537 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182071625 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396828284 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.127416724 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153152113 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.630210208 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345165614 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18190945 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08123991 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103578875 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316219692 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106386683 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.630052049 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080395645 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089363216 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139053425 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420583942 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067057569 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081600896 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088376096 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127095235 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086349993 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07381239 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140830831 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067903855 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128989226 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079663711 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065822012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206274377 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172072942 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.646201065 seconds)
  done (took 10.141021644 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096153938 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097145823 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06864283 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135703697 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098366286 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07115036 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071988208 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066798801 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086384862 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127122781 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090887369 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103282984 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06551481 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068332807 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083604356 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204424823 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079257775 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080882081 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070312343 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075196853 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115747704 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078846714 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077937955 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076936196 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127879696 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182719797 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099223835 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098988641 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066302461 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080778997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114366136 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128153124 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066850353 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067923027 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126181301 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096202162 seconds)
  done (took 4.6118931 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.279351353 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139753747 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090586373 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130085098 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064836503 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105884641 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065455443 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080263862 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.201302384 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.300285731 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.585982232 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110493401 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103380036 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067291837 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067665221 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066630344 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.343698863 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1081755 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103063673 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081383388 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070265208 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068788214 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341636449 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067575285 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063497076 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067261787 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057858227 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122448436 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067741599 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912628333 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123706886 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065774398 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099842846 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168781203 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086845353 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272547331 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069091822 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064100586 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148435573 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.06954353 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065889365 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083013777 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086210404 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10272484 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113141812 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064927478 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066737017 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161814305 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065132465 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078463021 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.988780916 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153674538 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078160182 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063985748 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243972049 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08479221 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068531143 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064435101 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181752876 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138033281 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068695152 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066328983 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067904287 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068871955 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.363711487 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067925526 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717143442 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069960695 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076814593 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068752537 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069331418 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072618441 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071939552 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08455885 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063448832 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065572445 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074629569 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065663514 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065576175 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066312291 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083719183 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35983019 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066340827 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068071305 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064316154 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086021516 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09674599 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065869344 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064508155 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099675719 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066915582 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065401862 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108203309 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065578635 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082993716 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.088795763 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067684539 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111817752 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068746167 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.089919892 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065854536 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096168523 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067773451 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097686202 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.07835436 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066574817 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.387133573 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063776201 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.062938864 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066758967 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063509548 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.065768476 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065026281 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062372382 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076903722 seconds)
  done (took 20.6751456 seconds)
done (took 37.83713303 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274759737 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075772974 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07515092 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075075748 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074873798 seconds)
  done (took 1.800275672 seconds)
done (took 3.031953871 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118533563 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097875591 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064117871 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095613304 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064410221 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099077065 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098723745 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080376063 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099113049 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063524777 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095559447 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064014177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064961141 seconds)
  done (took 2.330004801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082211684 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082502891 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069561884 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08156677 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063690759 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082095479 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080112567 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087774477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080171738 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071554779 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06329056 seconds)
  done (took 2.043191257 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080662042 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082806927 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069460559 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0810352 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063227258 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080986113 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080333766 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084991246 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080601767 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073278397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063484669 seconds)
  done (took 2.035830983 seconds)
done (took 7.60338553 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077019558 seconds)
  done (took 1.265107131 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589459813 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.075925041 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082829893 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111477742 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182238984 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118442615 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276320283 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086399785 seconds)
  done (took 8.891226622 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101818217 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068216947 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070448849 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072528962 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070806092 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067823111 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068358565 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068872833 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068783424 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068042372 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070482139 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070756757 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068864545 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069009873 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070750688 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071083173 seconds)
  done (took 2.401991413 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091503691 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090091745 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072791172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07430871 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071636825 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071480082 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073847529 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073091412 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070107057 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072000274 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074226304 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072900142 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071139172 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064792429 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073714686 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074895315 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070386211 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073428458 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074016933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074697652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073889217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063867086 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.0710553 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073769935 seconds)
  done (took 3.059072815 seconds)
done (took 16.814509709 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111481621 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070994136 seconds)
  done (took 1.377237496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081302198 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081930845 seconds)
  done (took 1.36521509 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082023463 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065821137 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089389541 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077126166 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065914345 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065382238 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086920538 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065910758 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065301833 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065589133 seconds)
  done (took 1.932613144 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068271328 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078232046 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070335338 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.08068729 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073302661 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0634744 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072505693 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067348244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077094575 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062560138 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070623488 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081955731 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070499654 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083656834 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072289664 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067760475 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070415554 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066629455 seconds)
  done (took 2.502854007 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065758264 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066446368 seconds)
  done (took 1.340178496 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066106554 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063449913 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066176752 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065712162 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063158525 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061972583 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063113708 seconds)
  done (took 1.654122257 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.384000575 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110088739 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.293985828 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070754972 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08156148 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249742487 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065057428 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070042091 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070482545 seconds)
  done (took 2.643214601 seconds)
done (took 14.024523186 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078053101 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085363661 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094841345 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363440544 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091199174 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065573881 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113084903 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189601981 seconds)
done (took 2.299985759 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217319981 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611005737 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377837446 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198972961 seconds)
  done (took 2.39916563 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329593816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087462899 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059904267 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068176036 seconds)
  done (took 1.761553043 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065015472 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069630538 seconds)
  done (took 1.351336537 seconds)
done (took 6.946882016 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065626623 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083878722 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067279652 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064513006 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067346104 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.064836207 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066863944 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.064357251 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064148516 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066851736 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069900552 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066880389 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06663105 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06663538 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064805203 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064401801 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066363824 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064086245 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067836428 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066288006 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064160024 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066844748 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064470226 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063285363 seconds)
  done (took 2.848297379 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082133672 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067022446 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072262138 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070472565 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069032087 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070912989 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070679096 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065201706 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070166244 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06739896 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06905236 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068921595 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06736878 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069038229 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067442704 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06896809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070918185 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065534876 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067505744 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069161802 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07056486 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065799411 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069304959 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070165639 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068799307 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068919868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067409936 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065827982 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070436825 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068961122 seconds)
  done (took 3.300509292 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069045982 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063081666 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065212515 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071471446 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06430602 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064498901 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062607659 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06291121 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064048746 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062903971 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063958416 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062816378 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062741612 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064034857 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063629006 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066339385 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078038725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063477285 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063089176 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063438446 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066154983 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062822867 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063523555 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062690437 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062985455 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062601119 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063141938 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063099614 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063416719 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174693584 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06573619 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066234342 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062675867 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069111282 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066183602 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062435744 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066820537 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062341836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064022014 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062394447 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063077181 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063880476 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064437499 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071356379 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064367761 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065915051 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064745003 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065787959 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065142278 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066783429 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064616428 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063874368 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066814082 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065736528 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068058156 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064207306 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06531647 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062867451 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063947229 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06242848 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062431761 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062509073 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06515769 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06295607 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077680637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069106347 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062577252 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065882975 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064232157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06526162 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064857125 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076053187 seconds)
  done (took 6.023106115 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086639368 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086404866 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06480152 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06403264 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061390919 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063482022 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066833341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063304161 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064776379 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069062443 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063283675 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064695944 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064537094 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075468432 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063413391 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064575202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068967499 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061518829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063203074 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066469644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06348318 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066374866 seconds)
  done (took 2.714236214 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153361253 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06959217 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104114596 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071793044 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067323632 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072090652 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068945544 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069297344 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069022927 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067490085 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067395226 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068970558 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066598255 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067410726 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067371363 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067712527 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069436927 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067695399 seconds)
  done (took 2.585964875 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07653895 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065732365 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086151369 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065242199 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065477006 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067357229 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06965311 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073557999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067309865 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065194735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073622084 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067621372 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06776799 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065125479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067395275 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06511943 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067512021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065145182 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073395032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069813299 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069989489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073375181 seconds)
  done (took 2.759609057 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079145491 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068373196 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081372752 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068016184 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061514384 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063605529 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069317597 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065311629 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069885165 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06673348 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065463048 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063339806 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068675193 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065215602 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068438918 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065328058 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066899 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064909966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066631582 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061081453 seconds)
  done (took 2.583164319 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087064579 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068222161 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068894724 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075946627 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066812432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067048814 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074368588 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066932459 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066417176 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08628244 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067054054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066842818 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074593779 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07154512 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067160902 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074344206 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074164371 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074110142 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066862747 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066699743 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086654366 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067059758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074377757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066798424 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066813176 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066833183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066764242 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071654081 seconds)
  done (took 3.23445012 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065549672 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066111228 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063069426 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063419392 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063488237 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063375103 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063350796 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063402825 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065366891 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062885139 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06563515 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06566802 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065523523 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065683564 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065776472 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065620449 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065408195 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063152306 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063130257 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062866835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06539171 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065610336 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066600861 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064418252 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064506861 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066931656 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065037703 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064777316 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06732177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064566236 seconds)
  done (took 3.183805736 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076088455 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074518233 seconds)
  done (took 1.391768437 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063518469 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081574386 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064522754 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071435296 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070104711 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06594739 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072932571 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069027105 seconds)
  done (took 1.795987679 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082018376 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078266128 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06948502 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081162995 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075971779 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084165922 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134794034 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069073521 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074537499 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065789814 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081250737 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066602808 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073964279 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068080322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073730332 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073858788 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065829158 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073531051 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06877842 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064483178 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067159516 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074458111 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067893083 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061182645 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067096331 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087442086 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076580481 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065332517 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068643918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073104415 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071506031 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060030459 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065643432 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066269274 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06394007 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075591818 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081171881 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068689122 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074548095 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066532965 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076062118 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061069498 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070110667 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071957755 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075325276 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065820814 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066540904 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060645404 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063543521 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067927212 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061673411 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066376194 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060353952 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075103194 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068663412 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076282771 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064276954 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067129804 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068919156 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068634966 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072147977 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067255261 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067800683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06523066 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072395198 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069678353 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074236647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060786297 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062140426 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063667483 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075483965 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088207782 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072324009 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066937631 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066528128 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064218103 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069399936 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066982725 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07183767 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071712432 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065568397 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07206637 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073063218 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066042014 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068087056 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073504967 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063944558 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068655696 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063497283 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08157541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064710809 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06354132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063539369 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075586988 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068524947 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065116873 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063065538 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072352996 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059462891 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065831841 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066449183 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065438681 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075382416 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068669368 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069267544 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073084088 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072105958 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064977551 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067579459 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061578261 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065544171 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063873052 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071810324 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059437102 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068106239 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065728032 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065493824 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.198788771 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064366977 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066512747 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074194307 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07174927 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065703598 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063283801 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06957257 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065905472 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069650074 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074685931 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064520624 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061759443 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061582927 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070192663 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066532142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069953322 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070817129 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069922899 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061342046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064148703 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072039078 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075427409 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06710636 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067851798 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072131109 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067736189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066174053 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072232138 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06854363 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065052174 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072411357 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066917921 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061617911 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069454031 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069451165 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064868176 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069632511 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0698176 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068280184 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067549838 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065531568 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073993177 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067062059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064996387 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066603159 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065499639 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07618661 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067828985 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061489717 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062960368 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075002648 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064352345 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065760437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065387016 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06809505 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06729492 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063917423 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064821036 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067963868 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076442088 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06962733 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066732099 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071661547 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076520734 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06584164 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068104542 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065899214 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067160186 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06660582 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074542713 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071662369 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070587734 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068685019 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062792358 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071028834 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072990098 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064827884 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063331801 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064956398 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069963198 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071000842 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069985395 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066455024 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064122038 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066267967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068487521 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068298219 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064837531 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064604456 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071877464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063886149 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072829808 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066734418 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075529326 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069190321 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061175776 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068719021 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063657824 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071277714 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060768332 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063390157 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064794149 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065978459 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064140137 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06796568 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059349835 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072062043 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07245644 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065126617 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063748236 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064421668 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071294178 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066255919 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068129518 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068046535 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070522588 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074804886 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064383575 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067791093 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074642849 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064366256 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189355416 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074694122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065617637 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065241609 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06567732 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064496853 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069580922 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07431406 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072833258 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060683791 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068685353 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064784572 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065445632 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061501446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070653059 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06918926 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067145028 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072966296 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066705592 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066725549 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070939805 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066075357 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066687783 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067380145 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068547079 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067552372 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068902914 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065582979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069271758 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06586264 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063963048 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067431194 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066718307 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06614527 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071405892 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065358923 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066656347 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069206009 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067011667 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067182583 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06622496 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06583006 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069716142 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066871913 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067122643 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068818456 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061763565 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073144804 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065493167 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073811863 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067071005 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06305022 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073003249 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06846722 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070989582 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066420823 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066383071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068127587 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065156078 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069349516 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072981873 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063717021 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07676322 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073966045 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067423733 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068864996 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066579669 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067694721 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064784275 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067360764 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067026214 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066120483 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06567517 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070569868 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068575089 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066000029 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067296289 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066064326 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066039902 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066849751 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060019585 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065004262 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064924704 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065768145 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074960623 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066089314 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065519601 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064980687 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066871335 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064854653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06277382 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073785152 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074996956 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066229118 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073104269 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065257918 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067474831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076951249 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060306277 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064443826 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063248837 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063543854 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072502035 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066008867 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074395721 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065471863 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064714569 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062542434 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065869632 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064031196 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059605434 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062975901 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06865388 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063818899 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063852115 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064488794 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067071123 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065304038 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073338668 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064262153 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.0654702 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064756 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06177576 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06366931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064088258 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067373974 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065323226 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062756572 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062161902 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064227057 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065580074 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066552691 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064182831 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066866097 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073680999 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064698404 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067562052 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067358732 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060175649 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067757139 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064466627 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064033923 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063638782 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067730396 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067568477 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064878776 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072947515 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063946997 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065202072 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064331115 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062468208 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063808601 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063672712 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064096334 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063745834 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065593542 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071969987 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062110136 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067047525 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064690231 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064939874 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070662314 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065096082 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067298926 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070672675 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065116169 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066066766 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.070873609 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06641813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.066782152 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06386037 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065333444 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068558572 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062615625 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069807043 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063841472 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063610639 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065070562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062555798 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063411536 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063638891 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062986104 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068837916 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06365716 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062888056 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063656056 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061506946 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064245932 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066872176 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071057218 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065864702 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066136384 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059200489 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060912701 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064635711 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061901487 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064789407 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066217232 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069440871 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06487699 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064787717 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062892992 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072803991 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068526572 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.066946612 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062524211 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.066980845 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064291306 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065153276 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064459705 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064187845 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06449126 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.067396425 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06498679 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063445107 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069886596 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067058776 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064157657 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06505774 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064567227 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063864732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058844035 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063493899 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064611449 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068331685 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065339169 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063718376 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073311177 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062035029 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063929292 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066197186 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063266859 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067756419 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.05854672 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065125386 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064178451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064107901 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059393197 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063346695 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061628223 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066043715 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062871864 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059300702 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073465891 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.071651114 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066409269 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063161491 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062665998 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059509594 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059735528 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.300393956 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068324778 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070034953 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077670897 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067813313 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067501532 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064002368 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067452036 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070610591 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071609231 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065178117 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062940253 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066542877 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070415932 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072873566 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065697322 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066681379 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070532537 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069231688 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065074055 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070144521 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064145917 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071084725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079806505 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067538391 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067606988 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072606478 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0745226 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067447179 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061886634 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067577573 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070238813 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067996653 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068050593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067213105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082504387 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070048309 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066497544 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066214846 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069151932 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066065848 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074557912 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067515744 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06723589 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071012576 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069143363 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075660707 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069529326 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073979818 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06965548 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069527267 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065547048 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067525993 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064698856 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065712108 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06741026 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067339908 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071698608 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074742162 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065914616 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077414837 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075195007 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068768907 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06303328 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066003226 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065852985 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061863263 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06715442 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064459451 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064574762 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064638284 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06519087 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067327864 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071667021 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067644445 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066780144 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065899689 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060830224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06861768 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068555139 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067584457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063490077 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066704405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06682487 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070116302 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069301263 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06393966 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067946051 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068068999 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067142875 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061667941 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073088944 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065902636 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068764421 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065516588 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066658205 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067142498 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069709178 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071202149 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067122159 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068529756 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069743489 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068337994 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063653935 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063452793 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070991804 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063878985 seconds)
  done (took 42.053827217 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100776698 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064538376 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061667949 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061903416 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074269576 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063159364 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062153813 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062865472 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063260766 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065400738 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062276932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062100608 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071317902 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078347615 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073963204 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066787526 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062508217 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063391001 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062381972 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063130028 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071217151 seconds)
  done (took 2.799222951 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074115193 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069841333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072894033 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076395556 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067631438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0706258 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072862452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070853118 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075965371 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06714183 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075753914 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0706278 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067247413 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067494458 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067374818 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070998817 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07621807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06755338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.079432374 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072793793 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070915711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072607624 seconds)
  done (took 2.921401725 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06745322 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066036336 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067488011 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061157789 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066146555 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061632741 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069382035 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064106816 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069751065 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065457432 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065253438 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065145699 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067964954 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061478348 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066458786 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064267283 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109257169 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069424036 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066150404 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067410065 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062555671 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06869063 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06188361 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06252695 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065582644 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070027884 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067061109 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064390863 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066240788 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06596152 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066105284 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064154108 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068054331 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066868733 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065523905 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065862505 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066370868 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066159307 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061865955 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064544601 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066787643 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062176924 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066896864 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067638001 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06421238 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064494304 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067810555 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065970881 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061399511 seconds)
  done (took 4.607088943 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080211693 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109155214 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067866313 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088572032 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080363022 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075779708 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069559484 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090029333 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063551685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064691429 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081753227 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080144684 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066189578 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070736716 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072386639 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065991974 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06723944 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064800196 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070058908 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065803046 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070243005 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072913889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080432762 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079173518 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069838081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064860565 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065490524 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070173305 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078509003 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070730975 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070518711 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071279326 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080537967 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071622485 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065039882 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068358261 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081583456 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066415366 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068844682 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063701605 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068386944 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070021354 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072197455 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082024874 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066516055 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071290126 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065970718 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06305105 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078497174 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068621061 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073834113 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080014945 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069741251 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066306661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070102566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080230996 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065651007 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064071163 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06903708 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078247615 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063604892 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069332741 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079155815 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067562804 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072894872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079652789 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071145509 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069317631 seconds)
  done (took 6.409417063 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07565798 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0724916 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081449762 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079728052 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072832209 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072586233 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072346126 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072021297 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072185116 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076943513 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072141238 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093087068 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067886765 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075346333 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072378478 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07233724 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.0724955 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072744978 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072576497 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072188963 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072535295 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079674076 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072085338 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080283089 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098608023 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067724336 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072378553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072252964 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080186828 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072229594 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.07958112 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072197418 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072337768 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080174399 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080349946 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071681223 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065012512 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071907337 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072612752 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072021441 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067972152 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079910193 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07126678 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067387009 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072120035 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071627798 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079230792 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078731343 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074251602 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076352983 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071920486 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079587509 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071226474 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07220964 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079534875 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104178137 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079153847 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079332265 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071982965 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079555801 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079721855 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085718821 seconds)
  done (took 6.064192763 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082612964 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074576263 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076251976 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061407682 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064439447 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06972867 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063844696 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064224933 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074394081 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074076922 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076946013 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069691549 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0724043 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076702378 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069745151 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072329203 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069835336 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069454251 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074490834 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069640948 seconds)
  done (took 2.801567566 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073889488 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082957999 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066396174 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071694001 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069048586 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071780733 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068327058 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069131277 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067053994 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069133448 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075902225 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076068927 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067105512 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071491088 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075771602 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071498307 seconds)
  done (took 2.513812573 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074461718 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072509106 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079873167 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066135807 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064037271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06260839 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065701427 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061669899 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062379728 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077711048 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06567386 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068501541 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065909605 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064540041 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062729534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068461712 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062705867 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063351088 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065790447 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077936651 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076413886 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064181339 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066510116 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065603314 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065789025 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070385266 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065311168 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063670883 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062991366 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.0656086 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066470855 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069375139 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062632406 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063570074 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063910306 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063202437 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065123601 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065986054 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068191947 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065488888 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063617505 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065159716 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065281694 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06633797 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061830444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066241277 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062071166 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067704358 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06365089 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066199812 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065603734 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068523109 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066281499 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072301149 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068528214 seconds)
  done (took 5.030175275 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07959846 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069231599 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061938467 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064034954 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06910981 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067753982 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0695158 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067410463 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067514608 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063930018 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0674755 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068733573 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067712113 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069481788 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067579513 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06942802 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061845926 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067455747 seconds)
  done (took 2.600952097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071425988 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066018738 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072752881 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065293787 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065910575 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068574953 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0619797 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06419134 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064419118 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065785134 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065839149 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068063757 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064457156 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06814977 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065603875 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065957884 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068074934 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064627947 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065274054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061945618 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068044708 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064197984 seconds)
  done (took 2.830463739 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072293668 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092325071 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138530074 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084384384 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081849822 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078340155 seconds)
  done (took 1.923565373 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091001144 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078544736 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066492006 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087131255 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073135272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067075211 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066945438 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067495537 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075465707 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075619107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067243884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075388812 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075545467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07476348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072890609 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072555451 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066782774 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067065677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066128184 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083501476 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067112483 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075439222 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0670716 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066634816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066911146 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074937101 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075678008 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076103268 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066991107 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076293525 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072897104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067533043 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075974311 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076189293 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069163022 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075890825 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067796401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0841209 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072953431 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075154231 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069159377 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073309973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075890902 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071993184 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075446815 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06770425 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071801235 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067049659 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067026694 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085489232 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072965582 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075145911 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073196326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075442717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075481023 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085695701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075881733 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074711336 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073171031 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078328378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074663532 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072507608 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074563436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075404716 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073160281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075035807 seconds)
  done (took 6.227367326 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081017051 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085816576 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067742338 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077129981 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075029195 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06718354 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067473182 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067072572 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067125526 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067198969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107255931 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067414392 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07552705 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075329144 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067660754 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067499575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067864095 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075209459 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067222511 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086020128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06717795 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074945463 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07507689 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074746921 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076481172 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073087716 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067324111 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067246961 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067198256 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067559742 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072252922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067349835 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075020187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067079362 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075182445 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067414266 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067305477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072037145 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067618781 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072911567 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075001412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083400369 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067515061 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066971355 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075762916 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067072553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066992426 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066733376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06750853 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066674792 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075585385 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076027138 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075899635 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074898602 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067755092 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067345201 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067015504 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067308074 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067308407 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072368065 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074655082 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066897473 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08610633 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066896146 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067579434 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074886637 seconds)
  done (took 6.13890835 seconds)
done (took 128.557378595 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.185049818 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169614552 seconds)
  done (took 1.724100443 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068662004 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096861119 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076401441 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128181004 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066436748 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100717699 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099297658 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077849176 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066097179 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066185649 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066098545 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068122208 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131257317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066180499 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066090701 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068688411 seconds)
  done (took 2.695293724 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09658548 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157196438 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099837721 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06460609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09692287 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072505857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064594468 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074695242 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07066366 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065269294 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072606756 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070556041 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064798192 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070229425 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070848423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07270031 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06528393 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072553774 seconds)
  done (took 2.806525949 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10081132 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09127491 seconds)
  done (took 1.581811097 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158319644 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106304076 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150648641 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350564093 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167329715 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230267875 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128848656 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.129930855 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120318944 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123990169 seconds)
  done (took 3.05178218 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09817094 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151668795 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254843311 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114578538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07195533 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094311471 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116424496 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077640569 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080646708 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079973365 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080111283 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076376656 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098743097 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073400233 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073363535 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076639294 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102701285 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072014797 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074017632 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07671332 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099322225 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065791814 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073249372 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072585939 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077172131 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077390186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065690632 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065909234 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076733923 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074436697 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077088584 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093350667 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077187879 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106676297 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069966162 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107570117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076474081 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074247497 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073944386 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073622286 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078310958 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078874391 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072001667 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075675341 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065140512 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076328238 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065282781 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06530046 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077900739 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067335992 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078068378 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07693093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107023659 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06684101 seconds)
  done (took 5.987738212 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101808358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105487344 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071418718 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11011685 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097607587 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071351558 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101282426 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091377614 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102396869 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092646783 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089252687 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070721595 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08243406 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083137488 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109793271 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101805813 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095662253 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070630004 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102324013 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103085999 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068606844 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094782892 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090877861 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102030613 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067711436 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07043842 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06864559 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070430323 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077041883 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078740884 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070241971 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102353704 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084551256 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07833324 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067135979 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068322519 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068475751 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078960278 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097747865 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078984487 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077504727 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067482559 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067971082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069912353 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091494385 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069379075 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078858728 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07998041 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078637075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069477412 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070106943 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068266565 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069635762 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079734509 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077388754 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080672637 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080318957 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068401418 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068741491 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072178642 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081009789 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078644392 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078635017 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092868658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07897252 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068332532 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080275012 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084876956 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068714637 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070022242 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068840698 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06953497 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069994425 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078138423 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077881241 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070060082 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069603981 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068023166 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079505086 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078304165 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067890548 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076809647 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067063404 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068368026 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07009048 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069932802 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07737653 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079128844 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070363389 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067369957 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069367095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068314459 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066611032 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076430206 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079425662 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078195759 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078635022 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069439984 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078966992 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078366306 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070139271 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078347358 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198669766 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072123089 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069773205 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079545223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078748975 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079978549 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070277975 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068905017 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079214526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081116355 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069190006 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078654288 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081946621 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079732325 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069285184 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081856587 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068510425 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080243791 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070212169 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080687003 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069093445 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079058017 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069074594 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068354339 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068308209 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07970248 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071047481 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06933236 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071165139 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071349292 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080120817 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082597802 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071692329 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081699219 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078812335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070584443 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079259825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069018053 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080823255 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070232531 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070151759 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067595707 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081869176 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069614052 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.0690366 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069841681 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081014413 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068125894 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079566802 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079343674 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067691756 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081018713 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080915493 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077279585 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080766896 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070814446 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069705528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067955484 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069948204 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078508179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08065361 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071633834 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069075078 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078026436 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079672802 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067576331 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078281977 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078556655 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078485146 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068527052 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069567989 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080032818 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080901835 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078221219 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077924269 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078781376 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068517952 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077503871 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078401264 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067773028 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08451281 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068034909 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082096231 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079079106 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076514776 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078956757 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080308759 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080276209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079904567 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082641158 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067441762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067852081 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07889079 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067837648 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06899803 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077110938 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069407287 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069331959 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082491765 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068138504 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079140483 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067430814 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077873431 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066344043 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068970995 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.215511881 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068931774 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070886891 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080088419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071003068 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078458111 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081778606 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079009443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069198362 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070388499 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080266359 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079783081 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068801813 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068531689 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070272363 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079115663 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078198085 seconds)
  done (took 18.845612061 seconds)
done (took 38.087120831 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208776907 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152525607 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179417532 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118372519 seconds)
  done (took 2.146352479 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121882986 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101189445 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095082767 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064794607 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102171617 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064590903 seconds)
  done (took 1.974768219 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311043546 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210481325 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181151631 seconds)
  done (took 2.122872134 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198581922 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186859655 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.393240203 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.252225601 seconds)
  done (took 2.559083149 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143218702 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089599787 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066982259 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082875512 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133706618 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160237607 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10075349 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125621458 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07813138 seconds)
  done (took 2.456256472 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14730387 seconds)
done (took 12.831028291 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.168272997 seconds)
    (2/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093375445 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.186121228 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.207196858 seconds)
    (5/309) benchmarking ("sort", Int8, false)...
    done (took 0.148441991 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.110679071 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081725508 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.172823979 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073846419 seconds)
    (10/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149035017 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077294321 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216959384 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073287168 seconds)
    (14/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069992092 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.082254096 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.119495523 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157361072 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105116825 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.152617504 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.062060966 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.183377649 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.217721421 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.107941327 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086251648 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.104456147 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.215368919 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.138327982 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080173191 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158359188 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.095555426 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157510715 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087666127 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077419692 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.193372179 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071164555 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191358631 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080831417 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.196378689 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076291343 seconds)
    (40/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051772585 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071966789 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065036525 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066098187 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071611285 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051199313 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072225418 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074158313 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.164781482 seconds)
    (49/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066848877 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076552467 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142342791 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09116894 seconds)
    (53/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071512216 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.196362275 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050900076 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088295312 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.188134105 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.108190103 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068361272 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.163254434 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050963546 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.181023462 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.109297887 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078997309 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141365205 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089865935 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148940803 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138089616 seconds)
    (69/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051202954 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097314911 seconds)
    (71/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051963646 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074774394 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052042868 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.147765814 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077188145 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.065612833 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201516641 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094420052 seconds)
    (79/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080467729 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06454464 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.259705224 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.175183521 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.096138131 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151006655 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090296876 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053434298 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072358676 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071264831 seconds)
    (89/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099518118 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158614637 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099393762 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068308137 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146206721 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.110404406 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053857827 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086862448 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185804662 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073600424 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089392134 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.366061379 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070110429 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149038487 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070576172 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.07232973 seconds)
    (105/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072888136 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072854518 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.064987803 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089654821 seconds)
    (109/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118615611 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072757329 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072266285 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072664859 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.099780066 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139558785 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.158529156 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139427845 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067585414 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051727747 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051306903 seconds)
    (120/309) benchmarking ("sort", Float64, false)...
    done (took 0.124765041 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170053453 seconds)
    (122/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108676365 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110856215 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073827726 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066711915 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.134491652 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072934601 seconds)
    (128/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100890299 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071236445 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165967052 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.174306524 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070201894 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090510251 seconds)
    (134/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051371974 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064756155 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068531453 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052109017 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.084617948 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106574748 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053112355 seconds)
    (141/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072069216 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.160855153 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071660975 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065158055 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064662353 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087641903 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073856879 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070906862 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063555363 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064578188 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071997675 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065361981 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193723044 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170311009 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071483419 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140422879 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073514603 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.0510318 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.074562358 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075265043 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074752303 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135973389 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094962924 seconds)
    (164/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138199841 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051044604 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136039716 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051133587 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076255321 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05307558 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065341557 seconds)
    (171/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072188403 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 0.183917194 seconds)
    (173/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.065925306 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107561961 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065294214 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088321945 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051041119 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052861513 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050832898 seconds)
    (180/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149496577 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050728077 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072162299 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.154319899 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069848014 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050991355 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061301977 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.251593674 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110351439 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071946664 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065919163 seconds)
    (191/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099797093 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 0.128922971 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062511963 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051942895 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052467947 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073788891 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06265167 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.075780002 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065627259 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074011164 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051097945 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054657041 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089949097 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066707426 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06673297 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065544392 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064447127 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079964366 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087131363 seconds)
    (210/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062354583 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108149148 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051965544 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075903431 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093444711 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087390155 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105882168 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067262292 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061099577 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050923783 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17397342 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074029728 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090024919 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072693619 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07313679 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066718293 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067631747 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066701002 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086044955 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065811903 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070656052 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079412771 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052835486 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051616838 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067516055 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066708424 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099501308 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063805976 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.103487515 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128542831 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111681553 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064902093 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051092383 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13596592 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067233228 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051507956 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077844496 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07573361 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051448447 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173308402 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.0524978 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071149597 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066420094 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066173396 seconds)
    (254/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072402526 seconds)
    (255/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088176342 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069766251 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085335938 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051495687 seconds)
    (259/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066603151 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064130022 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065194871 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063817838 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065251446 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0804691 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064952902 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071546123 seconds)
    (267/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069046307 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072527754 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063225118 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063154063 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096187434 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052462521 seconds)
    (273/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066931111 seconds)
    (274/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063293291 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065000352 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052866914 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051367419 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064983567 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069111838 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177954339 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065448268 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051176361 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.0524305 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072322118 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063320282 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05255007 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063491706 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088147186 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176814734 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071331168 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064432633 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072021383 seconds)
    (293/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06059757 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064832335 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05213388 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051099379 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067446917 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087409017 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051842608 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070047692 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051989641 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079044232 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052017432 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051350469 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070419214 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071886717 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065474592 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070067549 seconds)
    (309/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052334343 seconds)
  done (took 30.443398242 seconds)
done (took 31.877545645 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084374136 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091655318 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073873564 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092417364 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080316365 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075595992 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072039637 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077432909 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078951645 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080466912 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078230429 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05462001 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073269849 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073485276 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073960521 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090168644 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07741632 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071913657 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072423925 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064183413 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072902963 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065451783 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066551784 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05478482 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077034749 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070870643 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071922716 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073222559 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065424335 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065509935 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068401378 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072787441 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065107235 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07709489 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072059299 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072364523 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073856695 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075309455 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067235099 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06532687 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07336195 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06547063 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072301272 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072749792 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071248596 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070529483 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072342314 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077503749 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090471453 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067703129 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073569404 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075377792 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075516852 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.0716386 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068938453 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072266857 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070133781 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090603579 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.0727652 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067812609 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073938515 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073283371 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070212598 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072556951 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072568674 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074457145 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074487497 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070468593 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073334281 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070312047 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064945655 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072709167 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068150115 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065277331 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075124459 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076344554 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06365572 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070757621 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071740136 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071240264 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064332881 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067297515 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066602924 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070884837 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067309878 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054273671 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068355915 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070831024 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06399824 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07217967 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070639458 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071751396 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066673679 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074703026 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064859735 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070013116 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065283851 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065486462 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066412273 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068676683 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064589813 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067134901 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073507429 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066526629 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070787361 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078239999 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064504972 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071279216 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063751103 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064377993 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078200452 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073213306 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064543306 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067068965 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063411593 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071008945 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064045265 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064245219 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064554627 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064743456 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069983157 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064796527 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066857547 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071792157 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07679066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064516784 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068109399 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06663485 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065120983 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069996872 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065027849 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065155616 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200201198 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06232041 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068286983 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065523486 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072393675 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068074482 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073411123 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066966193 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072643849 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069943526 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070699781 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070303628 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064624059 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058320299 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067779181 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067993452 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066826625 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065589387 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067476437 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065651125 seconds)
done (took 12.397595077 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065951477 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142446754 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098936605 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094420417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085951656 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06623738 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075328106 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10127382 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067257287 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10195159 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086558681 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084681417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111475059 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064286832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065494953 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069551604 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06686467 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081054126 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100612547 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085867437 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115091784 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064986981 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094135776 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089602531 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086486971 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091607017 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066667265 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069565821 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06939483 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099500232 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08605815 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069600554 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065948527 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099495833 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09187133 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082631524 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066038433 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081563317 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066431622 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065699685 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066999196 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097436889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079623837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079924232 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069588212 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068539857 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066785304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082478701 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088479278 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078122375 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085898206 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101813805 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068133192 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065248669 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064016117 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084619789 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065124426 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068220038 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065631545 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067780355 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065361368 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068398269 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080762321 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081648214 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069327713 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079777097 seconds)
  done (took 6.791592866 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082153867 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089776537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082180907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0828926 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065357649 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066034579 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066007751 seconds)
  done (took 2.062672195 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067015372 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087564807 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087508072 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088577887 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08393704 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08668047 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075245387 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066073946 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080144248 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067072179 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086604314 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100908329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067038088 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072483675 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090099945 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066588248 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089845399 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066042369 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069164525 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089735278 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06775972 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081474375 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069441062 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067019878 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080090083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066826207 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111465732 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069923724 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067542599 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068737939 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063985944 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106454251 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079356841 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074892877 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06591887 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080574295 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080362614 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064069456 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081893519 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070843438 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079737082 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066340209 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066992396 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064270408 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070330002 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076395177 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066872638 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066441635 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068167947 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085171439 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066723419 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079328929 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069060247 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06872509 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067287891 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069710586 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075582485 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066737716 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085982878 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067933619 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082469669 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082050206 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079533256 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082203517 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068255309 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079519222 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079790422 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068898066 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068428955 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06950937 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082221304 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064490094 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067706657 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076636886 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068259105 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088927785 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088914865 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067579569 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075462436 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066976365 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066573662 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066426262 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089018589 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068533003 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065843752 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070364188 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068829578 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064801584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06510077 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069303763 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064370274 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067550634 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068914429 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069084149 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068213184 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082351562 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068418167 seconds)
  done (took 8.745232927 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068241391 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067580178 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06922535 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067444685 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067673039 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067800449 seconds)
  done (took 1.961780556 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092107408 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068622424 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080079671 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071753096 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103796587 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085863961 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086414814 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078650338 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082809294 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078318596 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086093128 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087921422 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092528095 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072280287 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085995806 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072011669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086973469 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075312965 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07805836 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072698424 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086509126 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072456049 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073192571 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081744669 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075332608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07194644 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06696093 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078382021 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077899151 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078430203 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072186022 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075492625 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069935266 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078245511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086168534 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070582918 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071472256 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076689307 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071978335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075289908 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087599933 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072647337 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074276882 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076535311 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078217738 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069671788 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076635939 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075947387 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085439624 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07667753 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076519515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071722351 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075193543 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076973326 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070497339 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077900285 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076367541 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085688443 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071993653 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069699966 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068723945 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074969454 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077078615 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074680036 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078376378 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077058981 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069855796 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071707051 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072196203 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071699206 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076500339 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068547214 seconds)
  done (took 7.086124352 seconds)
done (took 28.163000666 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542402883 seconds)
  done (took 2.061593098 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602603775 seconds)
  done (took 2.147117141 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.629071965 seconds)
  done (took 8.16571399 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388487365 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470114546 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.683465927 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129988569 seconds)
  done (took 3.245959531 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.660568255 seconds)
  done (took 2.209632801 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208527152 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195303457 seconds)
  done (took 1.962016536 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376335625 seconds)
  done (took 1.916335182 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.1084802 seconds)
  done (took 2.651639371 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259729783 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162216024 seconds)
  done (took 1.971100656 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455993392 seconds)
  done (took 2.003287984 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.829104632 seconds)
  done (took 6.378357415 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203568664 seconds)
  done (took 1.794815365 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239863854 seconds)
  done (took 1.787509052 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.682386072 seconds)
  done (took 3.232915066 seconds)
done (took 43.076461496 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079382925 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079968955 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080452587 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077575409 seconds)
  done (took 1.85633271 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075933995 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071483627 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075413374 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071698323 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075732008 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071359089 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073649508 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075929864 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071234075 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072213716 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071416156 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071550236 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073711707 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073326473 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07009775 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073800176 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075008408 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071581586 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075045217 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071771648 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070271107 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073663085 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074054864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071307369 seconds)
  done (took 3.305283895 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076633483 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072276501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074062177 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071081046 seconds)
  done (took 1.854334332 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075938815 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090686545 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088654051 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077314261 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091121618 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085319564 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068361683 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068370081 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072609883 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076052394 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067486163 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094561603 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086576545 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075669495 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077906213 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065168654 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067122014 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085831404 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076429963 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076783521 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068735478 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075987396 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067383022 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086953745 seconds)
  done (took 3.422980577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076234836 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102201251 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076915459 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086156905 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089283465 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06477004 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07318527 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088634826 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121811941 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06471886 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069072708 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064705082 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071841394 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064864336 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07546168 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103562258 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10660544 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067580983 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094899175 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06459235 seconds)
  done (took 3.19486746 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072582189 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.0699995 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065516381 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067675351 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076363758 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07182502 seconds)
  done (took 1.989607682 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068082854 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066301486 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066641027 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065695512 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07091549 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066213288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065090467 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06598012 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066145719 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066307029 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065736356 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065462743 seconds)
  done (took 2.359764299 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422712066 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070037409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068134192 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065769352 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069857628 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065617783 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079096346 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067218701 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089521045 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065670834 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065897759 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067869074 seconds)
  done (took 2.761078175 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206369206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075366528 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234653429 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135606749 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110350684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114586084 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102825093 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111658108 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141770287 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101212232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165507585 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164394297 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105603781 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13596117 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088221647 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096485596 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154062887 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160707809 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102241537 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163724706 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142356734 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123217759 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145206923 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100163469 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105071771 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120018563 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070269805 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079135706 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168892406 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130224046 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145063898 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110048865 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092678738 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174355856 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168752682 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139580017 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132341808 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083013678 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100588891 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131377537 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197197184 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087711533 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162587976 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245297546 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081587346 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132491581 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1205742 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118367155 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105636082 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088947719 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144886344 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182002098 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137571335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086499871 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110176225 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114215056 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.11479624 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102855016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179867339 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159985903 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128045696 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070074735 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097816422 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15217466 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131177947 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107956334 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125859533 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092442763 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13189413 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15325607 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117477555 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142180652 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126905496 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087243114 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1179844 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138312644 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127033568 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168313613 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123057871 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072144946 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123837842 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102399924 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080918244 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141198319 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074218733 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172793735 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09716162 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104968174 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111265281 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107891092 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107755463 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159600799 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141971265 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244806534 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066909357 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103142315 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120242588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146367683 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087334015 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107897934 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116136664 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076613496 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137063968 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074629471 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12291214 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074705541 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124680521 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133083195 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07507584 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120800526 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099623106 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099089449 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132512259 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158474657 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088777469 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081742916 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164924616 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120190449 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103425984 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143451046 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154797924 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098215786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101761794 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147574358 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17823401 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088930072 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16173061 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105868535 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082693282 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086550082 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122518723 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111401235 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120973461 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081169098 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11751224 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16645387 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074329764 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095032741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131421317 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078150417 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079341011 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102064678 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099461515 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093938157 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099253817 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103116608 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136212086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121851712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103522831 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27026926 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099129071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168975828 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088461215 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099820454 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102440367 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068938244 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135125003 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156146258 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07958125 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162216285 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122546912 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104106656 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117776507 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08151332 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139450117 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077999936 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069322717 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142807559 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110498143 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10985855 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149329717 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104192022 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125897353 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118323711 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134128186 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131329914 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127845274 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104292016 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08709309 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110467336 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124309762 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072107399 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091167956 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079632266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102857674 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094899326 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082258117 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141000736 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123808064 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099484737 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110737603 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095437476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145488859 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075881585 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128009216 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117247806 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092413227 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149911012 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150745906 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130006066 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098370278 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143317123 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.06937703 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072891362 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087873193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267534704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083239121 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08367763 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117119255 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14644922 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128736485 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138144942 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11088898 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119729436 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152980643 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069426092 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1144255 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146956708 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119865908 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103857271 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089477984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097922015 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140321637 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106764279 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180261442 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113508969 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125062196 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151349076 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098763594 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08408091 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102326319 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134587525 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103550099 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143199432 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098686036 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086906009 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108821433 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073826091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099525648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125731524 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118621289 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13448751 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113433751 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131647959 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076249578 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115752356 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119383427 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120781452 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.062938519 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118217307 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15911769 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092938123 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116899829 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151873568 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07814521 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122677996 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32103294 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148009988 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085679859 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108954222 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117903678 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126551864 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119871655 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139101244 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108361431 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134598069 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108606341 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084276277 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086222752 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096251474 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103323512 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094730322 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107261252 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114002816 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093231131 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131823163 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101383289 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107552616 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116632724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095128296 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088036762 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09660976 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172515276 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11893435 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170082022 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098039377 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144017864 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163005949 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073672252 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078064696 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077294156 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138833557 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083139997 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129804425 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096700952 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104658868 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122932816 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14073541 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093868937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067718697 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107104748 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133344784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111402857 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096887973 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102937387 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160650517 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099599409 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078281408 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111980844 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104064538 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101414568 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170487184 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.203973322 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097517814 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075863851 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080154916 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1264697 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152046322 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079412922 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102477476 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117947101 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109658332 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127141726 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100668625 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098433387 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113219749 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148766079 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127851442 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089666286 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111480548 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127967602 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155066329 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104460041 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09479954 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169909278 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150437675 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161547804 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087947519 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130154861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112948525 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107230991 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137932072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082705269 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162383074 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08144982 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134896965 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102623519 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089159792 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128749133 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097881622 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087276218 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146740497 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116686715 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08175201 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076998017 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116696188 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118387432 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105129456 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07435608 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137590134 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071702754 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130025483 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166336692 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0798945 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102800986 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240396471 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079862763 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107804407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101980137 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089082314 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097465498 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172274781 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088048711 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148801009 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140004619 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112020065 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136618723 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09914435 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634786128 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077247028 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150001506 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115588019 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171169868 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096483145 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117024981 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107980835 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122210526 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144057224 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103828444 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175102477 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131142044 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115456578 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079479799 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102508262 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10164514 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087874147 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1038041 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112553141 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114902955 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092731195 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114414498 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12244601 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080817019 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.0943295 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154591716 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116182823 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143059984 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139123547 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084490051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116253882 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137009404 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078885609 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120559016 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149852564 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104809464 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096669045 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079247008 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246469078 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174029279 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074699947 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164014796 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119645568 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109147958 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112403053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114897488 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130621281 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106548177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120582162 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093102478 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10955039 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111459403 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081010179 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076463306 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103479924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111568327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096499287 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097575757 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096956039 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149737377 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070645192 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095225895 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101766809 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144505758 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172200092 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087804416 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082416091 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117343048 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111981384 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11182098 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119727281 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078048386 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081481077 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080992118 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076180172 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107158488 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111251592 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103216583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110200098 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162256915 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081857 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224426199 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094492352 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103864224 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069008163 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077894775 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094774605 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096613257 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107292995 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099121994 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167590347 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09358673 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088802731 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091109878 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072523309 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081472212 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125913724 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.257233825 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118896374 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096902627 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062324374 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108389093 seconds)
  done (took 58.42059668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108285286 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081155889 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096016599 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149331457 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120963927 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211000917 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155980674 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19909973 seconds)
  done (took 2.790427188 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067945157 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093775068 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099187633 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081891764 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066294397 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067355991 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223084033 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079288175 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065991796 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087689028 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079134793 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06843865 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.421070872 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065338402 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067052568 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062482892 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066665607 seconds)
  done (took 3.425183589 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364884096 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359198205 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370081638 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072374993 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.81004157 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088202476 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.077374913 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09574068 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071422036 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267660487 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702425238 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092032667 seconds)
  done (took 14.045055831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076143172 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069586053 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08267822 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083481332 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072132912 seconds)
  done (took 2.055950192 seconds)
done (took 103.068397529 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079820214 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389847645 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053101667 seconds)
  done (took 2.143505571 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081947106 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082992134 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083052591 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082083417 seconds)
  done (took 2.004860771 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073061019 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075504602 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083473606 seconds)
  done (took 1.899822042 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221222787 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137972563 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085576305 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081922094 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076900986 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077883573 seconds)
  done (took 1.914323442 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072662734 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074167704 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071801404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076080761 seconds)
  done (took 1.966815864 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076380927 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052312224 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054332373 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055141404 seconds)
  done (took 1.911344569 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086446707 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077873677 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077515661 seconds)
  done (took 1.915289722 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10809514 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084403515 seconds)
  done (took 1.865175796 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081371252 seconds)
  done (took 1.753865853 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097489868 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112551605 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127610284 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107963714 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13506022 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107661694 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084724742 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085559705 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075846725 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086463837 seconds)
  done (took 2.692345845 seconds)
done (took 22.26447771 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077608928 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366257491 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359969162 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090895911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667069318 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355638311 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.988628696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091420205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112426945 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066755215 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082957628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648541623 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980579446 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324105805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965733267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318882876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649274688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067727822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066979033 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067047589 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.97453817 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066758315 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067069005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067790548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648794673 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370561648 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067219366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318340485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066778693 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069198794 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354274121 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067632708 seconds)
  done (took 16.145560611 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071280177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116946544 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073198984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083214515 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069585247 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069138516 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070829916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068225066 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119079398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066910443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08361757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0669128 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071277292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067881431 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086476278 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067380789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068031416 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068136463 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067994781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067667175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086239091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067466481 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067614706 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06785582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067376862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078624097 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067669073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067466798 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067592984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069674319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070164761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068144992 seconds)
  done (took 4.057103252 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115447699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124549546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072928245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101995902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111826289 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069866929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142112058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091904683 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127458864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067659987 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084018119 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067636653 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100080267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068100985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086924327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068047099 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068593678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068394136 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067996064 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068103689 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08691495 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067386778 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067850357 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068245547 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068214027 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080462919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067967566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068268361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068077139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06951836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071107731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068373722 seconds)
  done (took 4.314834193 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073223459 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074425315 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081678163 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082762387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068809887 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071329888 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07247323 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068987385 seconds)
  done (took 2.283239402 seconds)
done (took 28.478728693 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077871802 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068833528 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071749321 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080301962 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072710883 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078129866 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067027503 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073836966 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071226082 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07229033 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074135454 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06730157 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070567397 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066583263 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07304281 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067239616 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078345747 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070853391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078870752 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078329824 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06920641 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072531626 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073881621 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078284658 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078399063 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078029074 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076593321 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071884792 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068584392 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069699643 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076112146 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.08334667 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068155499 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078753553 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067157318 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06737607 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070569081 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067367825 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078604673 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075881122 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069309074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075605632 seconds)
  done (took 4.743934403 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087811172 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090413049 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083889309 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061505847 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066064437 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06444887 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087254426 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059266423 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059237457 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087267759 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055394709 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058940949 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062172346 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053613266 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05877552 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056071528 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06090998 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055199278 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058995187 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058640302 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057718263 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053861892 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059456835 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0649793 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056351072 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061806564 seconds)
  done (took 3.378746365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073947719 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083016813 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087052562 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125755991 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104023912 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076802423 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076933711 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091289373 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084738888 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066373427 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07037235 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092852913 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087582161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073489978 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067801279 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083753603 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08156102 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068673973 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072754237 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089575846 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08339804 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083142909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092054689 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079929843 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066361508 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069230121 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070588047 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08058903 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071518717 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076115571 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070520838 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069993064 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068732915 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077716411 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070892763 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068572621 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089374966 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076218102 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076450196 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067254558 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069860733 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067806724 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088695007 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121579053 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066578203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073501759 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074489652 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076561266 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067075028 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085348925 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077445563 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066451416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069818756 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066021954 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066615725 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079560881 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068974334 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069029556 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.0755587 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070070804 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084676581 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071093357 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081963794 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066558342 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074403324 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067084321 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068063791 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06600494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091651817 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06838344 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106971547 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068182004 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067722954 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07590124 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074647657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073209329 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067134348 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081731764 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076828867 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070478963 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075358543 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070586814 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070134448 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086741097 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06894773 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068771944 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06756405 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07289493 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0701061 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068744497 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090427908 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066862185 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070280694 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082944796 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066737196 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068479681 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072881926 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071341856 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066483206 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077633761 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071281589 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067782941 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075989401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066660007 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069824355 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077667554 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07314551 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065886437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071290659 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072617977 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067573136 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068286846 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070169112 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068796806 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074850142 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073773217 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.0711716 seconds)
  done (took 10.532836525 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160625083 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151935603 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069917979 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143324697 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075741445 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078820058 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145767704 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093732846 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06768828 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068340651 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068067253 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109685701 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105175161 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114743917 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077996071 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067136947 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08222118 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112952702 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147552755 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142183112 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083260608 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07572295 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069171717 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06828192 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069873736 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078195699 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084962802 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076197826 seconds)
  done (took 4.417357671 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079918334 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096511332 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073304128 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088968992 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090177696 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067009656 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069528396 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069122629 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079678179 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078064887 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067384397 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073266682 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073860874 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071339555 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068331644 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074093747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074691166 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068540407 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070118504 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072573923 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076475417 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079878161 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071216302 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066650684 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073342659 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067039548 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064082493 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083553211 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067436602 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089290756 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065334671 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074118878 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080520423 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067998369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06736964 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067235937 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066830513 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066584563 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069130719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065606297 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065923789 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056910701 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066274063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079131021 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073000817 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056212157 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071774183 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072390719 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072234918 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064722369 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070284946 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069602056 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070454799 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074094196 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072140428 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072273725 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068631282 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064977597 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075367269 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06665533 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064229794 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065720609 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071264648 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065456564 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075215655 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071445484 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065548033 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066676352 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068840388 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072972026 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066795482 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069833526 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064646685 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069029176 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071213494 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068859257 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068046228 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065305221 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066484753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067055443 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055113764 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066909365 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053113944 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069624877 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065172877 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065493742 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066597852 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071290026 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079116944 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067992771 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072606892 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068021553 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065982318 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070146205 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059656078 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.0698318 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082090564 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082050606 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067199131 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064921161 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081218927 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071114095 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066215946 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055753174 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.0742854 seconds)
  done (took 9.119911273 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096258877 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087516784 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069292553 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083059811 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090366024 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085774949 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074447153 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075939989 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068897945 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081297755 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072894758 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075832052 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067648264 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076382253 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092222086 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076008825 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069364335 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07613763 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071486159 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099698096 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082673361 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081271577 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07442587 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067780462 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075218742 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079608335 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088834443 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079309553 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077658706 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074870179 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079674068 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088882452 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073831031 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071549555 seconds)
  done (took 4.424642469 seconds)
done (took 38.302783287 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.785210325 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.016655835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.772235659 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.179728082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.853477106 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.008806632 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.776980565 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766615197 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.899319292 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.803219572 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.03670584 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.818139879 seconds)
done (took 65.42394188 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.806843267 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914465887 seconds)
    (2/2) benchmarking "String"...
    done (took 2.042765096 seconds)
  done (took 5.667395515 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.057306738 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.300221443 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012352537 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.764729214 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.772060201 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.073517797 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.566883964 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.285023004 seconds)
  done (took 30.486674656 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.959457998 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.971357831 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.439456717 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.477069907 seconds)
  done (took 15.602720603 seconds)
done (took 63.408452578 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.800821232 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.788134521 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.795518212 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.751034063 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.826488535 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.791268089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.854091061 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.990053612 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.764450244 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.755185662 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.76779059 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.201914498 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.771385716 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.850425174 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766995484 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.773063155 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.771204385 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.201644858 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.923551644 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.776498861 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.781608196 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.787160714 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.774920495 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.777027004 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.778633972 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.765799109 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196236336 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.772333882 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.566086233 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.771485208 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.8104738 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.084907507 seconds)
  done (took 204.497485915 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.768339683 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.858023454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.900863117 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.812509679 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.339343677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.967549494 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.904964414 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.36381713 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.774992835 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.780433369 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.059851145 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.773458124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.071151283 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.770493729 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780686077 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.776385505 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.067795314 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.079123484 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.775217728 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.040580366 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.78740402 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.936878385 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.918708236 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.035847895 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.795967928 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.790524879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.796121461 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.777202187 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.965417996 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.056203485 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.793693449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.775321874 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.976901497 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.640970244 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.79239226 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.788355885 seconds)
  done (took 171.006045914 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.91743803 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.770266901 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.76854053 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769533104 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.775243037 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.7696862 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898410936 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895844054 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.225032592 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.106212662 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823542027 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.601957768 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.770103002 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836512951 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.783155183 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.770491939 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.784619002 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.796263436 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774032662 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770340071 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895613785 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.783305378 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.771092111 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.781117365 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.770560573 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775950409 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.13999763 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.770225009 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.775895221 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.014945189 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.770287082 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.771364129 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.674123842 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.172521702 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864264265 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.772294295 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.777527418 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.771546373 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.992948701 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.77238579 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.771533813 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.775559031 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.770305393 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.96070058 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.770732532 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897105134 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.771310171 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262316941 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.771755192 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771167385 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.885725333 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.460678786 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.775548929 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.770988201 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.775179743 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.772011245 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772074628 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.778321729 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.657605035 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.849245997 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.7740939 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.776199751 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779200602 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.77224941 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.926148869 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.776601094 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.263857974 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.831817186 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.884227897 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894605758 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.776369102 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840538753 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867847871 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.774247712 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.773522581 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.772401963 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.773362505 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.772180688 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.854505198 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.773384358 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.894845446 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.781198094 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.774463304 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.824507963 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.842771533 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.773478494 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.669295626 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.77867346 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.773301196 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.086799533 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841228212 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.773236953 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.774350014 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773831819 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895468073 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.775113791 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896201073 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.54482752 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.777907444 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.757570535 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.77973145 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.907475184 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.775486506 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.968289771 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.77897961 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.856381354 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.780045452 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.775648914 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.775091573 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.806120007 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.777021288 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.834302894 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.774523094 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.774044838 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.145499643 seconds)
  done (took 402.425935387 seconds)
done (took 781.614304066 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.44288082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.406879833 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.5264146 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.444822009 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.416345008 seconds)
  done (took 13.955983846 seconds)
done (took 15.675544334 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.859770786 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.867012871 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802538231 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.868936634 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.796077541 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.868547347 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.847183049 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.804535608 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.831847593 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.803900947 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.838361404 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.804054889 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789684279 seconds)
  done (took 25.501969355 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.012641662 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.00768081 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848590095 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.000596809 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823600744 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.014706775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.940837597 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926849327 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934285104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.794429918 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787082377 seconds)
  done (took 22.81121955 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.011302096 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.01866791 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.848975751 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.015184455 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821878477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015805121 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.938987054 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928840646 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.931857716 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.790850752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788670535 seconds)
  done (took 22.830552018 seconds)
done (took 72.865307633 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.78275325 seconds)
  done (took 3.502628838 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.805500367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.940306462 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.794187823 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.788589687 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.782599961 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.78467795 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.787695463 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.783903949 seconds)
  done (took 16.188367135 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.784398812 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.785084296 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.785118742 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.787193872 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.787997883 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.785224006 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.782207973 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.782526883 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781371685 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.780769318 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.784415615 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.78523876 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.782845538 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.782008175 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.783255129 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.784157595 seconds)
  done (took 30.265397502 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.779607437 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.778585524 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.781272156 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.779173714 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.779736331 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.781975626 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.775592993 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.773802746 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.774128457 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.773775312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.775768603 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.773303331 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.773459394 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.773204466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.77330864 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.775548257 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77398092 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.771922874 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.775935707 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.771603959 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.773482689 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.773675042 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.774250242 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.772038974 seconds)
  done (took 44.332900982 seconds)
done (took 96.008983598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.498743942 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.430326864 seconds)
  done (took 8.640355305 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.775394142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.774171159 seconds)
  done (took 5.303762729 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.774749282 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.775231439 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.773903431 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.775009496 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.774134175 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.775045239 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.775266386 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.775458549 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.776038661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.77526765 seconds)
  done (took 19.461825196 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.775618957 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.776257561 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.772160424 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.775169218 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.774757188 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.773090752 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.774919814 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.776065886 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.775074708 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772831158 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77563344 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.773387012 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.774492758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.773422681 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.7749712 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.773126651 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.773667444 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.7732768 seconds)
  done (took 33.651473771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.775479455 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.775428943 seconds)
  done (took 5.263801972 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.773556647 seconds)
    (2/7) benchmarking "second"...
    done (took 1.772679498 seconds)
    (3/7) benchmarking "month"...
    done (took 1.773554793 seconds)
    (4/7) benchmarking "year"...
    done (took 1.773290958 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774066269 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.77427623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.7735578 seconds)
  done (took 14.128133609 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77699036 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.952643838 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.026437929 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.466758337 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.778581847 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.77988454 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.706105958 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.781084405 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.783092051 seconds)
  done (took 19.764387027 seconds)
done (took 107.925275575 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.622888734 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.775336411 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.164103472 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.832538003 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.825599915 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.070846893 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.784563723 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.998120404 seconds)
done (took 42.78812582 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.839224748 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.314300993 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.338798603 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.665997973 seconds)
  done (took 13.033286941 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.75839003 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.292167351 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.811591821 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370677195 seconds)
  done (took 19.991973852 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.139560852 seconds)
    (2/2) benchmarking "read"...
    done (took 2.126857715 seconds)
  done (took 5.981771354 seconds)
done (took 47.56213129 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.770490346 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.76592581 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.770310566 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.76684766 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77034215 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.766714359 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.769134313 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.766711557 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.768294243 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.772662731 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.769889199 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.771273002 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.770197454 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771291789 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768168696 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766465932 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771397176 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.766118415 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76965057 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.769697291 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76828524 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769551998 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769580075 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.768143348 seconds)
  done (took 44.163691298 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.769070831 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.76700781 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771863395 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.77407072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770139694 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.770106305 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772499872 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.768555768 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.771247965 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772084501 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769543349 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.770083138 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.77087507 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.76862047 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771034048 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771138388 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772403336 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770628269 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772219412 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770803434 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.769713204 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770047811 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.769592615 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.771362032 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.769297248 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769304216 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.769838176 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.770344898 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771843122 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.771211173 seconds)
  done (took 54.825344845 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.774387391 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782249053 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773921658 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.77380253 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.771389631 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.771807145 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773003606 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.772617467 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.770584937 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.774926211 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.770319912 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.772529729 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.770850283 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.771919964 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.777780925 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.77124785 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.772613822 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.77282956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.772443662 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.772592461 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.771598883 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.772080565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.772153803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.770456872 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.770933161 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77004933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.772590733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.771723944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.772049957 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.77005184 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.769679355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.771007648 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.768529843 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.768494113 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.768705292 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.768121803 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.774886586 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.779578235 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.767836396 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.767473182 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.768366563 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.768384108 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.770253713 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.769354963 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.768009568 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.768600377 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.771650979 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.767475163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.771765851 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.767971758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.768197998 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.772381882 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.768903599 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.768183227 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.770296208 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.768087043 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.766876569 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.767999967 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.769294401 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.76935958 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.767423598 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.767812905 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.766825012 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.768662568 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.768865783 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.768136919 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.764161897 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.765109392 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.763665379 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.764539862 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.763787224 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.766600884 seconds)
  done (took 129.168437907 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.763194334 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762916807 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762518354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761721768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758747842 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.763155165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760898002 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763896964 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761226969 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.766423861 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762882174 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760475336 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760876898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763782525 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761497761 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.760322415 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.762445481 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760021744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.762491109 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761621169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762084169 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.758946782 seconds)
  done (took 40.462944155 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.761033308 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76145586 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.760263944 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.762078689 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759027487 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762304801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.762937932 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761979638 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76307995 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758718571 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759124803 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760701613 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759266652 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760000014 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759814624 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.762068529 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.761609659 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758143874 seconds)
  done (took 33.391858274 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.758957241 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.761602268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.761562678 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.758429375 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.759211745 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762085395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758265269 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.762344817 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.761514892 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.760163765 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.763337923 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.763139154 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.761574292 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758945526 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761144598 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.759777104 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.760783985 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759395192 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762683744 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759050037 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75979933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764568414 seconds)
  done (took 40.437794239 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764098158 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.765606996 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.762250116 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760987474 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.761759703 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.762845633 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.764533708 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.763652444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.764843537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.762189989 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760706316 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.763997917 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.762969381 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760695437 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.763304102 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760575897 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.766182052 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.763655741 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770919428 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.760699046 seconds)
  done (took 36.966673129 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763375429 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.76529723 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764758988 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765975062 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763596929 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76780369 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766841263 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.764146299 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764298207 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76475743 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.764902517 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765175976 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764257922 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.764945519 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.765149639 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.764179141 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.764073946 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764714308 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.764674169 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.764946847 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.766187214 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.764349988 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.764246977 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.764245473 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.765024811 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764976512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.764491773 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.765903236 seconds)
  done (took 51.119895541 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763457851 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.764871391 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.762651854 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.761080995 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.761041802 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.763210855 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.763722408 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.76055542 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76620536 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763119091 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.762700884 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.76663191 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.765522318 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.763698281 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763260314 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.766351699 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764919268 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.761282507 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761253753 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761470173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.763485812 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763353238 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.764405432 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.760851092 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760456873 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.764788727 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761915657 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761222181 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.763005442 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.761104924 seconds)
  done (took 54.593835582 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.781731104 seconds)
    (2/2) benchmarking "in"...
    done (took 1.782457117 seconds)
  done (took 5.265824141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.760252826 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763564085 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.765087386 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76090348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.761049122 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.765201388 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.765067891 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761574495 seconds)
  done (took 15.803886946 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.764914722 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.765422113 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.763572505 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.765676812 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.765896577 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.767330233 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770376389 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.767042505 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.768196295 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.764385154 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.770789404 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.772127887 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.768244338 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.767189229 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766598853 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768175837 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.76567215 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.76488797 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.765924167 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.764004204 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763203227 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765951749 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767735902 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.762120982 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.767685177 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.776010011 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.773522914 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.767957061 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766878405 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.770590782 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.768114114 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.763424792 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.764749373 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.765310357 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.764362722 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.765770083 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.774093007 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.766963292 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.773690055 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.76820886 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.764292135 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.761372836 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.767402845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.772166231 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.768312461 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.766446238 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.763087979 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.762020326 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.766244104 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.766828682 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.768032058 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765591536 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.761174764 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.773814127 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.768769726 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.772932541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.764695015 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.769082738 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.772729875 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.775020339 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.780470555 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.773261696 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.767663273 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.76575527 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772305872 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.786520716 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.775595243 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.764398259 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.763261854 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.7648613 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.775892251 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782663642 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.777942293 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.764864074 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.764681609 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.762878242 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.768021254 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.765807447 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775972325 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.773004079 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.767118273 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.766134224 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.776017486 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786658338 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.765851943 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.767174932 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.76529216 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.767272698 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.765384566 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.777564741 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.767508322 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.765589067 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.767495105 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.766896818 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.77119531 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.767830684 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.76759952 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.770056385 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.763965223 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.768244309 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767219989 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.771278431 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.7754257 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.768262989 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.765925867 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.774199481 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.76994372 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767563549 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.77825781 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.768591959 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.768628407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.768762286 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.776186281 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.766290624 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.771561839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.775329631 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.768699769 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.768588022 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.769294622 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.768912749 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778696487 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.794216687 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.76913406 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.768976192 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.772923729 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.777195438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.767585075 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.774206564 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.769586369 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.766931738 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.766949564 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.772304614 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.770400568 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.769559326 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770183104 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.772810832 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.766606042 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.770971414 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.767429768 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.770381639 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.773171724 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.770819046 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.773085279 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.775305935 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.77074488 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.771085482 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.7805662 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.773313555 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.771224583 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.772466071 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.76648698 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.767586962 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.770965621 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.768864823 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.771832864 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770394133 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.769495324 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.772641716 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.771038585 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.771660179 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.769427253 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.771442944 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.773209786 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.768464112 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.774521722 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.770271343 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.765510365 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.76913599 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.771772096 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.770060873 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.771363265 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.768909595 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.773756093 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.776918232 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.771318212 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.771993984 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.77463639 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.772256973 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.769803373 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.769722123 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.772093912 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.778273265 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.771060446 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.778938824 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.773526031 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.771613162 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.768683485 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.770975119 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.771455068 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.769846265 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.77213683 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.777559333 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.786152832 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784231254 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.771514367 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.772780812 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.771840862 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.775317069 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.776190317 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.7736266 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.771812677 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771317861 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.770961853 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.772763568 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.775937374 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.772098029 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.772629032 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.771880039 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.772078254 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.771499465 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.770358867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.776149321 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.774015434 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.770140076 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.773271406 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.771042147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.772781025 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.768470042 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.771618368 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.772639116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.771317526 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.771185166 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.783954656 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.772077543 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.77566063 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779151857 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.775284889 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.774166103 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.772607146 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775782227 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.778339769 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780319388 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.777823919 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.774368916 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.780315815 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.776434972 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.773454359 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.776861307 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.775070976 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.771166796 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.775695348 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.778190578 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.772238797 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.774811383 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.772479878 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.775305275 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.773955551 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.786018543 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.772407524 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.775350296 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.772087481 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.778913091 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.771768337 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.778720769 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.778096753 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.777296001 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780295824 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.777054452 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.775370396 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780827831 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.776515806 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.776286942 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.776078018 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.778194268 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.780903463 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.781008239 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.779499246 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.780824967 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.776690369 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.777166831 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.778785843 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.77520217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.77422173 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789791439 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.784956039 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.784876283 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.778739378 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.775793635 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.783129941 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.77973791 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.779617759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.778207566 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.777369697 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.778364833 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.7764034 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.774574557 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.778708228 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.776197612 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777031181 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.777424238 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.777372127 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.77619389 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.77606913 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.776174525 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.776040844 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.775571279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.778823682 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.776322979 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.784281716 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.779904715 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.780246726 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.777504123 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785469699 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780047582 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.782827788 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.779263685 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.777920659 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.779405977 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.78120948 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.780215812 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.780953871 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.784209134 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.781176256 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.787667485 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.779205186 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788164316 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.778906473 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.780833911 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.784302002 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.776931126 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.77837813 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.778531871 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.77575928 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786428435 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.779933899 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.778750919 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.782356582 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777116431 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.777345287 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.777119782 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.776982183 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777789084 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.777977472 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788089719 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.781407566 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.781098473 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781048166 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.778932913 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.778397905 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.776802803 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.77710008 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.785294524 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.780174375 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.781087852 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.780900312 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.781535012 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.778533648 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.778701294 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.778303426 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.776800943 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.778490849 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788210398 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.782721021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.782378105 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.780476262 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.792036201 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782246018 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788321513 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.783379154 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.782173536 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.781955252 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.779148611 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.783751386 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.781446566 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.78231357 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.780875284 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.779840832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.782142854 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.780130661 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.783658584 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.781823086 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.781241879 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.780480118 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788845792 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.800555857 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.781255443 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783622332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.779385959 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.782855419 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.783188201 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.782002709 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.779544461 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.784049902 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788446426 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.785959695 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.781969845 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.781410187 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78510404 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784099831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.781868604 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.781154369 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.781955043 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.780703231 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.787766029 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.781375161 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790031193 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.783370141 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.784258783 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787177413 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.785343292 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.791750064 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.783742628 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.786035281 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.783846838 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.781234177 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.786363401 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.786558357 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.782877467 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784921095 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.783619797 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.783175504 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.788619553 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.78985029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.786244884 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.784968983 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.784129264 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.784025087 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.784578239 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783207961 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.782251839 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.784371498 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.784342693 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.783592143 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.789136558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.782749916 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.782510978 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.786394168 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786639999 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787252611 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.790085242 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.784206721 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.781694693 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.783524278 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.783659876 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.78423607 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.78463009 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.796196657 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788984701 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.792457457 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.791723074 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.7863291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.786245684 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.787597866 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.792387952 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.785589912 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.787824311 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.786896051 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.788493567 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.787351325 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.788117641 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784495859 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.793957456 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.787177449 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.784711484 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.794526183 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.788877818 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787138823 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.784872194 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.790115789 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.786106079 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.782486414 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.787204743 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.785954808 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.794539221 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.790905685 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786215513 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790282537 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.786839323 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.784553134 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.789650126 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786145287 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.789556568 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.787113313 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.788653859 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788127197 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.787597187 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.783386434 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.788359689 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.787718889 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.787747608 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.793551292 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.78324082 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.790640455 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.790898943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.787963812 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.787407176 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.786187851 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.783051848 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.784165688 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.789602269 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.786288954 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.787456893 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.789447062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.790400648 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.789493485 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.784914931 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787018464 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.789470867 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.795138501 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.791557421 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.78425782 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.786954357 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.790722709 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.793348322 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.789060717 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.788301625 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.790634905 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.791003305 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.786518423 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789711066 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.787869925 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.790920876 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80536222 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.789440588 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788152108 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.790885444 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795534788 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.789006201 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.785403313 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.787068358 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.792635874 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.792536703 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.79576218 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.790110607 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796355504 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791401247 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.789597975 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.789862113 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.791000878 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.796161045 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.794124312 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790008883 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.78904673 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.793411699 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.804603391 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791280014 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799174666 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81851678 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.792739668 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.793470563 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.792041899 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787500553 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.788171804 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.792787186 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.792089618 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.788516325 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789231744 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.789510568 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.79064253 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79510764 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.793791658 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.791200418 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.789002274 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.792038907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.793397261 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.786373583 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.792642796 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.789582346 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.789461862 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.789122872 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.790527877 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.793657022 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806614503 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.803601932 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.79153312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.790745804 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.786603669 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.798557481 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.795221785 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799287018 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.797332844 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.792612839 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.790282169 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.792527423 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79285179 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.787875864 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.795080469 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.79562467 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.790588408 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.788327077 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.806456393 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800664225 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.797201416 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.795901756 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791804457 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.79127742 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.795168333 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.792659487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79454079 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.795411752 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.793644647 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793917759 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.790986494 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.790385172 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.796839775 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.797558887 seconds)
  done (took 1062.403484295 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789501902 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787309736 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.790152368 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.79077942 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788581932 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787545282 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7886451 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.790599583 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.788954768 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.792152379 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.791237186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.790428616 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.790965233 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.790618514 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790081619 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.790965151 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787816314 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79041455 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.790244576 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.790672862 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.790869189 seconds)
  done (took 39.317696353 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.791409266 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.791332106 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789974919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.795145844 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789681256 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.791650216 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.789022976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794918222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.791904162 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792235419 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.795359053 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793295895 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.791414727 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.79243102 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793197227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794621675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795374288 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792598191 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.795200625 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79086644 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79598294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.790298369 seconds)
  done (took 41.167456018 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.795655101 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.793815832 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.795620359 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.791782407 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.793133842 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.789389006 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.796415045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.794178097 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.794574886 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.795927359 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.79356587 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.795215127 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.800858677 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.798478007 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.798102263 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.792981661 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.937895752 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.796693532 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.796253326 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.797300523 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.789848039 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.803245839 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.794598104 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.792591832 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.793503403 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.794875612 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.794977149 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.795077463 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.797434468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.798051562 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.798937142 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.795012474 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.797106561 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.799588278 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.798386141 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.798149095 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.79797003 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.795843596 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.79245828 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.793854509 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.807604665 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.81323335 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.799230894 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.80483201 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.797217439 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.795900875 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.801237401 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.803552029 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.793589027 seconds)
  done (took 89.91712206 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.796451923 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.798281997 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.793259365 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.79796928 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.796915217 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.797349198 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.797997779 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.797583456 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.795616721 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.794263586 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.797418343 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.79146809 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.793232074 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.795973076 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.797983258 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.791181584 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793743576 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.791125349 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.791759603 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.793932478 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.793224265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.795236856 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.794813751 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.791512697 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.794926865 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.794042126 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791945497 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.795456588 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.79323917 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.792639413 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.796161368 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.795821462 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.795588522 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.792827742 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.793630259 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.796923664 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.797246092 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.792222936 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.795320719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.792348211 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.795980261 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.798536613 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.798930907 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.795639326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.79433868 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.792804072 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.792145324 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.793920837 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.789754741 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.796033256 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.795809823 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.792487379 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.796068524 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.795053449 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.797037871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.797257846 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.795593497 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.794843408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.797498909 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.796707827 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.795720865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797646104 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.79598606 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.79871634 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.80026943 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.796183036 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.795141174 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.797842846 seconds)
  done (took 123.806777554 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797745096 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.798688681 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799693898 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798896062 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799038923 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.797784756 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.799334402 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.798609925 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.79887733 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.799013126 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79801423 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.801840288 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.803156895 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.799679474 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.802422988 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801427678 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.801299743 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801972119 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799183297 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798977638 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.801788827 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.801313302 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80121285 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.802788487 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801152454 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.798400391 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801856344 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.800518777 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802806957 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.801805313 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803629803 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.802818652 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.800956965 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.803300064 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.802648574 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.80171758 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.801717713 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801099981 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.802677901 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.802117595 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802180643 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802801893 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801659972 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.801971947 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804318684 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.804002863 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.804122714 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.802009449 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.802247912 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.803362781 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.802356904 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805882755 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802802456 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.80269191 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.804175062 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.801698407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804882055 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.803110427 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80342096 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.803497118 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801890133 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.801862621 seconds)
  done (took 113.430550428 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800500565 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80283479 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.800773379 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.80234982 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802578717 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79793428 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.803791626 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.802571622 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.803019759 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.804173582 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804663889 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801072054 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801450281 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.803796355 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.801701936 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802076393 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800621164 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800555141 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804639102 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801360748 seconds)
  done (took 37.780524434 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.799558649 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804604472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.801778032 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.802480631 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.803776832 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802386606 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.805367362 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806061032 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802550241 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804298424 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805547617 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.805815126 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802816356 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.802973263 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.806687193 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.802547944 seconds)
  done (took 30.59678852 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.799746253 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.807223887 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.805246515 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.806387198 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.801642266 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.802339538 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.805540603 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.801802089 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.80458153 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.806018888 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.80443534 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.805620162 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.805045495 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.806845504 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.800488278 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.807126437 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.803599994 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.802356252 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.804615088 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.809554397 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.803354373 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.804722628 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.808216203 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.805992836 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.803123312 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80493946 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.805335281 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.802290622 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.804543243 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.806602869 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.802273056 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.805288197 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.804171155 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.805908255 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.80775296 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.805649053 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.807966571 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.808420271 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.807434122 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.807362232 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.806246666 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.803909016 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.807751178 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.80721927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.802618196 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.806959714 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.805347893 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.805486352 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.803510079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.805364544 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.808331119 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.809932213 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.806609849 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.807417598 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.805707485 seconds)
  done (took 101.034584095 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806715142 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.80777042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.805714603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.809337706 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.810516754 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.807841368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.807645276 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.806591507 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805338957 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810472856 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806330256 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.810102181 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.807393313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808436436 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.807861605 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808024839 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805579654 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808660928 seconds)
  done (took 34.284612651 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.806372626 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806418788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.81044349 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.806498805 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.805657668 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809158853 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807006504 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.810132243 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809597408 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.806627669 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808346644 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.810274685 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.810129515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.812413993 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.804901289 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810289256 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.810997329 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810932001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.808842516 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806716976 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.809564397 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.810876924 seconds)
  done (took 41.5358522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.808211588 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.809539123 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.826150848 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.854477846 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.838114464 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.808037532 seconds)
  done (took 12.687872623 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805891311 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813010137 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.808682362 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812860783 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808834859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807562503 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807434332 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808138738 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80974988 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81060835 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807526508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812953722 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807950263 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810216729 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808666825 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810159105 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80729694 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808108598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809628967 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810328495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806706937 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810649699 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808159233 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808627885 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807141244 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808367002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810917616 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810730546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810452259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811236573 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811809713 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807681444 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814402173 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809236746 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814357041 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811511218 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810641965 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811865257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81183196 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807573667 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811745297 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811365286 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811051043 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815219697 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80833412 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807515884 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809880779 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80885327 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813636401 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814619787 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809990745 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811497386 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812732644 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814429109 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814140635 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810569743 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808914864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813967159 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808579564 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809748153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81194346 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810090959 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811900356 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813871428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810389186 seconds)
  done (took 121.234499795 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810404264 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809632386 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809482547 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812745807 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809918109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81291306 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81209784 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811385057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809684457 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810186978 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817250317 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809503916 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810457905 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810845461 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810521134 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810854059 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811755643 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811020559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812297276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815253558 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813243628 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808624637 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809592148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812619047 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80931649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814853388 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813024117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811877674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812613778 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812751338 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811559781 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811748863 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812600754 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.809570312 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811201837 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813712739 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814151003 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812978545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814805518 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815550266 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813424637 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815778866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814650735 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815061131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812562149 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815644062 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814933181 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81451028 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814407966 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813263126 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81446013 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813583817 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814200977 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813038713 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813728583 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813862947 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811409272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81505199 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812701374 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817402216 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816599029 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813250615 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816879356 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813618541 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811959314 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812906184 seconds)
  done (took 121.392841755 seconds)
done (took 2478.498676303 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.871989637 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.84479635 seconds)
  done (took 15.467646041 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.9819533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.934780022 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.817805713 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.860775807 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.817292004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.836856921 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.81939127 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.817364018 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.818208105 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.817338601 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.819004858 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.005738236 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.830800248 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.817337932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.817721995 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.911321352 seconds)
  done (took 51.483724546 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.820602118 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.82330206 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.831414543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.823645014 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.821368426 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.833104119 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.853243643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.82419335 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.854098899 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.832473396 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.888474608 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.828844893 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.820154379 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.869702301 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.834080649 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.835458283 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.908789801 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892317814 seconds)
  done (took 34.952313352 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.896759383 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.822539064 seconds)
  done (took 10.480947475 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.829838522 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.819984464 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.828211863 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.824798745 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.829057504 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.857186556 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846971816 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.842814638 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.833521723 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.822190476 seconds)
  done (took 70.093787679 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.830660766 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.825765573 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.826282714 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.823311198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.817704119 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.819692581 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.822504908 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.818517731 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.501666607 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.857291478 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.831403217 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.830421512 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.823119795 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.825549078 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.820960468 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.847698588 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.961667834 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.82066203 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.82088719 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.829839117 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.825252015 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.889918162 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.840232185 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.824391163 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.854446245 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.498675167 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.831279142 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.830967022 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.9442503 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.822137079 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.825022263 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.826042792 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.826887283 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.215966333 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.115709748 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.822542513 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.835338724 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.832719739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.821745446 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.956647029 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.826402517 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.831161585 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.820855315 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.109005166 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.905809121 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.866369388 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.148143891 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.82830448 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.827584041 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.856784754 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.827747689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.827703489 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.840755065 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.345034795 seconds)
  done (took 130.221596849 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.818323193 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.397847527 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985218897 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822095398 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104147139 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063294454 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.822601318 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.868692834 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822790401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071245631 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998228127 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939513139 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.82202972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.820177879 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.819079924 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.819455711 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.974511417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890117926 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.822678068 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.820579684 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856637933 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086272741 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94864245 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.823336892 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.846108312 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049646413 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.946091561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.937140761 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.298769083 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.819078352 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890078609 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822735684 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.819954146 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.820816192 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.986972832 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92874562 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.918757166 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.824447349 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.820436206 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823885474 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.483160228 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045092714 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.931664598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.958219559 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.07017129 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049433689 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.472902776 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.820741169 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.465715031 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.019378014 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.030962214 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.074447786 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.949333917 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824514502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.074495625 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82105839 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821582119 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.085083249 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05090035 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.9371813 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825190031 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822374194 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822018457 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138840166 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.825498117 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.932431322 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.824602098 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.827075752 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.934737688 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939553712 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054668463 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065534004 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853729333 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.719916823 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.341231689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.106516555 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.893008781 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08579894 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82637447 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.822739404 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916653596 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.575788242 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998123248 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.143233713 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.087286423 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.863894059 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.458711585 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.82172435 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.068833831 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.073611109 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05050413 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064038584 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.989093022 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.134788831 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.82359802 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.826987544 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.025637329 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956045683 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82392083 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.187742728 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070765124 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.55978882 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.852378573 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131106148 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96085281 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.823721198 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.45322036 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.821910836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026607458 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86839888 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.823608143 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824702136 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.069356576 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.696477293 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.827249044 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.596981405 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.88835598 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.828930669 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088780389 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.825009337 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063799229 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825073263 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.13515763 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.352846824 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.867988832 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.015728386 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.064980525 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.622265711 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093640889 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.136959532 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948025977 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077809496 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.652622108 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.823261325 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105535072 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82771689 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.826391034 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.993897024 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.825792854 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975615787 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.8259491 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090861306 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.851562095 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.995479921 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82409315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.099852951 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.867416424 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87602296 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.82524719 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940644284 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824040229 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.92596663 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008221668 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826975759 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821782304 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.3936821 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.822374379 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975284946 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.123007075 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846722602 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894702814 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.352638055 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.824377048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920106258 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.849128445 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.428547054 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.824067675 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.996460987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.823268197 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804329005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.824838383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.133782295 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.044741791 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.829570736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.821195363 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.620227052 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.530809156 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824375252 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.004649981 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.125539101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.468852353 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047858624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825610331 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954576749 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.822522185 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.899423511 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.177298577 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.821794686 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.825743235 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.824369386 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.82438715 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.827408789 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052459433 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.852657654 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.521446999 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963752955 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069593163 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.134725452 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.087532783 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869635251 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827168109 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089056432 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.823918658 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.888265631 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.825840086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.851334755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073541348 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825018549 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.052847429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.110363825 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.870213866 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.874657505 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.825468818 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826018809 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.821775509 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.969188901 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923411474 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827623691 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.827379424 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.943880595 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948989069 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011693889 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.423730643 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.00326786 seconds)
  done (took 893.935132434 seconds)
done (took 1208.387737428 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.825939467 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829518928 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.81355394 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.82723534 seconds)
  done (took 29.059993208 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.833339377 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.831481315 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.833963464 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.832020889 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.835263527 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.832774908 seconds)
  done (took 12.764188341 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.878739893 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.829145673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.827609785 seconds)
  done (took 21.301370537 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.899479016 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.2328592 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.936783004 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.264906068 seconds)
  done (took 10.098868905 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.833085461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.835056497 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.834500883 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.835082082 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.834722045 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.836082956 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.831643295 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.834437478 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.839972217 seconds)
  done (took 18.27859003 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.96242574 seconds)
done (took 97.229344752 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.427813099 seconds)
    (2/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.907702505 seconds)
    (3/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.348123612 seconds)
    (4/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.117721545 seconds)
    (5/309) benchmarking ("sort", Int8, false)...
    done (took 4.787891416 seconds)
    (6/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.3469225 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.964469914 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.714128821 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.983696903 seconds)
    (10/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.516083245 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.862879914 seconds)
    (12/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.409826291 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.849841242 seconds)
    (14/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.906091091 seconds)
    (15/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.090918235 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.718658752 seconds)
    (17/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.763589681 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.821517112 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.851335922 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.256088651 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.079166305 seconds)
    (22/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.810769901 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.039225268 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.007898122 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.062237609 seconds)
    (26/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.416095387 seconds)
    (27/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.093074051 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.331446008 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.920797476 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14400211 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.826240295 seconds)
    (32/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.851342411 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.851570344 seconds)
    (34/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.812044649 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.526557617 seconds)
    (36/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.113913137 seconds)
    (37/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.828925846 seconds)
    (38/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.242151368 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.642607773 seconds)
    (40/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.074481979 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.937537606 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.162974748 seconds)
    (43/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.826879247 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.296374543 seconds)
    (45/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.021231479 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.104191272 seconds)
    (47/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.911690391 seconds)
    (48/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.918120903 seconds)
    (49/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.883243979 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.915021086 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.92795338 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.608920103 seconds)
    (53/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.958208351 seconds)
    (54/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.917273535 seconds)
    (55/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.11570828 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.480480772 seconds)
    (57/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.790426022 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.162840378 seconds)
    (59/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.971378277 seconds)
    (60/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.684693783 seconds)
    (61/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.123784477 seconds)
    (62/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.820344037 seconds)
    (63/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.10241906 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.973186014 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.850012037 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.485831058 seconds)
    (67/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.938547562 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.205714121 seconds)
    (69/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.966397125 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.827668169 seconds)
    (71/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.817131245 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.912401745 seconds)
    (73/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.70738171 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.125718713 seconds)
    (75/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.913091965 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.539664634 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.125588708 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.205467288 seconds)
    (79/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.387060001 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.490923404 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.904118275 seconds)
    (82/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.195220133 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.15393835 seconds)
    (84/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.933406087 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.812069971 seconds)
    (86/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.35267619 seconds)
    (87/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.177229857 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.937394821 seconds)
    (89/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.98418183 seconds)
    (90/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.011694881 seconds)
    (91/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.970893683 seconds)
    (92/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.81577131 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.921265282 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.074167544 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.903841134 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.086035858 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.430665014 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.821005711 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.709758169 seconds)
    (100/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.831308753 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.847678106 seconds)
    (102/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.907628185 seconds)
    (103/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.927159802 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.051611876 seconds)
    (105/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.855164326 seconds)
    (106/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.960979473 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.312036627 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.189536666 seconds)
    (109/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.83008967 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.852904031 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.855026865 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.855201633 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.830473292 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.833189152 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.02326355 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.927794124 seconds)
    (117/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.956101328 seconds)
    (118/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.044804398 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.025800364 seconds)
    (120/309) benchmarking ("sort", Float64, false)...
    done (took 5.653585305 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.791670291 seconds)
    (122/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.331501682 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.902759097 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.916320441 seconds)
    (125/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.940097397 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.277622103 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.85274928 seconds)
    (128/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.816183155 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.760281738 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.837205753 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.19828029 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.044996877 seconds)
    (133/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.086075484 seconds)
    (134/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.821893277 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.203675624 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.893672877 seconds)
    (137/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.817233661 seconds)
    (138/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.86012206 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.81819575 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.828213824 seconds)
    (141/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.869970799 seconds)
    (142/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.888123549 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.939226529 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.102377757 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.089295688 seconds)
    (146/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.915070213 seconds)
    (147/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.856889908 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.020105164 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.936620906 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.070405719 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.856226705 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.12957704 seconds)
    (153/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.900827669 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.906711667 seconds)
    (155/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.858254011 seconds)
    (156/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.83350991 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.856314033 seconds)
    (158/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054651881 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.835275548 seconds)
    (160/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.853028053 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.835653406 seconds)
    (162/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.855604486 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.882114763 seconds)
    (164/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.96703975 seconds)
    (165/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.185983575 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.832195295 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.211409122 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.831736438 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.836778994 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.104350764 seconds)
    (171/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.030558385 seconds)
    (172/309) benchmarking ("sort", BigInt, false)...
    done (took 6.83530464 seconds)
    (173/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.860125895 seconds)
    (174/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.102959773 seconds)
    (175/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.835903392 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.090959414 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.995776242 seconds)
    (178/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.822586103 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.358287291 seconds)
    (180/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.901295584 seconds)
    (181/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100383296 seconds)
    (182/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.842115846 seconds)
    (183/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.347154871 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.0562359 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.925246627 seconds)
    (186/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155528821 seconds)
    (187/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.966100033 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.82472407 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.870933062 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.975364793 seconds)
    (191/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003908227 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 5.606446446 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.171240764 seconds)
    (194/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.196554543 seconds)
    (195/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.224975719 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.878491472 seconds)
    (197/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.044346461 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.137962219 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.222439859 seconds)
    (200/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.858038679 seconds)
    (201/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.986083434 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.822600252 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 4.631762909 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.835139039 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886657259 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.219847787 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.891273137 seconds)
    (208/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.644292045 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.739669449 seconds)
    (210/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.084572951 seconds)
    (211/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.348667854 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.118739629 seconds)
    (213/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.975071716 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.885691815 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.844151051 seconds)
    (216/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.008833969 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.836528255 seconds)
    (218/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.55799646 seconds)
    (219/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.056921347 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.839889922 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.462653656 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.521374519 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.047676851 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.918839175 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.961998263 seconds)
    (226/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.645549628 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.00937297 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.731177843 seconds)
    (229/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.931965125 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.956000165 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.508214058 seconds)
    (232/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.824413231 seconds)
    (233/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.030547901 seconds)
    (234/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.898322733 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.94357625 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.911183518 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.876089494 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.822533476 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.979933857 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.942172342 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.174042202 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.715423249 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.741149912 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.837528187 seconds)
    (245/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.117648306 seconds)
    (246/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.506802603 seconds)
    (247/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.851202355 seconds)
    (248/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.196177181 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.838750116 seconds)
    (250/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.341042081 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.99102208 seconds)
    (252/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.08119342 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.921227571 seconds)
    (254/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.194474681 seconds)
    (255/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.836577022 seconds)
    (256/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.866287072 seconds)
    (257/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.854008087 seconds)
    (258/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.182550264 seconds)
    (259/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.174018102 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.936582437 seconds)
    (261/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.840677619 seconds)
    (262/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.944385488 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.135386204 seconds)
    (264/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.670034989 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.131085521 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.864794576 seconds)
    (267/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.923243436 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.225377137 seconds)
    (269/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.825842816 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.047716935 seconds)
    (271/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.970259713 seconds)
    (272/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.201214125 seconds)
    (273/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.959097704 seconds)
    (274/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.233357469 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.073671682 seconds)
    (276/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.073159431 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.011875062 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.087760074 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.430664808 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.835875982 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163749302 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.123884559 seconds)
    (283/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.387654851 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.018805296 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.92137627 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.232129921 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.984516578 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.884544289 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.839677125 seconds)
    (290/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.864133941 seconds)
    (291/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.776491393 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.036839397 seconds)
    (293/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.00251789 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.059474805 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.204055501 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.023002919 seconds)
    (297/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.903153043 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.082665527 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.969004591 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.884107275 seconds)
    (301/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.173795816 seconds)
    (302/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.760861009 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.830136045 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.170031659 seconds)
    (305/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.867111939 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.867052436 seconds)
    (307/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.842957637 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.872988249 seconds)
    (309/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.425338112 seconds)
  done (took 1009.705210279 seconds)
done (took 1011.490038634 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.876607293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869264571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.854243345 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.875682164 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.965098448 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.89233657 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.864555944 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.855774098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.900894201 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.902589031 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.853541762 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.885792945 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.856345273 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.853319559 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.853056565 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868012759 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.159458521 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.873433454 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.87153454 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.862189908 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.87137552 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.853899383 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.902517075 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.886180904 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.857641561 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.85689502 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.858106326 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.874404263 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.966198181 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.857377116 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.857168001 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.866055073 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15778738 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.8701942 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.850057025 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.874503522 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.866356093 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.864342098 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.857433606 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.887924671 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.286673229 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.856575687 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.858855439 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.856183684 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.85694885 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.861422858 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.857183421 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.862388591 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868954612 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.869475296 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.283092563 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.873201984 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.859820884 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.8560344 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.865765884 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.856931332 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.859072012 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.872148894 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.876500834 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871194956 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.148063989 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.879890016 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.857829566 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.874912604 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.863725989 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.320420184 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.853274385 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.861039153 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.28673065 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.863036907 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.320822407 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.866526809 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.856833623 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.871136998 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.888350914 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.158157735 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.869355597 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.855828939 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.864406774 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.856436935 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.866590451 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870560956 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.862230449 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.85797068 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.871449993 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.890450985 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.868023994 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.859956968 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.866616432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.877731466 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.865482157 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.869447519 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.860244392 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.854802578 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.867899284 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.861830158 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.862371756 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.862467277 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.863103906 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.869964836 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.288165212 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875726272 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.854484222 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.854635248 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.858864182 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.872367532 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.28707281 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.860751077 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.879466005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.906157139 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.860667694 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.150523012 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.880347419 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874925218 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.867414276 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.860904518 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.85360364 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.15187563 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.304841408 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.874879137 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.861247962 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.856950279 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876141594 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.862327576 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.855636437 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164099015 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.878304506 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.874797111 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.980976551 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.869624939 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.89220922 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.859063094 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.8631369 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.888303207 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.877228988 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.893038955 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.864067656 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875840388 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.876459463 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.856093279 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.870528196 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.87230196 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.861678173 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.864209126 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.853682999 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.889058936 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.87338576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.873583289 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.881229433 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.981478727 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.858360895 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.153621267 seconds)
done (took 291.84716753 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.927740767 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.857711482 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.958605141 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.854646548 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.941807552 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.941302 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.853507029 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.854313073 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.853324904 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.234848474 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.852835451 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.854929934 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.852793724 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.854222122 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.939315339 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.857474771 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853773928 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198860729 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.856970189 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.927042025 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.852986481 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.854846148 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.858025664 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23984198 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.848793134 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.853594155 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928270776 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.856651217 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.205598694 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.857784679 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.851758317 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.20668233 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.94872497 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.876630624 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.868285447 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.865048436 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.94382736 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.861799688 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.939363581 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.937206023 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.960761732 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.898589506 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.854293165 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.851530093 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.861117613 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.859989683 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.854340781 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.886410093 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.858157087 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.855531352 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.200871138 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.868550402 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.857709252 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.855586132 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.856548834 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.890319057 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.859571287 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.861173626 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.948800202 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.860113869 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.921928869 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243432974 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.237600811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.859050402 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.856944584 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.857316203 seconds)
  done (took 183.545306323 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.926148769 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.936226253 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.92959491 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.863797375 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.910559653 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.931698692 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.862076739 seconds)
  done (took 15.150708748 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.866579468 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.860458234 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.910904137 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.910925875 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.863123472 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.011189918 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.860434278 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.872779386 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.858590861 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.914348224 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.86215947 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.861981905 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.866642309 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.858109043 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.91009774 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.872834986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.975749076 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.861748638 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.863648578 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.017431887 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.85799037 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.867152266 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.91670708 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.875423698 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.862421288 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.868358651 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443842553 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.862930266 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.861119019 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.860666394 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.857649181 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.905260877 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.862326736 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.860239354 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858890628 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.980285064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.861882344 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.860640914 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.863075307 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.861297992 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.862727555 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.862108584 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.862410344 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.859843414 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.86204359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.887364237 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.862709187 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.862396406 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.862484867 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.862892546 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.913640793 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.863094753 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.859999998 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.267559094 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.918984979 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.870331781 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.86364915 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.858636774 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.862703556 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.860644176 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.021380303 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.910277385 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.862000022 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.912525653 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.861824091 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.864421476 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.862909096 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.863481132 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.918278062 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.862559736 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.912156304 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.859517552 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.022919067 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.886901079 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.864211219 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.867162138 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.866924735 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.864079888 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.857192082 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.869509052 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.861112737 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.867138203 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.869504457 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861638848 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86092704 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.978502387 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.972589037 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.861264245 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.879264293 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.872539496 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.862423477 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.918125566 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.864504619 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.861804158 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.918070612 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.979512863 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.921397417 seconds)
  done (took 205.532037421 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.869894685 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.873253452 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.865834513 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.881005153 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.865011725 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.865839562 seconds)
  done (took 13.015133593 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.868703917 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.864819463 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.863481851 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.865760285 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.86572088 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.866074325 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.865758902 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865421813 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.869914187 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.864707841 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.866876952 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.86711383 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.866846283 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.865958091 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.865854428 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.865305942 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.866961485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.861400728 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.866020093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867934872 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.019968367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.866463079 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.867923939 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.868274319 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.870839493 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.86690839 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.874985728 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.865789188 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.867204054 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.873957455 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.871132866 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.867392896 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.867882191 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.872772792 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.871498304 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.867841135 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870528354 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.868000687 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.863967582 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.866738117 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.868057586 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.86762318 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.86677849 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.86922763 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.869226548 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.873932496 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.872785649 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.875674141 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.867545671 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.867370213 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.868574435 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.865406679 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.868979755 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.87010277 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.871409457 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.872924019 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.872642119 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.867972335 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.86907096 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.86761357 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.867557932 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.869946087 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.871004194 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.872982297 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.866011463 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.869749033 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.869642484 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.871202509 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868290438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.86668039 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.870257139 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.86308803 seconds)
  done (took 137.467289999 seconds)
done (took 556.50903713 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.143119575 seconds)
  done (took 8.94041268 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.939049646 seconds)
  done (took 8.834603447 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.294495378 seconds)
  done (took 10.093253832 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.883786201 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863806036 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.867277548 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.862663771 seconds)
  done (took 29.283706279 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.197323351 seconds)
  done (took 8.991025381 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.871496624 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.858401653 seconds)
  done (took 15.596723648 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.872147988 seconds)
  done (took 8.674416918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.901764851 seconds)
  done (took 8.700927946 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.884671568 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.86518964 seconds)
  done (took 15.557956749 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.843355496 seconds)
  done (took 8.637575499 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.528763533 seconds)
  done (took 11.339059617 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.869302841 seconds)
  done (took 8.683693137 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.877976061 seconds)
  done (took 8.676517023 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.858849694 seconds)
  done (took 9.659817938 seconds)
done (took 163.468576569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.867470142 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.864961717 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.86183606 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.858809314 seconds)
  done (took 29.249901258 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.902020918 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.900957816 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.904756752 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.912739618 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.907411611 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.901681557 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.895986727 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.894578492 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.912540829 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.909810343 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.90100345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.903645487 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.901668276 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.893212302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.905249854 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.904155858 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.912150788 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.903305583 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.894504526 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.903971208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.868582671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.911610429 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.904917814 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.868661769 seconds)
  done (took 47.421994648 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.06725068 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.939380707 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.023803974 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.918478033 seconds)
  done (took 9.746960255 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.918739342 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.918924579 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.933443426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.971004311 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.996691437 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.928667716 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.894034766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.888670498 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.874810575 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.919195977 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.99625364 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.937204897 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.020105258 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.86684555 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.05433487 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.86717283 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.87000932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.919448938 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.970883145 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.992540534 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.867674332 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.919446793 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.922030127 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.936087245 seconds)
  done (took 48.183136728 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.866004508 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.876705595 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.870751496 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.865844616 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.865526144 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.865737864 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.871267824 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.866760705 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.885043356 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.866393145 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.863504327 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.864285104 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.864347993 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.864404218 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.863468593 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.87677972 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.878174818 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.866576754 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.867908505 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.871082686 seconds)
  done (took 39.178188857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.861207618 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.712667118 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.212350013 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.114157328 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.858854484 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.856619169 seconds)
  done (took 31.412008357 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.878270926 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.927705052 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.868593361 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.919630937 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.996867336 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.869547724 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.867362073 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.930953979 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.967923324 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.931606817 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.880522815 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.892454588 seconds)
  done (took 24.72785506 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.861177474 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.861765771 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.860347642 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.876424167 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.8753087 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.872718271 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.874546489 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.859331486 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.8767661 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.884968549 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.872130323 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.87511181 seconds)
  done (took 44.248923616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947754962 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.907182603 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.889405879 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54656255 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241945413 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.071252571 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.514361415 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.194565338 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.863373355 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135323289 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83693525 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968704368 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12597134 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241647528 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.894049652 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.336964549 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165444942 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07404161 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893620946 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.546547512 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935381002 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.913801607 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.613842549 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.926384729 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080898055 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.000163917 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.131196175 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871878196 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008536903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907672113 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883900294 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869972448 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14467908 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25740497 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972655646 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88197338 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.491826427 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.585213251 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.862076503 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.692423697 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.60065755 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.992368335 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882849424 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871803871 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808465939 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900078377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23664223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.871234345 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.583280167 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.867856669 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878341544 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965512908 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.87019344 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.684362082 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779843763 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.867352478 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.863299948 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876106072 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.441202935 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965562672 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.941942096 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.836597289 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.96530498 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.55569899 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257107871 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.019025764 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.87607641 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.878217768 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807596098 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.629625931 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931499387 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223190122 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.892157248 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52304717 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19201444 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.939741998 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811801613 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139991556 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.261128198 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.841318098 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101447215 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873618783 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80926038 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.821053084 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808380805 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.132792127 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909337153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.624776648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917187713 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202410085 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882488915 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891708981 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897377278 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097939662 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.760346457 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873118936 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.673180933 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.022292451 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895190812 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.203624329 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806792417 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.876395944 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13265397 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.084765761 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821900935 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366003199 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030079955 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281403269 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.922683769 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.897725721 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915184002 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.140629664 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932200027 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.991327697 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930132046 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876913218 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17008782 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350775378 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.004315752 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.961512652 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998268773 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19433528 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900743654 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958338351 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885072955 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.878106256 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64316594 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433240837 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.87019611 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.870906484 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.822804684 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908032599 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.867383273 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81495637 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.481415437 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908120339 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.888631881 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.099280738 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.32392131 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175894783 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808916335 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.203571086 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927257072 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.095310382 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.521651516 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.957164643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137507416 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826973612 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.854937582 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911940922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894390356 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972724673 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896290196 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.913306351 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.158679789 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.877504876 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.880273615 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.663064612 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908252118 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87452709 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.880764128 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.626349554 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147025086 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895251862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.878470283 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.764843369 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.889581015 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940013039 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880634115 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886130687 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.41209057 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.584450695 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.879059168 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.456538507 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101697159 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886510681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.676837378 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992147105 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.95833703 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147439924 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932887645 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.808100312 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.587958688 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.569433754 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876591393 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.812903849 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.877130421 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885855481 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888334315 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.074901749 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146571415 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918505379 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.562587289 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.918415041 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886574696 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.882302344 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.879184763 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.384420282 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994750857 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.952646311 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913774599 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022353645 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.888335107 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811141786 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.878822895 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880662942 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.875669514 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.876126678 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908326271 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.565521412 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254255714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136719161 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.488847205 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886506392 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.662840835 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.935507194 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.877059247 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.679375355 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929814575 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.943054357 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8910881 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.88960339 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.623866965 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.571017478 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.447408556 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193426851 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1842059 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313746275 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.969749458 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.89592551 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.214464072 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805259841 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.433061472 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.929910712 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230966554 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815194047 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956918891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.517042594 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.217846551 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882752032 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100259435 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.258217909 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.591161028 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016437624 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088917373 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905555569 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.906366563 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825749041 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.389517965 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010612695 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.564698061 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.077898028 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206501922 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.556928104 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.99647807 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.873570205 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54434237 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960014728 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.579732738 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040964781 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.93680749 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.799363154 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335540803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869314423 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.091248635 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207828291 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914528648 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.974304393 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796447725 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.872781975 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.875049347 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.863119728 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.854227411 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.714947846 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.116756996 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868027975 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793045991 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.850788056 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133009694 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.758957233 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.86128811 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862965726 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144272298 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.27476843 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018328317 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.828737806 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.363744161 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857418821 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79202355 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783467814 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.542317002 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854007628 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.824531973 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048855668 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.948313042 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764070214 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.803125415 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919959857 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09999876 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.856286668 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117517752 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122207119 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.544521143 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868464941 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.946113431 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516879284 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.956781836 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.846304218 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.083201403 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597659464 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069696052 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.872685909 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.804007469 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.845578638 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058315593 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84436338 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.757791074 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079144024 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.568025705 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.982655106 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189148428 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947166272 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.831124491 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.919553354 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.964634593 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883719735 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952527602 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882115713 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.884647221 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.882661024 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921647846 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.83895649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001358349 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.886474194 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966436434 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.008783551 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.392841424 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.877548706 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148863651 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245847298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197835567 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9336562 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873883568 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878034373 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80920174 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024798324 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10083497 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147589429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.003709482 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.990592643 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899073384 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557333354 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.972471279 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109948798 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151619407 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.770772954 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.262301672 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910711224 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.87588 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884789778 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.085889568 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098466083 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172159237 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01570406 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.84128721 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.228721925 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149958424 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.875929397 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.875757103 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.466665599 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.021689897 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.560714496 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.925335043 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.840302392 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162403176 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.895668332 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264851228 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.905138291 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.037358792 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.654093806 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631604042 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171311579 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.872796584 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.946607441 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158143341 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.264057487 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196990773 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950245376 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892072612 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.010416777 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029705931 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.741221491 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.886429713 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882434135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930286137 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.590554495 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.891754754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157297501 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188734894 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.875233954 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.736154528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903298525 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.885148344 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.102249451 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140881822 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129187178 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885441078 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.881770255 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.690304362 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150606189 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934357788 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805928085 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.874185464 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974143441 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113129023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886081324 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.315410664 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.575835157 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131982919 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.85985323 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882545601 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.89850677 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218356703 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181175268 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.395244686 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072653577 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.447946276 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.317559207 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154957099 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.866101082 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.90602184 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155648702 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.863227258 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.826335459 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891712097 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.130893983 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170202459 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.995873325 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589783118 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.837338794 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.207539195 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424448052 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806555766 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.879356303 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.928508797 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.867438798 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999797282 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880553027 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.728442071 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926940147 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.623954115 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140225276 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.873349488 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860500345 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.861351871 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046377724 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898148614 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025217587 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870314425 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.543847097 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.22074991 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.126096613 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.840586623 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.87240798 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.872951447 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.868542051 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856240033 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.066043021 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.06675809 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144509404 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.867408202 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90098841 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874502865 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.085977502 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081395254 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.850473791 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012233705 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839776903 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907202501 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.776473881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373132007 seconds)
  done (took 1670.850137473 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883545938 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.87634706 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.892593654 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.913027654 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.878607466 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883205692 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.865132524 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919248928 seconds)
  done (took 56.921314342 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.859757357 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.077964661 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.866110047 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.858633436 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.866006401 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.857558095 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.019438227 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.864036179 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.86339232 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.864839672 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.855472611 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.854820918 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.153925906 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.877872992 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.853950922 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.842558912 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.863847053 seconds)
  done (took 74.103554177 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.854993511 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.041573442 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.883910365 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.87190033 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.842888677 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.870943056 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.633883204 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.860031028 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.857221316 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.954020484 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.487943586 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.871807648 seconds)
  done (took 86.825775858 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.864452514 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.862362415 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.863062857 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.862173277 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.862092451 seconds)
  done (took 11.110797578 seconds)
done (took 2175.805575599 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.156562637 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.070598093 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.080040155 seconds)
  done (took 5.945591257 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.008585464 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.055379663 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.172808029 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.196672327 seconds)
  done (took 10.233720432 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.144851814 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.247804057 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.064601482 seconds)
  done (took 8.254145794 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.253835019 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.863585522 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.966115203 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.859837184 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.858345418 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.860065882 seconds)
  done (took 22.378012112 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.863890357 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.866546143 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.863301954 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.866961742 seconds)
  done (took 9.257420382 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.845524311 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.65756263 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.848948594 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.86158643 seconds)
  done (took 21.012540358 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.612868988 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.622850646 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.604889361 seconds)
  done (took 9.637587368 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.507536564 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.789182508 seconds)
  done (took 9.097249496 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.12868957 seconds)
  done (took 3.926770191 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.992331515 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.127255972 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.325303854 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.366983038 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.419491996 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.704240854 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.160934985 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.097191074 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.256569742 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.2907723 seconds)
  done (took 24.540638449 seconds)
done (took 139.320469638 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.233305705 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.095935733 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.061125912 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.193388037 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.08376553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.06137463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.081687071 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.176594893 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.701968374 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.699383382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.191836289 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.082171123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.033981496 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.097457066 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.034046129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.100545052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.079074475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.248049698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.888891443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.089859917 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.084769847 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.830958308 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.038980393 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.845128298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.083949286 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.012275616 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.409406934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.103980825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.042052263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.417747094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.01533238 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.243041707 seconds)
  done (took 172.163090102 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.768135187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.863474403 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863435724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.863600406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.467727553 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860305149 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.863250564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.856732176 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.038602782 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.008660908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.852685115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.439627977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.851142616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846302699 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.848696063 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.844860785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.205162295 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.772396345 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.845173173 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.847137796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.844509065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.338913919 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.844936015 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.385818955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.187348244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.844478513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.844274999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.851941686 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.85093621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.854064563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.859054465 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.844505292 seconds)
  done (took 208.163175046 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.844725872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.841156142 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.837934517 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.838906302 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.838025016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.836426295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.840963887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.837330357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.49978686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.516227486 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.868122053 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.850017134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.855790638 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.838025525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860314357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.838174886 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.861068681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.861335177 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850096899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.854030303 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856802586 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.743134677 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.841012922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.74093479 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.831235397 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.837522343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.828591924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.837973675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.841551451 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.842849632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.842287983 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.828232377 seconds)
  done (took 219.941059462 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.021856326 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.833432739 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.834630719 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.771359858 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.833993541 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.833430173 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.831187615 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.025246761 seconds)
  done (took 18.768875211 seconds)
done (took 620.847010271 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.228612543 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.069326213 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.007119397 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.855985037 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.071758661 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.88507118 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.853807477 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.912318307 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.567663223 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.916605844 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.539913433 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.867350965 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.633938348 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.872546877 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.977303967 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.904735012 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.39864986 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485282884 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.023925655 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.897800471 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.0227792 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.811265887 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.922714088 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.612912911 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.647045571 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.848068322 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.031421948 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.402952256 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.861343469 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.011628746 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.557609856 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.222690838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.861825601 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.850845043 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.903470705 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.885343676 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.202238303 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.859816175 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.976725892 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.622630727 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.885128097 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.45537732 seconds)
  done (took 101.193287006 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.82541497 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.822449977 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.823284499 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.824162824 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.826465182 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.824135099 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.823515618 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.823774171 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.824121466 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.822981447 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.823578831 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.825431075 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.823240365 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.825808538 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.821839065 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.824063277 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.824640019 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.826272061 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.823475232 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.823348602 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.82525697 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.825193102 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.825006565 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.823542984 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.824909344 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.824320676 seconds)
  done (took 49.208755492 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.837559495 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.978680164 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.054038059 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.853167313 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.838510358 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.84246237 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.856959583 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.840423255 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.840971317 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.840213699 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.934111086 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.841181443 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.857080176 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.057501471 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.850509281 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.837504271 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.837146219 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.838671178 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.985399513 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.852235581 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.857739231 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.839791 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.856103447 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.849815958 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.841307855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.839348894 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.843619718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.274963442 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.844883484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.937368023 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.880237893 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.859238332 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.227103132 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.066842074 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.888922486 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.846314526 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.83833242 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.939785715 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.844017149 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.840061302 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.858236429 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.844838875 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.0579266 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.331379454 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.849479899 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.837673271 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.287131823 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.945835889 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.879986355 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.849973438 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063428436 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.853234583 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.840486939 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.841650268 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.876967639 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.848902369 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.840699376 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.14624052 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.849331837 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.857973384 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.843267283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.842740699 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.995769034 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.846669365 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.983803095 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.848377759 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.848154735 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.842553 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.059137895 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.853105812 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.341477181 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.850610012 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.839877369 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.936715652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.984466095 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.309398707 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.851768844 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.997405695 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.242285445 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.862546314 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.848021948 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.266873059 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.865649721 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.847377915 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.842993853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.841170299 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.841685928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.885822451 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.85767301 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.272347876 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.348470573 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.157436491 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.866590034 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.856281526 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.844249758 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.147854012 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.846895764 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.841620265 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.054054539 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.356357573 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.852752208 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.849987179 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.323508238 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.853963862 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.860494786 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.850989883 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.065035443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.853704343 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.885148023 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.842009668 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.849098317 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.846314556 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858953489 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.848243838 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.841228708 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.312516324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.953078627 seconds)
  done (took 228.042380838 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.839137785 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.838269731 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.836421928 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.840363487 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.837632681 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.844465252 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.836546401 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.836222885 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.843695732 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.838241228 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.837411519 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.838877111 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.840394847 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.842346501 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.35632003 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.850473104 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.501608484 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.846275376 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.843666914 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.85810216 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.522513798 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.847781826 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.842845014 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.845623679 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.844557771 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.844890107 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.853923237 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.887745318 seconds)
  done (took 167.274403697 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.850540093 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.030572087 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.866833143 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.887057493 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.859589124 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.846565761 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.875158973 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.875033771 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.856366171 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.847450205 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.847847404 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.911185671 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.86136114 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.982809192 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.88335515 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.881315438 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.958102977 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.858848356 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.847920074 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.848287619 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.879753165 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.848090344 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.911837808 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.976840509 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.867561214 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.968055498 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.854832587 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.850955156 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.851270247 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.968546582 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.866955699 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.911022538 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.880077925 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.873469451 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.972579988 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.969189769 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.957573596 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.882523276 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.855500854 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.849275032 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.848977319 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.839846359 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.967967374 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.868693058 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.85315498 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.960643342 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.869373701 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.85319389 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.861312616 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.850649003 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.865436849 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.870997182 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.918639592 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.984806121 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.883913504 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.877844841 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.878657896 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.157343047 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.860722746 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.954305366 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.84630377 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.967303936 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.872008111 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.841349042 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.851467796 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.85733093 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.879606156 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.886954312 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.9622791 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.860314733 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.954662495 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.88743008 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.86071491 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.850369638 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.853673149 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.969199952 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.970024123 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.887954553 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.895010558 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.888053861 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.851352401 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.853568261 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.841625117 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.870818033 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.856287249 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.969288487 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.971400307 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.861193082 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.852275498 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.85310824 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.8540198 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.879843858 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.981868236 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.886713911 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.950736759 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.924776307 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.930871043 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.868708722 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.865093045 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.856528691 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.918184304 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.870730001 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.863773058 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.205663136 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.925588731 seconds)
  done (took 200.891192903 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.948554959 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.330241491 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.908467213 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.911871991 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.153931117 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.28889101 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.631868619 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.905987121 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.904345514 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.931551296 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.059858657 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.962109456 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.916579023 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.894962372 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.305683702 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.89696521 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.907173522 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.92563366 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.905561791 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.437657969 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225610416 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.027975728 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.905933541 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.027840852 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.889408963 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.197085067 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.223449923 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.290753148 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.939019522 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.244779827 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.243841223 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.597507286 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.111060713 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.149378911 seconds)
  done (took 73.996282263 seconds)
done (took 822.374470646 seconds)
SAVING RESULT...
DONE!
