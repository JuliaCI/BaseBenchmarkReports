cset: moving following pidspec: 21314
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325387156 seconds)
loading group "string"... done (took 0.536686945 seconds)
loading group "linalg"... done (took 6.834374601 seconds)
loading group "parallel"... done (took 0.15314765 seconds)
loading group "find"... done (took 1.180552305 seconds)
loading group "tuple"... done (took 1.681621746 seconds)
loading group "dates"... done (took 1.163131488 seconds)
loading group "micro"... done (took 0.218563366 seconds)
loading group "io"... done (took 0.982368005 seconds)
loading group "scalar"... done (took 36.980651634 seconds)
loading group "sparse"... done (took 12.621157994 seconds)
loading group "broadcast"... done (took 0.950518187 seconds)
loading group "union"... done (took 12.401473133 seconds)
loading group "simd"... done (took 4.280591865 seconds)
loading group "random"... done (took 8.591502744 seconds)
loading group "problem"... done (took 1.988975967 seconds)
loading group "array"... done (took 20.772780259 seconds)
loading group "misc"... done (took 1.774751045 seconds)
loading group "sort"... done (took 3.268520355 seconds)
loading group "collection"... done (took 17.184348042 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510164676 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140506407 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132207292 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135022877 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.171932687 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.129155059 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140386963 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100750203 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.12215786 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156840299 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.134285938 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.466153544 seconds)
done (took 5.236769375 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206141916 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083779995 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09599785 seconds)
  done (took 1.021179607 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066388051 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120907237 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06533394 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065347635 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065459077 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06493163 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085364967 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066162064 seconds)
  done (took 1.381635114 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073861697 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068048649 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085061499 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068246108 seconds)
  done (took 1.145640377 seconds)
done (took 4.677618977 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.838514473 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.243853823 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183433427 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.448244762 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.150994864 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182388485 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674926669 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338831212 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201568581 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082112569 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120352667 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.360610112 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123910504 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664843698 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077336497 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107169274 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163320151 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438639894 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082195003 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083384938 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10402632 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128792162 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103935809 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091859774 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.157265604 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082196704 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1472498 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081408698 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083917715 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226017908 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188273491 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679598294 seconds)
  done (took 10.529838791 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097081479 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.114089653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068549108 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14078098 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096312385 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068951432 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069955782 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065959817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.105959941 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145083076 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08947627 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.118505485 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065078972 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.086266255 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084374076 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222397399 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079994603 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098666369 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069858259 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091621373 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107105058 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094045368 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079045708 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076856032 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.144315996 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194380381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099783968 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113427403 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068379913 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096836558 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130563896 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128324749 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065516215 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08398268 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124850221 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112042788 seconds)
  done (took 4.558560944 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055318592 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154856698 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.0904319 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178825784 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084240165 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107134975 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083513459 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099717926 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218367555 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.063650197 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.466271065 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129402382 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100708671 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084288938 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085469952 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068600859 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084307514 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.556372031 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108753951 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109640949 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081428188 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111457261 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087171097 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.343104082 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084495215 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065978342 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067312697 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057450942 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.130419821 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067877151 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.147280616 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108030167 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069953938 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119295564 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.182097895 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088976602 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.152653478 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084444417 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065982445 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166232731 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090313168 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091203264 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065644959 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101573169 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121944493 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103607889 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084558313 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067337074 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177222872 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06658 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10073937 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.819172701 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166982426 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076697565 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066218458 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280839469 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083891996 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084632407 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064226762 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249317522 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151192704 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067238784 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083618644 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06655271 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067388116 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366191305 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084256326 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.010131563 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068845615 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075967763 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067726952 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065296728 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09204218 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072730549 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102080218 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067368568 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067520859 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083893282 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066116698 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067057973 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103007739 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.204176106 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065695285 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.08229005 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066639989 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062996906 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083219743 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084886541 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094335245 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068222535 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085064641 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100021647 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084728216 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066912257 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.119607542 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06728315 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10276753 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08574686 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1178066 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082342902 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156799826 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066857532 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111627411 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072123476 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114976795 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078153312 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066263835 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.241809957 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063771934 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064013068 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065217598 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084993754 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067886157 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067157517 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.098177674 seconds)
  done (took 21.168312506 seconds)
done (took 38.163415857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290112142 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094001228 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075534332 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094209023 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093153791 seconds)
  done (took 1.571977011 seconds)
done (took 2.469570036 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118863216 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117826809 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063553771 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113424339 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063566837 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118918786 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097532763 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098729861 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11590789 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064423405 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09450042 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081628371 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06405587 seconds)
  done (took 2.138281009 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082877272 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082735621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086903186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082435679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063575362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099154918 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080470493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105172535 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080428235 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071786543 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08167628 seconds)
  done (took 1.810235228 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082148403 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082929015 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086467562 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081764861 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062871492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09924 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080523883 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102570007 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081000752 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089836157 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064554564 seconds)
  done (took 1.808581463 seconds)
done (took 6.645103 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078149954 seconds)
  done (took 0.966025601 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.671542709 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.042860241 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080631093 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.134286865 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200761494 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139051876 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.323311849 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087457879 seconds)
  done (took 9.766636226 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100267224 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088273019 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072472318 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087405564 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072591044 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069002675 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.088635186 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068929132 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085262756 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069518696 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068302121 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088445189 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.0710044 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089018687 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073266278 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087165324 seconds)
  done (took 2.233119529 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092000439 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109582697 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072478653 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073105481 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070905175 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.093300078 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073811881 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093022175 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07042783 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.09056545 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075383527 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091647781 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071106792 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081916657 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075058913 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092377526 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071135987 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09174092 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07627411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090991539 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076085707 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063818761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090290246 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07387971 seconds)
  done (took 2.943504819 seconds)
done (took 16.804330129 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113240479 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08914361 seconds)
  done (took 1.097007883 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0819455 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099241549 seconds)
  done (took 1.079267139 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083518727 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081888123 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091924108 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095757243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065921722 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.083688556 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104963822 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06730568 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065061647 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08450231 seconds)
  done (took 1.725595644 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069644778 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093884703 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071658304 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098467574 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074945338 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080913824 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074401076 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083835418 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078933419 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062649127 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07029707 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100751291 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072411247 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10188087 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073800682 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.087233719 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071898396 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066706997 seconds)
  done (took 2.334899185 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066703599 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066408183 seconds)
  done (took 1.036154622 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067650846 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063203564 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084514235 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066749748 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081176663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063386541 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079923698 seconds)
  done (took 1.409286594 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411369794 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110300825 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331062135 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071284598 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102288415 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289792859 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066624067 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070987707 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090463713 seconds)
  done (took 2.486397733 seconds)
done (took 12.069544257 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080233864 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084738355 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11210225 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.379529824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092920146 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.084285775 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13306803 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.229778362 seconds)
done (took 2.103884986 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125561055 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618091302 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.383407894 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213819876 seconds)
  done (took 2.125452053 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336500886 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109199596 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059872816 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084849714 seconds)
  done (took 1.503476622 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067054756 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069337905 seconds)
  done (took 1.045420961 seconds)
done (took 5.710651631 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067388541 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081996753 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08603943 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.0660733 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082391402 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066969498 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063536733 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082670545 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0672488 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065555726 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06479158 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.067444954 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065009895 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082897183 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064450166 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06363679 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089449746 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066890235 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062893977 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081365052 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064193541 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06514848 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081982406 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064028364 seconds)
  done (took 2.661980172 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084816043 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084033729 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073044045 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073664375 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089203183 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071632746 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090367052 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066650357 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089165517 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06971877 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087185477 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072047452 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06746955 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088314642 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068649547 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088330353 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071950281 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084368336 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069931279 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087643064 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072927697 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06640784 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.088610789 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071277389 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087642056 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070030435 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08552649 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067504086 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088715649 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071009829 seconds)
  done (took 3.262830492 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070332152 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063185747 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081893776 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07169423 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062679481 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083327262 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063876472 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063997467 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083249442 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064523221 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064747224 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082847168 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063304053 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081944658 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065585034 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067079197 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097227828 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064777315 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06339618 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082691763 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067288964 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063252801 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082473798 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063663834 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.081220879 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064458716 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064114713 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081290108 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065085093 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063115956 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084962637 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067580989 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063013706 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088507034 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067582544 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062962933 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.086380392 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064014978 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063787299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081875204 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063962738 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062486869 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062563638 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069341363 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083637079 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066423097 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063988793 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083706829 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065702223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06587415 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081853013 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064510812 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082696863 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065829786 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067778518 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081418006 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065672011 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062759178 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082368257 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064076654 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062261636 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.081496716 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066602104 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064068399 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097284889 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070895356 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081049322 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067079964 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064491593 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083837815 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066757611 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076198278 seconds)
  done (took 6.077441561 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091462884 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107321846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064869723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.084277192 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062447436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081972917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069000117 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064138954 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083763819 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069480612 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082390049 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066429208 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065962315 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096337816 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064847966 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082767133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071823557 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061910239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082507225 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.177909148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081944066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068814161 seconds)
  done (took 2.703979551 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174718044 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070260078 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124888281 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091281078 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068902271 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09137628 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070768303 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068991487 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089785856 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067943965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086768372 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070892648 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086776446 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068799022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08618747 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068436004 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086967589 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069584666 seconds)
  done (took 2.466134723 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078553291 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065161065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.1056295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065771676 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085080108 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068959914 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089670551 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07538961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086301492 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067011007 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074618333 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087418733 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068860139 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084155647 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068715872 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065692461 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087567819 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066330469 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09309383 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072150248 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089592933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074553892 seconds)
  done (took 2.646846627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081116654 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067189116 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101720844 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068851414 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081715434 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065202142 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088803314 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067482948 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069758656 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088472332 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067019685 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064263145 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068031612 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065157392 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090224008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066370508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086557793 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067526144 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067430198 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080809823 seconds)
  done (took 2.431798149 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088427611 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085471645 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068915981 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094134737 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068781784 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085315795 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077335237 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085437307 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068971 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105451827 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068959292 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067332611 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073589624 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092104597 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068487564 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095037689 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07639918 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093951179 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067821588 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086647765 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088270064 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067404451 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07480583 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088196533 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068188966 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086589289 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068220219 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091295811 seconds)
  done (took 3.181366859 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066989875 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06619385 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081709593 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064355328 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063680954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081615587 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064835109 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062948323 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084509009 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064630068 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065288056 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084185248 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066580803 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065545296 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084588345 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066286064 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065249655 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.08244916 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064188428 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063530346 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084783218 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066239148 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065429918 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083067815 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064271532 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083010048 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064928248 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063966544 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084166545 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065129783 seconds)
  done (took 3.062497903 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076944856 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07227636 seconds)
  done (took 1.081613319 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06533876 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079847832 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082782103 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070467744 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089108826 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067784347 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073717102 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068632806 seconds)
  done (took 1.5316793 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08239429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076888536 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086103906 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080729143 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096119339 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08230625 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.154279849 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086794775 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073485943 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064184457 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099961228 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065401967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.09138821 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067383124 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070942203 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091908463 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064312603 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091404246 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069829065 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064054501 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087763131 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075382208 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087435778 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063186183 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066962246 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086389405 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097312691 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067829602 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069166994 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093829664 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072083021 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078926515 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067620225 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066480483 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08348266 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076670259 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100033017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070120051 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09278472 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069342013 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095624948 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062608422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07071237 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092112531 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076747543 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085274599 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068297555 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061994311 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083465499 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069488537 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061681599 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085596039 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061907273 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092036435 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07136292 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078507404 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08591071 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068614949 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.0876154 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07102856 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072887085 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087558548 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069731759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084792754 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077429124 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07066295 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094795781 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061976282 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079641712 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06517782 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075338677 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108256539 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072927823 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066051568 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066360961 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085234657 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070647694 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067379933 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092381904 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072548241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08541832 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072875813 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092454501 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067493478 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069183199 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073694185 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063986417 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068048659 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063151895 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105166061 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065317866 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064259589 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085077295 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077233019 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088813898 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067485067 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064268651 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09212213 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061683885 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085777468 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068900342 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066666306 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096036872 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071162322 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091432225 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075051083 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093463858 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067261975 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087414923 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064708543 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067483695 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08413641 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073989063 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060517549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088307631 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067505519 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085829744 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076143803 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063552577 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085763594 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073681943 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091312863 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065836125 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062643121 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.067650871 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06560609 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090295042 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075339183 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.083350146 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063486643 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0619273 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088090742 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067113536 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.06966323 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091122389 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069095537 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080214999 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066047126 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090073312 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076426488 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066016292 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086773509 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072970839 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08642828 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066117617 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072225386 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088259851 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065948621 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089973061 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067515432 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061921296 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089144903 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068577182 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084101842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070875848 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069665315 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087713735 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06713771 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083761257 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075625563 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08618526 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066356886 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066139943 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08399421 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078202524 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086165197 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062794224 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064145183 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096198958 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065180209 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084379095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066933688 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069163127 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08706069 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065382984 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065831206 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087916811 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076714793 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090375186 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067752865 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09129119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078689811 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084858068 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07063704 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066087646 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08713435 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068109212 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094257158 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073047926 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071227031 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088616885 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063850838 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091597521 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074826173 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065126898 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084066041 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066028488 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089962914 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072872088 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069864997 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066206008 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06385161 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087990018 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070168939 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087653704 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067547624 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065897901 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093673615 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065447898 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093858304 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068857567 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095798163 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07036325 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061423387 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06893912 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064581685 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.09303253 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062850919 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064496823 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085414036 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068231319 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06484546 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089064431 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061236124 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092709333 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075237492 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066473891 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08545094 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066857864 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09211992 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06896589 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070333121 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089386683 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07287809 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095739768 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06615807 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069335159 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095999332 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067006431 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.080492822 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072007433 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065684784 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085256035 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065958515 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083262208 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070467238 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094007097 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074316076 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06040479 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088458734 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06548198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065378566 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.082258297 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071295334 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08822979 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068206309 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07287521 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087206644 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067187543 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089372963 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066210333 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066674692 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088006246 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06877794 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066432505 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067404516 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065072914 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091321763 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06575225 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083734707 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069420096 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065940467 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086284408 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072225195 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084541157 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068115341 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069017087 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087167841 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067470456 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085529801 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067413433 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069736879 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086914494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067544183 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068565275 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.081197059 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073450313 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084499164 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074654565 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066139302 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061876245 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072905648 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090657127 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072719569 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087114369 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068379021 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067624661 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08612862 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069618486 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091500246 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065794468 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076490674 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09420213 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06730878 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08891233 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067047129 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067859212 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085460377 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068163023 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085863481 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068191531 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066407418 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090860261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069423762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085222912 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070013179 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067761722 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086220326 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068418639 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060544334 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085710702 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067077491 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085854064 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078064952 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066843768 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065259289 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064253164 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089587552 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06673481 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063453547 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096541825 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076333232 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087502865 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073433246 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064952215 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06711 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097887384 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061848981 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064697557 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085318886 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065701573 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073079859 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087726001 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075497082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085981037 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066337013 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064110384 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086822415 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066140198 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079613601 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065882273 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070407675 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08461859 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066388256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066527299 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.08940278 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06772833 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095678711 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066634175 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066211788 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087621069 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064025889 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084838948 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067451921 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069234078 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0871565 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065191479 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063813565 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086806009 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067748776 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087444028 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067680226 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067388576 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093265598 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066404082 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088559754 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071500159 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063135014 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089954512 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066858551 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085427678 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067187964 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069554983 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089471595 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068287004 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094670452 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067225793 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067209106 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087121406 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065038495 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065986854 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065365402 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065296871 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088218253 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068940903 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094561173 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066134445 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069840572 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087388813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067452286 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092876511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069155927 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069253018 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094257807 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067145587 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087777462 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075338527 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090105491 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071313206 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.0675726 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088104903 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073456211 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06577219 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071525365 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065511125 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08960842 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06865329 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063758099 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087127112 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066869322 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084807876 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073404601 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066405109 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08619614 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06605811 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08392581 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068961788 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069387684 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094011771 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069474634 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089255189 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062943842 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063293783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087408399 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065064328 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067224415 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089493033 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07173193 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088442397 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067122248 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065077366 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09539125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07174684 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090783087 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065159115 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088793872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068738531 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068670243 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087479245 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06767341 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067156729 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090959459 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068306059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086149598 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074358009 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069241791 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088339337 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067633596 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087231035 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067765282 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061588965 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088089024 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068481758 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091342484 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069589515 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066064073 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097187458 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064288691 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086222168 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071363509 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065728732 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091285855 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062154649 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087701472 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068732257 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067334808 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082401624 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066354868 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063946851 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068211904 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064805573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061183432 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075162735 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.098455895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070975316 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065668057 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086106113 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062102369 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062040748 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086608593 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068271571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088380828 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078098787 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065399134 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087125202 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061875687 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086470131 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070439321 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069176321 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084706789 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062540192 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064755915 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090885089 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071967682 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085244961 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067215042 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069727033 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089260009 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064078812 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090574599 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06425886 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069373505 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099977476 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06691873 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087361087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073344949 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093970489 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068062569 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061651257 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087751402 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070407149 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086192546 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068843805 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067074497 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101852854 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068889317 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085685538 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066680594 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088095228 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067152471 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074784095 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087412791 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06823124 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090555188 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069895847 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0753889 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068294305 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072978342 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092070016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069536011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085545995 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068168157 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064861752 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085526768 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069010465 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066960397 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093146802 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074191967 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087091786 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077483996 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096089147 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069093118 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082740553 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06717317 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065816824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081849235 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068643023 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064061214 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085003578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065366413 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065965696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088393728 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07151193 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08753388 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067660885 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065805171 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082153087 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068826295 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068504531 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06674292 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062321365 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.089161134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068029415 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069244806 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068831921 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063124289 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090666 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068127024 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066712186 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.083233636 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072846475 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084925414 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069885042 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065726478 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086992455 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067629423 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088834229 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073272992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06729067 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089721372 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070777452 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08995607 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06467251 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064078507 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.093241 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064548082 seconds)
  done (took 46.276052029 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100306589 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083766453 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063378328 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061803698 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095590473 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063234083 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082967138 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064011665 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062859556 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063863153 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060810606 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084226483 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07215593 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099497833 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074576157 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088392221 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061748978 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083364492 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062910859 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062696831 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07056626 seconds)
  done (took 2.543366238 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07524767 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069076689 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071320289 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098481978 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06820268 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092462854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073899082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092054783 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076357797 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087288636 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076594431 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092471639 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067364708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088589194 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067457918 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091523776 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075841231 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08833473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070746759 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093170721 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070374396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093914374 seconds)
  done (took 2.760403013 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068139818 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065505347 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086839981 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062408125 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065161509 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.0897045 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070523446 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063361353 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067975931 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063746535 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08710014 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065852804 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066793005 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082283228 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06637476 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063079907 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130901125 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090519447 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066265146 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087304063 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.0625958 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06764627 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082600189 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062907332 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064222579 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090803302 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066973416 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084218874 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066523079 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064792083 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086507052 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064820396 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067485769 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087093156 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065457956 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064784161 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086955513 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065708516 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081662974 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064965936 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066407841 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082296382 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.0675128 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067017773 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086060055 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064346528 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086670617 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067244901 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061586066 seconds)
  done (took 4.588740758 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081261598 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.130834862 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066868492 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086343183 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104257819 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073086753 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092218895 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087763795 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062441319 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06301439 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106814421 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104349123 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066150465 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091821275 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070123986 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084718499 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068383747 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064771012 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091063129 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065616027 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.091223151 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072466066 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101138248 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099728524 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071444061 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083899447 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067063633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069860881 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100584842 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089965307 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071630015 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091682829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082069821 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0918524 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066143687 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087852448 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083174183 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087685638 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069165662 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063791607 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067050059 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06918301 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095792199 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102034778 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067635098 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090977665 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067750792 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063410567 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100186652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068489776 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07278096 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102234893 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071651569 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086771752 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072124658 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101222793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067448373 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084155692 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071058464 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098499974 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064966435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070059895 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101396627 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087917568 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075584447 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101655131 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071976971 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090880815 seconds)
  done (took 6.697221676 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076382723 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092730352 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081728914 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102948364 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071785872 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.094581174 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092377772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074176292 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092146015 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077769128 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093490014 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113551211 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069401913 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095456344 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073918909 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093839708 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073787955 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093476344 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073369312 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093106373 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072949162 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078557178 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070924246 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078388189 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122811177 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068202915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093699426 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072630245 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102234547 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092281958 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081199746 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093591978 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073621875 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102261961 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079808852 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070968005 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064629637 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095456343 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072596489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094428489 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067505685 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102586973 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092694485 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06878146 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092926116 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074036527 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079789989 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078046486 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098514217 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098204224 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07359426 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102078296 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072242497 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094679565 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101572989 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106115792 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101907558 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10193164 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073000796 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102297892 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101335286 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088213478 seconds)
  done (took 6.370582146 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084309335 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095768092 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076661359 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083825567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064235465 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090826391 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065282646 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063581633 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096020122 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074700965 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098785604 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08988533 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074538756 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098170616 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070219391 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093417719 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070282247 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091644901 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073912846 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091159593 seconds)
  done (took 2.640353428 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075487321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082425669 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089270466 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071735519 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090175793 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072188878 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089561111 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069597737 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086757045 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070273316 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075569447 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098170495 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066418651 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093923458 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096441482 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073027474 seconds)
  done (took 2.29409998 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076448476 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093623974 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080506532 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087051936 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065728796 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062482258 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087860733 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062134262 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062424396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101068879 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065784887 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090412554 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066241173 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085680435 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065211556 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068553146 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.08422185 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063988947 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085916649 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079105969 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097052387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066558434 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066458268 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088081898 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066419017 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092361768 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066259805 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085402984 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065552791 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066062211 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088913803 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070945165 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084431075 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06534081 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06460919 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085887387 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066657102 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087305727 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070133402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06539442 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086486897 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066561317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087093754 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067605173 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062348677 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.089292619 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062878587 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090103332 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065226481 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087315337 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067959908 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069005098 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08914687 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07443119 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090686913 seconds)
  done (took 5.196755084 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080373314 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069000229 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084275421 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06541774 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069049121 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066960344 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068563598 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091270029 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068836908 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085534254 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069859868 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068867916 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089793366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070914124 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088320939 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07159023 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062328226 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089145633 seconds)
  done (took 2.355163379 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072374925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06632628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094557131 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067556907 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065456907 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09093641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062462412 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086342042 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066065572 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066758598 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087554254 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069082867 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085305443 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069908789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066380838 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087996515 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069484303 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064613367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088140137 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062640887 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089380424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066586601 seconds)
  done (took 2.641522351 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073798884 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091955662 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160662585 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106248373 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083251206 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078736816 seconds)
  done (took 1.594635693 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092374218 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100825614 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068452429 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087587556 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09669382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067162671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091261847 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067768116 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098821942 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098221886 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069275166 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09786454 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077996325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097838019 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094520761 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076210791 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088973615 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069485232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066948391 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106461253 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089771802 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077673323 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08984561 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068209362 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090234269 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077692311 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099213731 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076732389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06674744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098882218 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075763962 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089761504 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078368146 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098897238 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0700046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098325655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068747111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107824712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094390005 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07773929 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090865393 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075039573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097732587 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073686389 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0988098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068745383 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095287491 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068128091 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091445226 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10966592 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074977042 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097972705 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073432167 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099258593 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099309003 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087798398 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099390893 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097337437 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075342288 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098084925 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077362444 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096779308 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097656915 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079095159 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096364846 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080146011 seconds)
  done (took 6.716964722 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083267545 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108281544 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069568745 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075847212 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07402811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09257497 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068215396 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090544251 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068554727 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089425352 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129764056 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069919905 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097533858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07722185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090276849 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068140316 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090626849 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076199109 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090004745 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108236241 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069250898 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097689759 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077371102 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098687385 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09800938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074543526 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089322771 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069052699 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088993748 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068656667 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094697471 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069736854 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097610931 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067770383 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075199929 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06795763 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092074323 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072693587 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090812655 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073548106 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099395092 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107024033 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068317369 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090609294 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077308099 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067476569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066463134 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092061755 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068777406 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089814177 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078386955 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098730427 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097872204 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078274988 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090165717 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070163647 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089762503 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069245206 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088854844 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075472768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098252835 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068992964 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110274763 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068402785 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06779146 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074502168 seconds)
  done (took 6.514887983 seconds)
done (took 131.211973324 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202221886 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188277791 seconds)
  done (took 1.391869214 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06980479 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.096628424 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09999299 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128724878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088559325 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101569196 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098580276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100921856 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067471658 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087748874 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068464336 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067865555 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.153993257 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067545153 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066480756 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.090695745 seconds)
  done (took 2.463245386 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098302655 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.19618001 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099052612 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.088330516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097973567 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.095917162 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065602826 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097784767 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072269403 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064678488 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.095661984 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071656555 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08741334 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072651535 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.092780361 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074820221 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065216794 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.095746608 seconds)
  done (took 2.643187828 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101362518 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144986708 seconds)
  done (took 1.255986019 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.18610223 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139768344 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207791979 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.383615568 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206912451 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283397846 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.178731467 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177909307 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158582619 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17510434 seconds)
  done (took 3.104214704 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100088262 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171756223 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304802562 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116660228 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.095945447 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.115207128 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117540902 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100984965 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079072217 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077041695 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10078366 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078277303 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119675773 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075319624 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095671876 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077930429 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122101568 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073874417 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097944236 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075959225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118546642 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067777048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074464673 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096142931 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075173177 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097465549 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066409862 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087745267 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076155547 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095260083 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07942059 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11412297 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075412434 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129697448 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092977621 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130330303 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077053686 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094437546 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074577328 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093998748 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077327519 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097830688 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072856835 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097567518 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066787272 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076200446 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087512262 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066652769 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078660817 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065638067 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101328843 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079002604 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130223082 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087932282 seconds)
  done (took 6.20871021 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.706223102 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127178215 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070462697 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.13142071 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117198033 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074304963 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.7616198 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114419017 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202060352 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09338909 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109584258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071583007 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102091131 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085569277 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131814799 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101796218 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117130634 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071166263 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123196718 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.121007376 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069129788 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115157791 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091456506 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399958556 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067488902 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091485949 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068504834 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070403227 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155898102 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079634285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075018916 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165716931 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085675093 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145933654 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089345827 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068407855 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088678322 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081745869 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226115745 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.160568867 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153577473 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067592867 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067405139 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.091868184 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089562738 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089616042 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135032388 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081300391 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116126403 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094216866 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070016209 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088920016 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069966661 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101006714 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079251307 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102604888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.249246408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090198635 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06900555 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07141304 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.225025003 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080050973 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102773289 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092541883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.180778662 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068862827 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.740538309 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086284848 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08918286 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072143595 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068654911 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092837557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069899765 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142034057 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.379523288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070889907 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07090298 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090636795 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174637298 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100059711 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069685647 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135511747 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068229749 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090663654 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070502399 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09057199 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.141417124 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081804783 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091080426 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070325542 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07000122 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091359308 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068602711 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18843685 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10306812 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080704318 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.183430758 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091967213 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.135160933 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080644838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.092583406 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080516172 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090140431 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071225705 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069351559 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.102154516 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.11827206 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08035913 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092569602 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069540943 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121061304 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081228313 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.090864937 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07896567 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.420946586 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.102904972 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067327357 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104052911 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068733244 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13642836 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093027711 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.206607275 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.089465126 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081058038 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068876162 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090485204 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068678153 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134484578 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092192782 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069175255 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06907626 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093252872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080106728 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.158321207 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070983647 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206432703 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.135219484 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.092157869 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.141689754 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069460427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141088345 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091427404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070898436 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07008277 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.733258194 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069202982 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089904315 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071455713 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161167088 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069722016 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101013245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078853396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066976522 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777224892 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080869915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076462835 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078310481 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094933157 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069288364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090529736 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070714131 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.133609361 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191543382 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070643552 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067385063 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102270104 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.134585505 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066911872 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100229127 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077804496 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100917484 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067650853 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092188234 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081285624 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141166253 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101056322 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134924327 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.554998767 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069721839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076425916 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.168690849 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090941951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086988577 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068719676 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105295948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135681132 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099611952 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.25432247 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138088748 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161888269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101711271 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084979642 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066864618 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090362375 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080400115 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09033124 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070485724 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.100942894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071139265 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.090971027 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086054879 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068004717 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198720196 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090033445 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079331333 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089723299 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070031233 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104757689 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06973338 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090958793 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081234801 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069779662 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101290259 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.818587342 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100555157 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068823555 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090751048 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.161993859 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137717381 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089873088 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06996755 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070186943 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133736997 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.183023773 seconds)
  done (took 30.884361764 seconds)
done (took 48.962670082 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.258101497 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175658603 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.251093244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118643582 seconds)
  done (took 1.912582271 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146275966 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101249819 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118910885 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065046699 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.124924336 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087188153 seconds)
  done (took 1.682525659 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411228122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.234376632 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231787644 seconds)
  done (took 1.911316863 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.22061148 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236841902 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.413709462 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.276950017 seconds)
  done (took 2.291743139 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.167906449 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113595472 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067858864 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106735328 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160232276 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209317213 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126819777 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174059163 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078666812 seconds)
  done (took 2.289719887 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192777143 seconds)
done (took 11.315332532 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.26337538 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.163937472 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110856838 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.123944547 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072504039 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.165674969 seconds)
    (7/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075220016 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.133110349 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106756068 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.21240955 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081270794 seconds)
    (12/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.197199759 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066342241 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128391807 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082117532 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.211861904 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.126078232 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.176908098 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077411467 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0771866 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101553233 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098889854 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074792396 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071715744 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.091540582 seconds)
    (26/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.138082406 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222996838 seconds)
    (28/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075840208 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095315423 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09351307 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066395648 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073133448 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.071023066 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108359142 seconds)
    (35/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.146483207 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208367272 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093030891 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163034047 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.186007612 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.226295036 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16114831 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.18183107 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.161544287 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.145749249 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088741614 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.219460684 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.095738305 seconds)
    (48/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108887363 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16155845 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065962228 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052569213 seconds)
    (52/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136031292 seconds)
    (53/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.114313234 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072393188 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061282214 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.241996673 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071326223 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.158092788 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065803142 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163956252 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072504617 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.101961795 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072061107 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074664309 seconds)
    (65/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075843827 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173631963 seconds)
    (67/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112991601 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194310188 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071416554 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.074818702 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089481633 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06686369 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.097639642 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184082669 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.119034881 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.202374915 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.214561003 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074239374 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077397382 seconds)
    (80/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076239777 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070249592 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170134013 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067170407 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186318084 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.135210039 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194458284 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051265697 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.112464086 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.18002238 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.089252717 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067457834 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.122389981 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070820946 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.197328435 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072055742 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16208838 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.17312967 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091778981 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101604603 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091740056 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051665076 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.10371686 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074816239 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.180913581 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067823703 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116978915 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053453428 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19582594 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.137404707 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077598895 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052234873 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075829474 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.115031515 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077412216 seconds)
    (115/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.176168258 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089893614 seconds)
    (117/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078993982 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054324551 seconds)
    (119/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082079624 seconds)
    (120/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079243163 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137226946 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117126146 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143757489 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075590573 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065373684 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.12439922 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073068297 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052538788 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169023346 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.361276045 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188692412 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063989514 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097762638 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099260305 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092336118 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.159443743 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073425554 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.133430345 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066847367 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095620452 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067709245 seconds)
    (142/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099220423 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163090288 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07300778 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09535596 seconds)
    (146/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072881794 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071708394 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050731727 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111490312 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.099704617 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053341233 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053728456 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075659854 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073160139 seconds)
    (155/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194298875 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052129393 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07045041 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090781031 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067481774 seconds)
    (160/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052898492 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.092258742 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065963284 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089207607 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.097049479 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08009636 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.118884007 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066981797 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052107751 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090829699 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05293969 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05140119 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072429882 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.194377053 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052591843 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051517836 seconds)
    (176/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.18180637 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072683065 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.116498992 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052960093 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05469458 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.12577048 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065961647 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160832738 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067641605 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103050582 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066378573 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191930107 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.106496672 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101958096 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053437354 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.193829549 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.14781555 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085310774 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 0.128465241 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192445357 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0724358 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.13918738 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075222832 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061667323 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 0.150809731 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076449209 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09612545 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055231044 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089593992 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.098119864 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065778776 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09834371 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065963692 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053242591 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169913572 seconds)
    (211/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072567066 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08922531 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134805401 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050826309 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113791494 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051592695 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097091899 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067293945 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068068436 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.093805791 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088456881 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110805504 seconds)
    (223/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07436482 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074147223 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11699415 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.117967612 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052754216 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051750618 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064925718 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.168698689 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07282898 seconds)
    (232/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085441133 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071626237 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081834274 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.089341833 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051839985 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070825495 seconds)
    (238/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103562139 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052540649 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161720389 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088117084 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089941772 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06814252 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051459865 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091526491 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067890797 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051194844 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188334303 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064965899 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.152368219 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.076205277 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.076636525 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053067334 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067604687 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090685232 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051912003 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068443136 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134652347 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072535666 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065016467 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098401833 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078560947 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.074255737 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052350762 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065014505 seconds)
    (266/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051809952 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078621966 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074238736 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051115865 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200143342 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090554515 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073199384 seconds)
    (273/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078576811 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06494355 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050669673 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050806311 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052071541 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079407666 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053987614 seconds)
    (280/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067829797 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113069413 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053665881 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069847801 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090707097 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068912158 seconds)
    (286/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060720641 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097779219 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093900019 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.087632929 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066242131 seconds)
    (291/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053015469 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063697052 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098904397 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051763555 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052245259 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 0.165214213 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076452026 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099254659 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070628315 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.086198939 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067092557 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162517273 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088862859 seconds)
    (304/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21070749 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070887288 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090473664 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051621374 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071444794 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112539606 seconds)
  done (took 33.026844371 seconds)
done (took 34.068235911 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082463404 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114116712 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076071722 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091806618 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105372406 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076057012 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070896918 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076775036 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106054996 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082145324 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103314697 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055626475 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.0730867 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09929724 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074891334 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115858068 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078449539 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096233814 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074515314 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065419714 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096964311 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065923555 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066978494 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079189668 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078530508 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070946155 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097219418 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073752477 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089070772 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067194174 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068828653 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.097183766 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066068622 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077265649 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096191647 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073476702 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09801131 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077029212 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06737591 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090128652 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074844451 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065335442 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.097188897 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074106488 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071623495 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09597417 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072801122 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102646524 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09183035 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093164986 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07594949 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076744625 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102037528 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072951868 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093830452 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074634509 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07122613 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116534164 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074214173 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091990777 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075314672 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073835545 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095783019 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073674385 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072758359 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100225609 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075864305 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095602744 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075708689 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070706456 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090400995 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073730211 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068447297 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068190193 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075951 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100214992 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065979647 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071244232 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096854907 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072475543 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064635181 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092967222 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068465533 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071729154 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093016475 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055160082 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069077842 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09644537 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065567732 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096364579 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073432892 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073135944 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091197743 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077111925 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065884 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09574102 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067515391 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065819304 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.092190818 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070588113 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065291728 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092814576 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075508606 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066425761 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096740225 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079587383 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090073056 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072988642 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064918297 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089910137 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080644539 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098325914 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067420483 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068721916 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089314247 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074344119 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06504124 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089860857 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066240535 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065241261 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096700972 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066549026 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067811769 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097185686 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078858853 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089426867 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07060674 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068091402 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089702026 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072801161 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066183642 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089782674 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069259416 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062423615 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092449109 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067180742 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072917367 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092443829 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073975987 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067964743 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098333469 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070320094 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09478895 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072690771 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065048819 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081739271 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069553849 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068491278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09120722 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066962728 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067977339 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.089605869 seconds)
done (took 13.31618824 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067968867 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170070394 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124097031 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096540823 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110935527 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066860533 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076583566 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.127778188 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091465068 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10392541 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111888262 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085635696 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138509241 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064911165 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090567682 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071299816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067233529 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113070336 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12482325 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088516325 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135764198 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065853243 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120238 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089748445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113844348 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12632058 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068501715 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069783087 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093320179 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092781539 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110860771 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070329436 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066737426 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.096732133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118987611 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084769127 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089993803 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085369045 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065408269 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091381595 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088185859 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124172394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080234974 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079334217 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097121279 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070351194 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067863558 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.110067035 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089605055 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078328726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084827011 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10121911 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097762197 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081289747 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089604521 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087156444 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.105922974 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069277624 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066697496 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.093431215 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066537536 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069444759 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112869759 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114202689 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070472645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105714609 seconds)
  done (took 7.245124346 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084890288 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089869038 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109150668 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083499297 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.091133697 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067076019 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066278692 seconds)
  done (took 1.697974232 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068412981 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088276103 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113850144 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089299094 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110148463 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087529204 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101043678 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068328414 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082771893 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094071903 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087992209 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127727416 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069012061 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09781588 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091969904 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066076496 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117258428 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066347081 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094567455 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09153056 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093842215 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088782241 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068811596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091724162 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081357379 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066298334 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111132154 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070236481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067146633 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069375971 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094387026 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108428523 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107320559 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074887274 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066041026 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107057775 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08206479 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090442391 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084244392 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096252013 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083316771 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067296723 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093742965 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066152647 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070832314 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102747173 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068855311 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06720822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.095646407 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087241193 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092289766 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081931584 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067359458 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096607542 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069202939 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095972879 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078507047 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067969071 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111709904 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06947166 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108240543 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084942024 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080850798 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109856101 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069275203 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106135289 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08201566 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068890669 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067682194 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069975179 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109921558 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065646256 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068215942 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103910272 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069039277 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115740982 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090335596 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068569573 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.104230348 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067823901 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092527018 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068588531 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089544477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096265328 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068223766 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096015649 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07280392 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064752728 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090757352 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071654593 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065131594 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092911904 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07175959 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067160235 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095027102 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084187392 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093177026 seconds)
  done (took 9.374366659 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070164821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068471446 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09371947 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069965381 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068203097 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093839032 seconds)
  done (took 1.581290072 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096155623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.093590934 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08193114 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072630968 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130454529 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081474021 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10784708 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10365031 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085945212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079024696 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107678061 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.082652586 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113529333 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073029446 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.106711172 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072441544 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106821083 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076968628 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.102920902 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075165208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111908445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075447604 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073366928 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107433684 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070424955 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098370697 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077752725 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104086806 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080252881 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.104641463 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074402529 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070558176 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096124994 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079589865 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10793167 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071013985 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097776147 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073099863 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101412936 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072636468 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081697151 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072242295 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073518128 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099506014 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079442679 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09677943 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072544737 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101829826 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08233778 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095789699 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073260169 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072386915 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096508419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071704447 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095717826 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080345936 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096107772 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08367095 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07290637 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097178338 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070183481 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096814801 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080780276 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096285779 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080650317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095739839 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07229937 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072977777 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098748753 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073399015 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096765821 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071278975 seconds)
  done (took 7.417507963 seconds)
done (took 28.413652646 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.674228743 seconds)
  done (took 1.788355867 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.76523595 seconds)
  done (took 1.881283361 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.862853029 seconds)
  done (took 16.984881138 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.600251798 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.77556536 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.843962013 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158995838 seconds)
  done (took 3.49592053 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.915165009 seconds)
  done (took 2.05019119 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238538306 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224994254 seconds)
  done (took 1.584572377 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77701609 seconds)
  done (took 1.907528884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.277843726 seconds)
  done (took 2.399447369 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.29376316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180175358 seconds)
  done (took 1.607069938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.488627498 seconds)
  done (took 1.619924548 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.87205612 seconds)
  done (took 8.007307499 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205707157 seconds)
  done (took 1.349529708 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267727494 seconds)
  done (took 1.406203152 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.356937479 seconds)
  done (took 4.491652423 seconds)
done (took 51.699951311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079188187 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081163497 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107031906 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078737843 seconds)
  done (took 1.476856024 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078719307 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072474414 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102691044 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072334144 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102301052 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073151759 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074367415 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07531337 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071332201 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101041686 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073496196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072073366 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.102162221 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074016557 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096774513 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076303901 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099828254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074608546 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075885792 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071732341 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069931292 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073452087 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.103952172 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071668599 seconds)
  done (took 3.099920463 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078903594 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072776329 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099282461 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072485347 seconds)
  done (took 1.46607747 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078370517 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09149636 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115904647 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076521507 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118712361 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111270733 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069838896 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068450077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096359177 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077843524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067670339 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.123316246 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112598028 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077442395 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078879417 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092142345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069252045 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112030151 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077438281 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077085474 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.098708537 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076925875 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067199838 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086709165 seconds)
  done (took 3.264960906 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079174559 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10205966 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104018831 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087069063 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117591877 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065378615 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101588345 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089747968 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150248742 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065536999 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095251057 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066953161 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07279217 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.091428366 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076764711 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129975781 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109364384 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068369826 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121944826 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065544921 seconds)
  done (took 3.006295491 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073411393 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069778004 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089975576 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069833356 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076918272 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097823447 seconds)
  done (took 1.624911943 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068943357 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067011225 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092169114 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067943334 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070885738 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092067908 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066856258 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066136802 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091995905 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06795815 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066149556 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091406483 seconds)
  done (took 2.051589676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.396665313 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095999446 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069063793 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091795288 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071075459 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091340813 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081586798 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06755159 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116964699 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067185286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066023116 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.095484243 seconds)
  done (took 2.453730878 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2617973 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077695316 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292202331 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134456085 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143206598 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143417109 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131616169 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141503362 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173619201 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129580142 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223845652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19645235 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134438756 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166599813 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115770009 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099451982 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184140188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191616847 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102988221 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222425519 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173966633 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15242382 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174962589 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127799233 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133116317 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151149532 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07171629 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106655603 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227904946 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159508935 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176470447 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138377752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121253869 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203468638 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229812169 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172144423 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16242753 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084020596 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155576475 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.161556224 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256242618 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115820705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194255144 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134684153 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105828561 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168101443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14774588 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146435382 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133829616 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090091352 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200649892 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210268022 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193469454 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086360849 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138158992 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142265981 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141449625 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128507896 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236684625 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189204145 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153465074 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096425767 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099942031 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207078569 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158446978 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.13584081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153444925 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119820377 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161915287 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181933006 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146195958 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198321896 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.159183005 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113193264 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119635313 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194321615 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157127186 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197564327 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151075158 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099573755 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152427901 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130186125 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081238897 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168084327 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075051674 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230245383 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124063034 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10689683 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140522565 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136476463 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136362904 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218990119 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175020579 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129466215 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065768982 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130054958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.147061657 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176276685 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113024723 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134055609 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144503161 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079008511 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16578148 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.101578936 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150400595 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075868603 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15075765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156906744 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074290516 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152153528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10173145 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12867339 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161152953 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216190571 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088186423 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10975874 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195180178 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119498184 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133940252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198312277 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185329505 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125635584 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129841395 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18122363 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207894159 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089202243 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22167259 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135389068 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083024357 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114807662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152560737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141347817 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148548311 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081974561 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146075276 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224200909 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074726607 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122272342 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161950337 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107047144 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081134458 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131086873 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129022503 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094306128 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10009429 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134650806 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169121661 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176407133 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107521585 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151972975 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096895985 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23015323 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116617516 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100725736 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131109292 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069477818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165141353 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188716081 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106945747 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194477814 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15061864 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132540813 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146971255 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081875566 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137722674 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077306859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069290587 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206712791 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138074963 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138114458 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.181688555 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130154094 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155761535 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.147687531 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164604592 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160287656 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.15687123 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133392347 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113654845 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112870173 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182053446 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074605178 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119563901 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08028404 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131912189 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123111163 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083153136 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198266012 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154009088 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126987863 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114186078 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125312697 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175185852 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104111585 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157402575 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147175732 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121400906 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.182605992 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180718053 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186650113 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100881883 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203100529 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071036137 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100643468 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091957973 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1511715 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110657148 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084452845 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146742056 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202326083 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157373651 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167108689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138759819 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148535403 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182654514 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09642103 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116272818 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204460118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14886306 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131262779 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117831672 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099266616 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197337901 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110182054 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239571022 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142459222 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120579148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213644831 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126393629 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081999698 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133705137 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16647443 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133187813 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173930868 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127941838 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116184126 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137942145 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075106059 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129676477 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156408759 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149130973 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163514003 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11323032 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191122009 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082719673 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145862323 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148092652 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151442475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.090525838 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148260279 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193483559 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122397786 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147364082 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209397003 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08145825 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152697502 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235812048 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175466536 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112150291 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137672149 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145640493 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156347423 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148739872 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169702561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139442639 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163231012 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135998726 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086827977 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115180882 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098692104 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132807798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122419454 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13676008 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143315399 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095315323 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188571643 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103645094 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107149428 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148302634 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124580998 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089971279 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125332809 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230901258 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120598102 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200901095 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128791711 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.174211544 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224469868 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101490858 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081563556 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.104575222 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170538024 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085376027 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159476334 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126304871 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132980506 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153722667 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173327699 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122407103 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069287414 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137354073 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164764127 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140225256 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125750494 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13288053 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19451924 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128322978 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080564685 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143696855 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132236957 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103167869 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230419214 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.089277612 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099359384 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102825763 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083705878 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157271678 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209935131 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080774575 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.153205197 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149107813 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140260322 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156819663 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129259257 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100176254 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142362845 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206546524 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159341703 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090719954 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139757555 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186002732 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188932381 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13436635 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123752726 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203078709 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208550334 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.191252742 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.116925457 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142743056 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142842889 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107972509 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168718289 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11055176 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1953656 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110308667 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16677563 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133379393 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135747076 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160176637 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097931748 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086580874 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206560498 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146062403 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084169769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104645122 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147196735 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149530402 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135506036 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076433798 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16981792 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100817876 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162127969 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226259852 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083464254 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133028002 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096886393 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109439139 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136998653 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130764798 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087411534 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.149012622 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232522691 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089476717 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208327046 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170354415 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143151579 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194096981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10040499 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663923557 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106090452 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18532974 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145138486 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23212109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125453993 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146572187 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137253477 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153436279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175771976 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133681795 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203790531 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162774462 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116124718 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078347309 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133644642 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133080131 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.11621025 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106023769 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140836306 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144978767 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.123090186 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145297707 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153323077 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108966949 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095886202 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213650081 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146421448 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142914609 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170883437 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083827006 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147865091 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170616603 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108433347 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.15203237 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182859609 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135543003 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126848876 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080195651 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100489909 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231117773 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073169367 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221023213 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149079746 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138147656 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141306493 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144542498 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161769864 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137282737 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150384257 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123319846 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138942955 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139743005 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083649347 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105359517 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105905264 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140480718 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.126342986 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127529619 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123741887 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2080149 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072339363 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124402496 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130325336 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17796562 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235096763 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08918609 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111966553 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149855913 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143066497 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143350357 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15023001 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.081068133 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110802073 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083166768 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131599923 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110355564 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141387212 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133640656 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14059342 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223014028 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084024949 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250339347 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095248015 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13406693 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.096623046 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081821488 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123859477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124631303 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110443518 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128561554 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228702238 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096111014 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118595566 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12107673 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074356527 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11048149 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157202014 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139548406 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148242267 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099545145 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.090864699 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138573488 seconds)
  done (took 69.656619031 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134700031 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10824201 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.123256791 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176260172 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150335034 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241311782 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184080544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228017054 seconds)
  done (took 2.567173614 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069608189 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120639622 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100083345 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109489098 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068017946 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.095903506 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.250761607 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078802007 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096218996 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090038061 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.107071453 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09563083 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.491198105 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066787597 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093633722 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064558263 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093981303 seconds)
  done (took 3.311607289 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.435224551 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.663273255 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452511335 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.0745539 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.034033845 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113972301 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.582095164 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169368168 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095254949 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.448701529 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.722875126 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15832928 seconds)
  done (took 18.170644527 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07574294 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069311568 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110954954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08394993 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071832077 seconds)
  done (took 1.637475732 seconds)
done (took 114.925032701 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081842101 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.356597316 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054247414 seconds)
  done (took 1.672436191 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083998861 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083588397 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112403473 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082066852 seconds)
  done (took 1.597049059 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075582064 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076336936 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111477594 seconds)
  done (took 1.494962277 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.284773011 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140618278 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116173404 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083668677 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077801306 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105352716 seconds)
  done (took 1.49922345 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073907017 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073764541 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100413404 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076645386 seconds)
  done (took 1.552458717 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077695295 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052715774 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054690707 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083601112 seconds)
  done (took 1.501374839 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087673181 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078402732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106217878 seconds)
  done (took 1.497800443 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108124328 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11206173 seconds)
  done (took 1.448710716 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082917334 seconds)
  done (took 1.30850394 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100254486 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142373098 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15732612 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138404455 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.166484392 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.13764776 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085862729 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11699111 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105506376 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088104329 seconds)
  done (took 2.473254806 seconds)
done (took 17.90252011 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07985898 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391799724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361317148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089781293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.697947981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355671504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005874758 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090989967 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150018608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095009396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085193314 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64722221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032494254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317652434 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018535209 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319815324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648249414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066950367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066018861 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096972003 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964352201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066525632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096539822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068324776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675718869 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372323313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067646916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35271815 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067979094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095298173 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357185164 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067105484 seconds)
  done (took 16.089907203 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071579009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.144361219 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075074074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083152991 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098662845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070297867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098657609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071294392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123355924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066180622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112922393 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069303091 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071442252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097094787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087219228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067081723 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067012162 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066861333 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097631296 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069030953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085556586 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096257119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068149973 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0953368 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069833674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07940716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09631757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068849422 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067977774 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098121767 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070346407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096382257 seconds)
  done (took 3.939882745 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116691246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.152341472 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074268215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129661244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111631311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098441525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142715184 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121436185 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154933081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068022587 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112178508 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068438511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12823073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070207751 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086803471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096550458 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069464609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095145213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069614972 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067970709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114933431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068955193 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094250927 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070368807 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068139398 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108705785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068772866 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067449647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096625005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069783191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098400039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069795357 seconds)
  done (took 4.26646342 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073443739 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074460107 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110302705 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084470436 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068389976 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.100344851 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071774889 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096095247 seconds)
  done (took 1.922559485 seconds)
done (took 27.455928013 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080086378 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068715186 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099605518 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081747122 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072144574 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106722985 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067655596 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101602808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072754329 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071994983 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.102604361 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067820629 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070186551 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095334851 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073632102 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066365572 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.108196644 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071507373 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.1063567 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.0793415 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068554397 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101378573 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073740107 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.107313894 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078833207 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.105779987 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078539457 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071941689 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068476884 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068907678 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.104818745 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085482877 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067685232 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107696539 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068030247 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067336817 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100727757 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068397628 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.106466064 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07774036 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068868429 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105366666 seconds)
  done (took 4.748562966 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090325506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090125714 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113350324 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061100978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065849737 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063753252 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087019322 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089242765 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060586932 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087664394 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.084562572 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06041966 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062199526 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053075352 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.088785915 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057232617 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061010266 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084058494 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060240526 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059292988 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057359911 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.082248633 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060777998 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061906344 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08451918 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062548324 seconds)
  done (took 3.131902289 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076764638 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083794572 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116193137 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126097106 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133865073 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076820581 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107450393 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088162527 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112920596 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06787436 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071199216 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122285761 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087860277 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.101392861 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072078371 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083767988 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110562463 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069482324 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.101332476 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092212127 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083518931 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106927299 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092175686 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108982422 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067800893 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068856576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100144344 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081776667 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099461721 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077871925 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070767446 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099606297 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069325086 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077068323 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069810718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067598703 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119728881 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076750692 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10526432 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069819641 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070522558 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096621372 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090426977 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.150080713 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067336488 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073180285 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103859378 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077016605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095138183 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086750234 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078041493 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095818483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071245534 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066210039 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096964387 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081435452 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096469208 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071613738 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075716884 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099309258 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08024854 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070880825 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111815734 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066970223 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103142532 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067616739 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067468371 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095447277 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092181138 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095737588 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109670316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067825725 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098074256 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075728765 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102985976 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074080542 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066979427 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111742011 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07745416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098870964 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07732636 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070524314 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099255584 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087855771 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068786475 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.09782111 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068760007 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101095772 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071319567 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068326432 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109002367 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.078354746 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.097405061 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08546735 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067067143 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097208514 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074115256 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07202982 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096442472 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078789809 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101087287 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068947777 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075531648 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096568351 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070728258 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104901343 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074748066 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066796209 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100939976 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074486089 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068079049 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067702754 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069945356 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099193137 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07843545 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07414472 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102109055 seconds)
  done (took 11.41127952 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187139827 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15369978 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.100007866 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.173134772 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077504664 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078023424 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177415703 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124143204 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068318664 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067692665 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098920633 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114340296 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.13587527 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150535603 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079049325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097865547 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083168139 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14538631 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.176651653 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142360523 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114124154 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076378614 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098788248 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069649178 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073237378 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.112003476 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090038778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105680267 seconds)
  done (took 4.429353885 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082431976 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127917952 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074919656 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088328567 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120523409 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.06767516 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069138118 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068407174 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078867329 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.11228485 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066660162 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102759817 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074136335 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101681886 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069665947 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07378248 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103985579 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06924519 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069588801 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.102112386 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077195332 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109619732 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071452873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066887681 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104353069 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067209188 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093960033 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085533632 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097818497 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090732397 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065712057 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105226039 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081196976 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097334697 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068643841 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067952328 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097024455 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068835405 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069204282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095674385 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066747878 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057299821 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096291466 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080303727 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102835493 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057782983 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072924941 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102313696 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073022012 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064730278 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100543754 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070876534 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069849549 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073968199 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071871905 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102886639 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070639018 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065966477 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104555818 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068708843 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064632754 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095291585 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073811884 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066226772 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105906475 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073273569 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096024671 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069094849 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069585429 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102954284 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068800186 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070594261 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094797495 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070877797 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071664738 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.09909302 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069233677 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065840771 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.097165377 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068903567 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055086084 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097149181 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054356007 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070238914 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095933025 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066606331 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067286147 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071175236 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108279577 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071436392 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07341478 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097943008 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068398709 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071038858 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089230635 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071557023 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082388306 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11260866 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067349798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.094940415 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082395473 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099857468 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068252046 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056197092 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103072158 seconds)
  done (took 9.837761195 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097877764 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08683331 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098893731 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083102622 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119394606 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087838722 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073945817 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.106172054 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07001589 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109680557 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074656487 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075641837 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096880502 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078148202 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093052377 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106456209 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069811554 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104665371 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073128456 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100887353 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113217122 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081801891 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.104255874 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069524464 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074667198 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078478955 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.087900294 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.110902109 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079816212 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075006565 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110082078 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090197683 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103509046 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.073264949 seconds)
  done (took 4.326779806 seconds)
done (took 39.123962333 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.327272446 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.57351023 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.320852807 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.327464752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.359229876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.341557785 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.333432062 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.321244872 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.892288987 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.320606654 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.560360727 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.062792588 seconds)
done (took 61.007428412 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.373003168 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.477570364 seconds)
    (2/2) benchmarking "String"...
    done (took 1.601726335 seconds)
  done (took 4.34509935 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.692689572 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.240154701 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.581657308 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.322789198 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.322468612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.641870699 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.056561879 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.19809901 seconds)
  done (took 28.625650914 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.322145636 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.709856095 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.003491228 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.999263105 seconds)
  done (took 19.300080057 seconds)
done (took 62.599555477 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.306835182 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.339951733 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.354531869 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.308531778 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.437350986 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.360859235 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.687413431 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.363158154 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.328382522 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.315656947 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.328828948 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.330723657 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.322011571 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.683460646 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.326564236 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.333010369 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.399233029 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.799722194 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.728152768 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.331557693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.335769809 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.353400073 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.339341116 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.327111678 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.377017536 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.322705246 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.324141851 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.329341037 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.758576273 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.326891873 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.322732799 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.815631524 seconds)
  done (took 194.581880362 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.325624865 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.430979061 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.558196597 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.367186265 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.862132257 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.521503747 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.461617321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.922564957 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.343746433 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.328466503 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.48199139 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.324617312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.544535575 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.372098965 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.335199553 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.32918954 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.702681122 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.56860965 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.3418861 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.599769532 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.327826549 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.366387244 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.314937167 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.468497655 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.350928113 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.385007275 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.340550393 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.337893209 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.517734084 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.611480594 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.352109186 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.366074313 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.943195449 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.184637953 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.351951004 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.356884453 seconds)
  done (took 154.563197937 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.908372835 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.32418746 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.327400571 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.326043576 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.361553885 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.325847628 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880117292 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895347456 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.839771676 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.433267302 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.391656469 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562997825 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.327408883 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.327811524 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421571008 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.34145809 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.328605716 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341735524 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.353462058 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.329006306 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.326395153 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898225357 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.342596856 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.553627815 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.333899281 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.330907356 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36038284 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.722879622 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327556386 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360188051 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.649469718 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.374943177 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328125672 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671192255 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.525850727 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.437447888 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.329082234 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359304972 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.327840979 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.599927549 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330513399 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.328455008 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.328002185 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.330974324 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.932992874 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.329134632 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.883290059 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328188019 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.246846257 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.32850609 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.331053857 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.707820122 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.840373118 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.328720039 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.330594977 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.332354304 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.329276551 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.331441196 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.36095705 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.686447635 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.429631699 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.329854777 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.332778301 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361008842 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.328710127 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.481220087 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.328251193 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.891585068 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.386088369 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.435283424 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.900657646 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.331057837 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.424592175 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.449865944 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.32949615 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.329910072 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.32961721 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.329725221 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.435204502 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.329045544 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.750432689 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.336360291 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.331185459 seconds)
    (83/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.330590368 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.393327996 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.328157485 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.424051678 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.328461264 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.685940249 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.332364206 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.329969246 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.060022141 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.42244954 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.330746015 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.330937139 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.330383455 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.749626731 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.902044431 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.560773525 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.331963442 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.685149361 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.33304077 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.759125589 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.87096639 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.972769033 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.332724359 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.438388136 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.3347082 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.333323057 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.329533125 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.361775683 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.331619972 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.389683048 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.333154785 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.728057341 seconds)
  done (took 360.436497581 seconds)
done (took 712.754942711 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.018749858 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.008850036 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.116726399 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.997548393 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.962495563 seconds)
  done (took 11.37470604 seconds)
done (took 12.646282401 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527425658 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527611766 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394496972 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529511571 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361232843 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.545984907 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.50941248 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.351573443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440500051 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.416104197 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.438341195 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.389086954 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36035363 seconds)
  done (took 20.062618121 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.66639723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.659559055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.398501732 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.664607318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.374956175 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.675448525 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.534507348 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.547886649 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.531683745 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346046181 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34771281 seconds)
  done (took 18.021083284 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.67325214 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.666392976 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401260456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.673043065 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.375896499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.671925051 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.54155378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.550489681 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.534603585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.347906141 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.348046247 seconds)
  done (took 18.056527261 seconds)
done (took 57.413331545 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.34300733 seconds)
  done (took 2.614465212 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.376284368 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.544555758 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.357868217 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.347351164 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.342234598 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.343385107 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.346160664 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.342757458 seconds)
  done (took 12.274725376 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.342391047 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.34013766 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.342849727 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.339945039 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.342805498 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.340163204 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.33961002 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.340855509 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.340681852 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.340620074 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.340324983 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.343170006 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.343118758 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.343729309 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.342549641 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.34282873 seconds)
  done (took 22.73986894 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.341989179 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.340777083 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.340218669 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.341186331 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.339909136 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.340966205 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.342345052 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.339865957 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.339994075 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.340975934 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.341785779 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.340855749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.342624215 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.341014208 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.341241686 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342651513 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.340399762 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.341916844 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.345867695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.34304707 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.341750361 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.341670186 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.342828858 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.341776688 seconds)
  done (took 33.474443099 seconds)
done (took 72.376260643 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.440249401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.002677903 seconds)
  done (took 9.717491433 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.345464761 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.345038092 seconds)
  done (took 3.968137077 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.344748107 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.345556898 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.344679933 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.345191116 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.345358833 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.344758666 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.344845545 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.344317626 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.344691727 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.344792044 seconds)
  done (took 14.724943271 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.343939477 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.344830684 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.342718485 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.344591743 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.345675359 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.342881375 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.345543209 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.345583407 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.344970389 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.341837919 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.345948694 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.343277547 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.345713776 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.344086875 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.346755474 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.343861644 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342671106 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.344362697 seconds)
  done (took 25.476995328 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.347047986 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.345573234 seconds)
  done (took 3.970437679 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.343036295 seconds)
    (2/7) benchmarking "second"...
    done (took 1.343684943 seconds)
    (3/7) benchmarking "month"...
    done (took 1.344295339 seconds)
    (4/7) benchmarking "year"...
    done (took 1.342939332 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.342956209 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.343561579 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.343286032 seconds)
  done (took 10.681854778 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.347030285 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.529791147 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.616846968 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.042621161 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.348781098 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.349518781 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.25021618 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.349390734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.356167693 seconds)
  done (took 15.467648222 seconds)
done (took 85.283223268 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.347272829 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.337709709 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.279459535 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.353153724 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.35437954 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.682172374 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.340972689 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.597557301 seconds)
done (took 39.570988783 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.342319267 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.092129301 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.093038267 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.340310968 seconds)
  done (took 11.804611115 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.325497316 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.288870265 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.326802112 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.394026992 seconds)
  done (took 18.615303113 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.985097569 seconds)
    (2/2) benchmarking "read"...
    done (took 1.673877538 seconds)
  done (took 4.938684267 seconds)
done (took 42.979268692 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347218038 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.344002322 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.348213891 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.346811281 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.345329994 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.346919751 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.34547919 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.345174275 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.346392907 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.347363668 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.348105308 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.348094217 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346582358 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.344239751 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345968313 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344888155 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.348209428 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348820685 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.344949451 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34677612 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345135937 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.348382552 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.345895219 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.345785331 seconds)
  done (took 33.593836172 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.348531304 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.346706458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.348589829 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.34842868 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.346550737 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.347923276 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.348482423 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.345759007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.34994292 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.349037181 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34620223 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.345984859 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.349411193 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.346252821 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348635498 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.345981553 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.349499365 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34648663 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34767577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.347773697 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.350516548 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346164281 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.346635599 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349218811 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.347240046 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.347212025 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.349225189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.34681889 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349376905 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.346267264 seconds)
  done (took 41.7137038 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.355331701 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.358852971 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.349506219 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.349538808 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.349703701 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.350721107 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.350715811 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.349886836 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.349846295 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.349727813 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.349988525 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.351144088 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.35057968 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.349815039 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.350179758 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.351091956 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.350797141 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.351356175 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.350878211 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.350853077 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.351632413 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.350519696 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.351569217 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.351386543 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.350140767 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.351137118 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.35172023 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.350814374 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.351467562 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.351466777 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.351914368 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.352452177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.351567435 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.351998268 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.350604265 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.351865792 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.357207751 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.360413151 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.352750957 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.352172667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.350934032 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.35117985 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.353016445 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.350883317 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.352533276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.351679382 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.351732631 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.351812298 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.350770157 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.354649913 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.351231742 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.351199077 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.351915329 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.351834659 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.351066118 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.351849016 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.352465211 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.350590925 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.35136814 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.35230783 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.351909275 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.351908376 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.351779255 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.351607203 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.352783807 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.352357258 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.351405811 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.352249695 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.351080034 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.352843478 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.351435491 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.353116053 seconds)
  done (took 98.608008945 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.352027242 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.349094124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.348803897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.349256885 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.349386834 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.351281915 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.348947859 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351577168 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352014614 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.353594466 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352960866 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.350347922 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349547792 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.355968449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.354196831 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.350481222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.352742296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349641919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.352652889 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35347836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352664331 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.347564719 seconds)
  done (took 31.01243498 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.352653187 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351557494 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.351069609 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.352464195 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.351306452 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.351932328 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352625247 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.352816557 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353929803 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349747102 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350152423 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353488649 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.349181564 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349964894 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348858976 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.349218974 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351962463 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349527288 seconds)
  done (took 25.607026443 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.351632924 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.351781572 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.351059205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.351539711 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.350746812 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352132581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350302002 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.350657808 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.354620145 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.35226618 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.352893908 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351433564 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.35377256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349247244 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353056343 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.35212623 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.346496917 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345935023 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348455594 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345394032 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.346040381 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.349479523 seconds)
  done (took 30.994472616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348993664 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347975832 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.34584475 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.344735448 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.34492747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.347976137 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.346726637 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.345548803 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.346107872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.349414235 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344205551 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.347251882 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.345497817 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.347109614 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.344990807 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.345622733 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.346941947 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.345171916 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346837994 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.345324628 seconds)
  done (took 28.20722695 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.348154784 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348338559 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.347575999 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.348357861 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.349386645 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.34759022 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348838732 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.348194437 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350948548 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.348781368 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349535218 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348837737 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.348901074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.348758451 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349551522 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34889883 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.350562317 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349954781 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.349837335 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.349962325 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.348697647 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.349352467 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350216437 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.351454178 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.349000038 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.349495271 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349935666 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.349790411 seconds)
  done (took 39.059175853 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349153381 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.348530312 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.347734975 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.346659077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.346177539 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.346089826 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.348403901 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.347425413 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.349169925 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347020526 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.348856813 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.348435292 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.349329108 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.348648946 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34910856 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.35101514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350673024 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.34765801 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.347680679 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347132237 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.350941749 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.349599684 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.349646606 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34783761 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.346519381 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.35054553 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34776596 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.347628872 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349910788 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.347533813 seconds)
  done (took 41.734863429 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.368150722 seconds)
    (2/2) benchmarking "in"...
    done (took 1.36855414 seconds)
  done (took 4.017845996 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.347236897 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34966601 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.347951105 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.346998119 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.346286853 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.35116559 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.349425804 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3473636 seconds)
  done (took 12.066907967 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.349642456 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.349231648 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.349521789 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.349103922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.351658568 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.350517796 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358554694 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.366297479 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.353544648 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.349802602 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.358904624 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.364232644 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.354363881 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35073686 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.352136592 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.352238253 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.350866817 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.351589044 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.3543122 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.350193016 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.351791981 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353341524 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354305604 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.350128443 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.353898321 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.366393818 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.360508597 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.35191088 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351299802 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.357609585 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.35297313 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.348092574 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.354331956 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.353947074 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.351521024 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.352834425 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364713039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.373968413 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.360755594 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.352343356 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353864558 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.349203167 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.354117087 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.354977702 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35347423 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.354094695 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.351926285 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.349692446 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.351498697 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.354146364 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.357591474 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.351501163 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.348583836 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.358653982 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.353974215 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.361816408 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.368122454 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.356258708 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.362393191 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.367215264 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.367156339 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.362154919 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354532138 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.354945973 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.361898676 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.378290022 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361782647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.367067143 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.349674898 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.351873462 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.364504622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.366596649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.363835585 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.351988769 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353535426 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.351771907 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354327261 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.353182327 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361607168 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.371324547 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.353244635 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353097728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361690661 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375972902 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.352684306 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.353049685 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.353725937 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.351581963 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.352799915 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363938672 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.370531969 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.351531041 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.354358018 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.352493852 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.355223503 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.354133015 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.351377933 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354359276 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.350483114 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.353153346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352585683 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356439813 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.363058621 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35357392 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.353914574 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.362906856 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.354600465 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354116953 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.364190155 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.353918324 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354688031 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.354118898 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.362753748 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.351747299 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.359202442 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.361608628 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.353359666 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.353925666 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.354694298 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.354733816 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361927443 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.383184786 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.357125459 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.353838871 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.35939411 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.367672149 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355611732 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.357344839 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.35571339 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.351023136 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.351205965 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.354072296 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.356128144 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.35537098 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355491746 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.356832927 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.351380471 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.354987008 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.355607982 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.356633242 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.358093198 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.354684887 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.35683944 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.360205679 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.355182335 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.356748675 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.365486289 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.358909085 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.356298412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.359835804 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.355774363 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356916937 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.359202067 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.354192658 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.357474226 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355399376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.356703058 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.356497688 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357069725 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.35569934 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.357489484 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.357373356 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359967249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.355312859 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.361414269 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.356135734 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.35254537 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.356852368 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.356966066 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.354129282 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.355118926 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.355539195 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.358498513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.366374939 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.354597394 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.355856196 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.359764161 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.356185137 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355751992 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.356146526 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.359511964 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.364862738 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.355678689 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.364185908 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.357096715 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.357136836 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.355887635 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.355528817 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.354648796 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355415425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.358485023 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.364114426 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.369414462 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365022977 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.356942041 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.359600739 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.355281324 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.35668342 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.363201975 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.355523782 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.357010022 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355422394 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354682361 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35558728 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.35616495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.355469311 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.353613108 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.354635402 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.354232943 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.356142237 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.356793414 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.356232001 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.359007249 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.354153526 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355530668 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.356098136 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.354021404 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.352810579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.352742494 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.354919598 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.355380006 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.353294352 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.367791818 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.352320862 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354606937 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355327982 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.355831959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.354732062 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.354371073 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360223251 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.355289225 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.367148998 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373637035 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.356823238 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368874573 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.370301913 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.357560121 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.358597773 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.359286083 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.354417356 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.358046585 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.364843506 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.354075718 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.357235999 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.355853742 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.357668223 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355534356 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.363864434 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.354944308 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.354019314 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.355953038 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.359501624 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.352511253 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.359050613 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.358542717 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.355368549 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359638063 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356041253 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.357035435 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360227438 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.356767983 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.356841788 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.360827727 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.360963918 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.367975023 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.366952105 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.359368059 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.360640541 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.361447439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.363676884 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.358171733 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.358009229 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.360605302 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.370639728 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.367278886 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.365379729 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.360816248 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.35676592 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364872575 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.358843515 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.360575928 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360858379 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.359553879 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.357536759 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.354219686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.352787773 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359687445 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.357852735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35870487 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.361759387 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.363769242 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.358786475 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.358352072 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.356765777 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.357584307 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.358333281 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.359085674 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.359196045 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.366386061 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360749716 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.356858486 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.358205994 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36621024 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374304971 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.359149844 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.356517807 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.357986789 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.358785877 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.358551339 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.3583245 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.360025114 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.366339847 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.359757517 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.372511863 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.35820986 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369972934 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.356969044 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.36016776 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.365793513 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.355095539 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.359512341 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.358211762 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.356430221 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365689679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.373081174 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.358327294 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.360070435 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359093854 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.357267271 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.358136481 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.359101201 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.357639908 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.357276497 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.369821416 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.37910977 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.363997699 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360545964 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.357789023 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.35695284 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.358049194 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.356599295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362490113 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.358650063 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.357952663 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.356793173 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.35887099 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.35758298 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.359346179 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.35691957 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.356095423 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.355816049 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364320132 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.37234076 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.360589922 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.357031222 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.369945044 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357792911 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368599175 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.373970174 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.356645738 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.35748412 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.355821727 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.359630267 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.358343084 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.359000205 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.356759533 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.356263142 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.35834661 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.356807565 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.360387618 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.356259139 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.356192902 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.355726641 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365438996 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380541071 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.356484783 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361126666 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.355871841 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.358448765 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.362392739 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.354587015 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.354888623 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.357602711 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.367446006 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364414134 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.356098145 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.356540427 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35792521 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355744214 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.355476964 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.355322445 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.357250352 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.358238583 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.358705766 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.356897191 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361999692 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.355124182 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.358388164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.35823102 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.358030459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.368582204 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.358772145 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.356816628 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355929876 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.355497438 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.357319233 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.356526672 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.356633381 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35808258 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.355461226 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.357551486 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362228006 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.362626416 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.358281738 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.355100697 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.355684158 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.359087099 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.356618114 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355824113 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.355890804 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356587919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.357891721 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.356605486 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.359429784 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.353440275 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.354739613 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.357310209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.356378832 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.359102969 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.363323382 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356695762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.354373767 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.355815187 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.35634873 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.354266045 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.357294953 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.369068785 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359315867 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.369342024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.365596257 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.359666966 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.356911169 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358162257 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.365374188 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.355600649 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.359357716 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.355911347 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.360568897 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.356599286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.360094921 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.356991119 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.365379156 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.357687085 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.359585356 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.367572207 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.377608456 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.357215881 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.35810009 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.360619683 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.358257041 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.355981717 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.35528237 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.357204339 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365744396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.374978499 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35796525 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358727062 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.356959614 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.357571979 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.360260456 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357146531 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.359872216 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.353760351 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.358099796 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.358386084 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.358994849 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.353253317 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.358946204 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.357069356 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.359933538 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.365742262 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.355658226 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36250285 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.359380627 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.361301489 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.360237653 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358266078 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.355607281 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.356074413 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.358963031 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357901121 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.360045485 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.362880695 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.360518753 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.358297106 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.359290327 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.359104411 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360860994 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.368876915 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.366441503 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.356404395 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.359585024 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.358984881 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.364477709 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360578983 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.358918007 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.359821078 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.362358702 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.359869079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35736038 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.360145721 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.36240244 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.377413872 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.37752256 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.360924144 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.360064575 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365981812 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.360210597 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.357475282 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.360305209 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.362726593 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.362625769 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.366621744 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.359499214 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368098264 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.375981973 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.36244406 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.364538933 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.362835388 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.367383905 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.363428451 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.361929635 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.362121253 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.36340589 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.378011639 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.359415999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.370227736 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.390354327 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.376504601 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.362471241 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.35986095 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.361572668 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.361287572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.363503769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.363177001 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.361252506 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362319621 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.359484772 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.363037499 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.366389595 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.364758625 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.361590691 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.361234992 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.361432573 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.367883554 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.359818347 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.36187892 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.361262604 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.364387789 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.362847772 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.364049566 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.362302665 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375229332 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.375271762 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.364430157 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.361663358 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.360307079 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.365692494 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.365056999 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.370868892 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.368369189 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.362886977 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.362800227 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.362945752 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.364052893 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.360287192 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.36430777 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.362602053 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.361393132 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.360755783 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.376654875 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.37156085 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.370546365 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.364194758 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363170994 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.363682495 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.365466478 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.362523831 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363032171 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.366879817 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.363655492 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368114548 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.366129973 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.363705827 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.366559203 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.370749233 seconds)
  done (took 811.473160894 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362088683 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36100318 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.363315922 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360495126 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.359951355 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.361927621 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362836063 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.363898365 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.360206195 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36212813 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.362433518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36371687 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.361730892 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361150152 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361722542 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.362958002 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361066398 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.361352141 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362998687 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363736088 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362704085 seconds)
  done (took 29.898064118 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.365522015 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.363361744 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.363227956 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.365385525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3624636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.366359271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363170946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.365515968 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.365064638 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363058741 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36469277 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364688096 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.362556379 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.363306406 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364029486 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.365305771 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.367041255 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364329386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.366954134 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.362363215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367489923 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.363335879 seconds)
  done (took 31.316003336 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.367599974 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.364284737 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.364056287 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.362904278 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.367224908 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.363434842 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.367505241 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.367199767 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.365423983 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.368673709 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.365728665 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.366424256 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.372840807 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.371015494 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.370874835 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.368900304 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.510442776 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.366452002 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.36795779 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.366171659 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.363006718 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.374290226 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.363924055 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.365772775 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.365065404 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.366680995 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.365445614 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.366666356 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.368250178 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.366637249 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.370641546 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.367674473 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.367483388 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.369344187 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.365731674 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.368668308 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.370255853 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.368722451 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.365820645 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.368585962 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.37646707 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.385807314 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.367858496 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.376934 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.368026565 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.368951471 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.371255251 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.375486154 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.365672449 seconds)
  done (took 68.487699308 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.369150828 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.368425276 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.364392741 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.36770252 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.367260896 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.369937059 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.370313551 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.369095832 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.366777222 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.366882506 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.368714969 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.366224434 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.36656667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.369020061 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.368908587 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.365284185 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.366344702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.367628639 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.366440307 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.366608396 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.367055633 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.369513841 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.370604427 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.366993139 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.369231489 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.367411079 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.368292153 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.368937282 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.367397921 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.367600247 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.369436808 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.368018388 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.371744187 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.366777203 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.367463669 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.37091644 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.372210886 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.367456981 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.370078175 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.366470096 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.369449654 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.371548906 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.369744492 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.369412982 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.367405375 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.367641162 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.366409228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.368448204 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.368432903 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.37098463 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.37087766 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.367226273 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.370973937 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.367788669 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.372380922 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.370067195 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.369206693 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.368647929 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.371432514 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.368300456 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.367943365 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.372460929 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.368811666 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.371379388 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.370982497 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.367812184 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.368391215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.372066164 seconds)
  done (took 94.372746755 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372590483 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.372371373 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371322205 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372779977 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372689934 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.371888599 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.373587538 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.371937732 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.372673182 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371791711 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.373503626 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.371571517 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.373459632 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.373105086 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.373056599 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.371719614 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.373190251 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371669114 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.372163563 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372553084 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.373908609 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.372547377 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.372408098 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.372014964 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.374551739 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.374394963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.374441771 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.373079326 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.373741841 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.372879275 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.374967408 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.373815132 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371952388 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.372487313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.373755178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.373067007 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.37299115 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372787799 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.372473744 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.372041415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.372565605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.372407014 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.373454852 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.374889784 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373580356 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.375275299 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372875491 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.373332515 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.372109059 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.373039255 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.374373375 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373262356 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37467665 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.374705285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.374612585 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.372721171 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.373061051 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.374794572 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.374290332 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.375284864 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.373755657 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.374624607 seconds)
  done (took 86.44188517 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375866382 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.373936994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.37211214 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.370259893 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.374829866 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.373049326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.375632799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.375281614 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.373859803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.374004305 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374254329 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373369061 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371529224 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374767988 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.371972878 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37322982 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372730867 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.372216498 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37459169 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.373460255 seconds)
  done (took 28.773947648 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.373197778 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.377669681 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3732965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.372427911 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.375486952 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.374456005 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.37614929 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376659636 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372869454 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.378088881 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376039601 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.377819855 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374311751 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.374429527 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.376495853 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.375373759 seconds)
  done (took 23.31249257 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.373784546 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.374439234 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.375756217 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.375592178 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.37494621 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.373385575 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.375310496 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.374131389 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.37696377 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.378170876 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.376942496 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.376150706 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.376650155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.37719264 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.371802997 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.375591333 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.374957331 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.374244248 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.37718049 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.379394375 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.37512108 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.37296655 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.380021627 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.369776478 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.366730065 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.369408856 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.367708296 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.367618503 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.368089524 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.370660773 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.366301697 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.361906828 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.361662571 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.361872241 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.365845007 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.36167455 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.363361327 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.36534272 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.362774496 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.363335745 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.361697928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.359814014 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.361091389 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.361416903 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.360488642 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.361318281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.358564262 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.359616666 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.359326228 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.358168478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.361480197 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.363364387 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.360738157 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.358130169 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.359761937 seconds)
  done (took 76.568965796 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358971247 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.358603738 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.355156928 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.359444835 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.35530681 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.35259112 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.355522534 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.353589507 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352625576 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.354989548 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353922263 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.353172264 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349493436 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352014779 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350374715 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351370333 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349273425 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349168802 seconds)
  done (took 25.654837633 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.346117748 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.346801929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.347505414 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.345636503 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.346199256 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.349175136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347596292 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.346125673 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347411692 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.343422698 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343695123 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.346217367 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345349408 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.345996578 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341614456 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340136566 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.343359853 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342482797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340111261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.339536099 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.343192446 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34470667 seconds)
  done (took 30.86691623 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.339867781 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.339876567 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.355564526 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.38065654 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.368779495 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.339768373 seconds)
  done (took 9.39756399 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336561644 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336455749 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.33500843 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339251098 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.335791208 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.335366606 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33667237 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331980619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334919441 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.333528072 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.333775716 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333550388 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33542338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.333471897 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.335780264 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332897961 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330671438 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32944741 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330928354 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334094853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329695185 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33395646 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327575282 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327448209 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326402287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328363896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329799743 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328202288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327784392 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328653693 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327202398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.324776816 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327050738 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325743969 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328396108 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327888916 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325239912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327396423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327673816 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.324755873 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.328090548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327414101 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327450112 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325815392 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328315588 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325746218 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325058473 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325303102 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325020556 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328783463 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327824348 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325135674 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328193842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327781659 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327384043 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328754037 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.325181501 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325101705 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328159239 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325109811 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.325454918 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32829925 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32630271 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326408741 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328897342 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326198816 seconds)
  done (took 89.012141265 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.326859863 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327440409 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.326156909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327949978 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326207006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.325908751 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32639868 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326179626 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327301113 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325878039 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329263715 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326073952 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326171734 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326615336 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326309753 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326921678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326922021 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327117051 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326846888 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.329048288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326913866 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326619139 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32816677 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327076603 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327422666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328997006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326978465 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327153762 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32739832 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327115099 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.327863683 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327636107 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328321675 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32842011 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328578627 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328106559 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328054433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327218192 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328623691 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330580824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328383362 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331210501 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328050284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328419114 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329209578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328755116 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328189702 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329038647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328510901 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328402351 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328219131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328869897 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328534862 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328544442 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329297231 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.328784366 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329405598 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329303044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328422842 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330572951 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328930264 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.329176344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.332380503 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328928014 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328622204 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328769951 seconds)
  done (took 88.914394955 seconds)
done (took 1882.385759472 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.369379686 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.388551319 seconds)
  done (took 14.021128707 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.49235272 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.448120663 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.330859172 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.348378133 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.330009223 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.325870265 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.345969176 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.329152985 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.330786199 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.331293376 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.330698564 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.514757927 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.324279386 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.329753112 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.330946599 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.42474772 seconds)
  done (took 43.136136365 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333441579 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.339620757 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.367817291 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.339193496 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.339046255 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.377641425 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.405596253 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.342127875 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.502717234 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.385353043 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.705579777 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.342703891 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341341366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.600428715 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.374385987 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.381399286 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.595883432 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.70613633 seconds)
  done (took 27.046573185 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.748232205 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.335377021 seconds)
  done (took 9.35735096 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.33633661 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.354118125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.371915606 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.345180571 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.341490941 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.390498561 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.391523056 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.399410595 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.345368629 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.381613681 seconds)
  done (took 64.933255824 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.362018749 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.343389819 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.342129554 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.341221528 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.333989264 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.33598969 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.341971017 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.336978046 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.602540739 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.457295427 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.362123483 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.349348634 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342255251 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.344953857 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.340334978 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.377264823 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.469627061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.339920791 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.339540143 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.348914189 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.343393744 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.439290285 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.381953804 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.341448238 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457026989 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.622880546 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.345001616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.349314197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.478683943 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.339909935 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.343976728 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.343976116 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.346361851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.912843973 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.87533311 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.352604517 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.364056745 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.353249039 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.340752182 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.478158687 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.344219824 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.348386856 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.335782987 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.849737691 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.491550582 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.450947701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.469253126 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.345472171 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.345941724 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.403267272 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.343667928 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.345253169 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.374042971 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.095022096 seconds)
  done (took 111.041085652 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.372240708 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.824242119 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.506111835 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.353903817 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.843583416 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785487884 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337040366 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.595572336 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.357912864 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.801247784 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614435458 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.679022357 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.3358313 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.337148582 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.338016478 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.336626567 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.595649712 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.630550909 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.335927811 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.342462048 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.387128252 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.834728153 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.564058152 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.506451031 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.375354543 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.776581764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.562123494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.680657513 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.341664517 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.333337933 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.617568721 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330489436 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.334951784 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.332408352 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.596354075 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.660907355 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638948082 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.330139394 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337425677 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.328763034 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.349558157 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.762231616 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.647534504 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.565274571 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.694069983 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780442865 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326054746 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.323685591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.333140624 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.536234726 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.56984683 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.808870488 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.552609368 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.337583064 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.659363153 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.324775313 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.396044658 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.785663156 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.65657581 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.65850896 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329333196 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320193985 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320261047 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.857645473 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.324760658 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.641150037 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.416141906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320427174 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.642447357 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.646070198 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.651305822 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.785132515 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.362764692 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.328326106 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.394308204 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.821897134 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.604082077 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785511075 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.324166033 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319771382 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.629031054 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.32277938 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.59746073 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.865022667 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.800471883 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.373117505 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.342600667 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.32138564 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.787209026 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.787272894 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.569180934 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.689664097 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.599505554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.339220029 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.320598257 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.320742717 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.324070745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.556791252 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.334471178 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.686746967 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.782071799 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.09240082 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.367986794 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.853715689 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.561722043 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.333244333 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.322939524 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322459543 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.541035147 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.392649231 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.340789623 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.320404927 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.785038217 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.188232507 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.461305149 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.03558362 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599905366 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321095137 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.804227044 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.325145211 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783007275 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325838973 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848574992 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.017620618 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.376353981 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.54343716 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.687069721 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.332204121 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.799948243 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.848405196 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.546382344 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.794890178 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.057635721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320579063 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830284026 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.3423586 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.346434597 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.502724067 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339970225 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.594757465 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.333772477 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.807180214 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.357163059 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.594588084 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.350580377 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.81772193 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.375347807 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.595034217 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.353417081 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.448354633 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335572978 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309584976 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.513485724 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.670045852 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.315728684 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.893406718 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.313273156 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474980629 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.846705747 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.350450928 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.598837568 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31385576 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317184142 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625274937 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.353595829 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.06055523 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.314218255 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.588568003 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.282823116 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.765908123 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313782243 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.844600909 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.537576038 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.333123205 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316365462 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.115650053 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.314331151 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376806078 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.48832896 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.805715372 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322314809 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749842222 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314715096 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.552460392 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326701056 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316979735 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.670550965 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376591578 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.316038284 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.317713175 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.314842946 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.316399137 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763394738 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.355274363 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.037089588 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.466969737 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.796981018 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.624787373 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.803222038 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.375335913 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.333123121 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838495902 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.341188429 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.598979479 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.315912266 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.3542606 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776335786 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315766924 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.76137161 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.832954241 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.366813145 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.577789103 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.317120018 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.661096215 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.316741008 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.564477245 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644065131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.316906055 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.316028089 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.538766186 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.557299627 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.532506332 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.332648501 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.34191215 seconds)
  done (took 847.995004675 seconds)
done (took 1118.795775739 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.316595741 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.316575249 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.302753001 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.317733201 seconds)
  done (took 26.509974444 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.325793894 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.323196535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324318334 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.322698623 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.32492585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.322374632 seconds)
  done (took 9.200283765 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.398020016 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.315276596 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.316555281 seconds)
  done (took 19.288019687 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.533427864 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.509047996 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.671589628 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.340706638 seconds)
  done (took 10.313361523 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.325847382 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325362391 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.324660983 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.326787894 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.327074489 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.328114458 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.325246624 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.32634772 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.327161551 seconds)
  done (took 13.194619779 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.945138447 seconds)
done (took 84.707993633 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.303209835 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.440741329 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.623869296 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.31792064 seconds)
    (5/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.417379872 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.318132082 seconds)
    (7/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.44735994 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.718633211 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.180206181 seconds)
    (10/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.490026916 seconds)
    (11/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.327044436 seconds)
    (12/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.876249461 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.335246724 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.39315813 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.554760261 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.931411493 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.333760053 seconds)
    (18/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.842913952 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.326445092 seconds)
    (20/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.35935006 seconds)
    (21/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.586538409 seconds)
    (22/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.319493408 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.34482341 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.51749946 seconds)
    (25/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432729299 seconds)
    (26/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.917990948 seconds)
    (27/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.8754257 seconds)
    (28/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.84047998 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.664966582 seconds)
    (30/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.745222606 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.760142503 seconds)
    (32/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.346247474 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.601396734 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.324606235 seconds)
    (35/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.501169277 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.730628389 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.489925018 seconds)
    (38/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.856560285 seconds)
    (39/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.368653927 seconds)
    (40/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.91016412 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.596759374 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.818752248 seconds)
    (43/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.585166685 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.308057349 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429959877 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.318490068 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420782665 seconds)
    (48/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.666269147 seconds)
    (49/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.321366622 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.662667737 seconds)
    (51/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.144236732 seconds)
    (52/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.080201228 seconds)
    (53/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.125788054 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.350751892 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.527293413 seconds)
    (56/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.306759237 seconds)
    (57/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.33832542 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.346506857 seconds)
    (59/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.354375334 seconds)
    (60/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.32530138 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.431769757 seconds)
    (62/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.38420041 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582819257 seconds)
    (64/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.407885362 seconds)
    (65/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408241675 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.643831384 seconds)
    (67/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.32651894 seconds)
    (68/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.538557493 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.019192142 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.73727167 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.671492324 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.381647287 seconds)
    (73/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.348623043 seconds)
    (74/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.573857079 seconds)
    (75/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.483601288 seconds)
    (76/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.09712928 seconds)
    (77/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.546306866 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.104953238 seconds)
    (79/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.346425492 seconds)
    (80/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.839235769 seconds)
    (81/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.388337151 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.323053051 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.188452369 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.575844594 seconds)
    (85/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.774906475 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.326021824 seconds)
    (87/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.847894307 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.663915897 seconds)
    (89/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.324366114 seconds)
    (90/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.311445541 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.451743451 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.87122273 seconds)
    (93/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.386525319 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.115061311 seconds)
    (95/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.023390518 seconds)
    (96/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.355562607 seconds)
    (97/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.325194343 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.149910312 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.438111496 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.72124941 seconds)
    (101/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.574443065 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.464910122 seconds)
    (103/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.378260381 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.798672097 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.361304918 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.632414576 seconds)
    (107/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.733734629 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.324045247 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.674120622 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.310362626 seconds)
    (111/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.968108685 seconds)
    (112/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.450418769 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.667804601 seconds)
    (114/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.349314714 seconds)
    (115/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.033959037 seconds)
    (116/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.325058161 seconds)
    (117/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.409582663 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.350941742 seconds)
    (119/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.971547169 seconds)
    (120/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.818101695 seconds)
    (121/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.481882517 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.548305676 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.332290115 seconds)
    (124/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.364136298 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.057191455 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.374149314 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.436084706 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.310881349 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.326187368 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.427102074 seconds)
    (131/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.944181447 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.599496747 seconds)
    (133/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.322880679 seconds)
    (134/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.379513391 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.511842851 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.827836584 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.349896369 seconds)
    (138/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.027193759 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.448543723 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.582138673 seconds)
    (141/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.340072034 seconds)
    (142/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.887751901 seconds)
    (143/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.853818632 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.408857746 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.022668591 seconds)
    (146/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351905121 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.582595592 seconds)
    (148/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.937796591 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.411769746 seconds)
    (150/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.407768341 seconds)
    (151/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.796280599 seconds)
    (152/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.311070061 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.626718102 seconds)
    (154/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.473859335 seconds)
    (155/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.31562005 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.749568137 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.361840603 seconds)
    (158/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.412960074 seconds)
    (159/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.340652743 seconds)
    (160/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.615734878 seconds)
    (161/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.377796609 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.025846884 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.12277305 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.353602841 seconds)
    (165/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.589894802 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.107511466 seconds)
    (167/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.331980677 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.172944389 seconds)
    (169/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325847419 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.957074904 seconds)
    (171/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.715276032 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.361949989 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.327572857 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.034357933 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.062523569 seconds)
    (176/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.326775673 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.35452513 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.373219725 seconds)
    (179/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.127017916 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.313391174 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.353361128 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.821921714 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.327566894 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.628307674 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.933254417 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.943922361 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.380198535 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.687848063 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.41443878 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.683906762 seconds)
    (191/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.775447508 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.542140099 seconds)
    (193/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.523318774 seconds)
    (194/309) benchmarking ("sort", Float32, false)...
    done (took 5.306509864 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.381437593 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.375450852 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.323882682 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.369837931 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.510168507 seconds)
    (200/309) benchmarking ("sort", Float64, false)...
    done (took 5.559690498 seconds)
    (201/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.336154299 seconds)
    (202/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.354314507 seconds)
    (203/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.327846624 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.166121181 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368224442 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.089469165 seconds)
    (207/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.386898453 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.384179907 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.312472254 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.32630779 seconds)
    (211/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.454349104 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.729871769 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.341696536 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.818455092 seconds)
    (215/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.356425284 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.5968623 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.352900188 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.720647558 seconds)
    (219/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.365284783 seconds)
    (220/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.328493001 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.140785007 seconds)
    (222/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345618561 seconds)
    (223/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.338482608 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.950861369 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.544760886 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.326521381 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.799146729 seconds)
    (228/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.461216316 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.902054098 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.429532587 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.354398268 seconds)
    (232/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.658818198 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367210077 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.578111229 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370122743 seconds)
    (236/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.597370816 seconds)
    (237/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355774797 seconds)
    (238/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.401204768 seconds)
    (239/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.618512661 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.33002541 seconds)
    (241/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.412894204 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.731695136 seconds)
    (243/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.440439342 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.491721347 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.48398778 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.329102776 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.118462959 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.330212631 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.901234 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.437043546 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.134127844 seconds)
    (252/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.677102444 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.315990787 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.376264334 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.531341924 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.539649583 seconds)
    (257/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.39275008 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.406840475 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.356934169 seconds)
    (260/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.566677635 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.734960289 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.022100262 seconds)
    (263/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.508582672 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.635874275 seconds)
    (265/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.433487334 seconds)
    (266/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.894258244 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.322834086 seconds)
    (268/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.341600962 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.628714613 seconds)
    (270/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.331133092 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.330959799 seconds)
    (272/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.365789254 seconds)
    (273/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.030773548 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.210430391 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.646271423 seconds)
    (276/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.338209244 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.515139823 seconds)
    (278/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.943765537 seconds)
    (279/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.345878059 seconds)
    (280/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.439933367 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.348206 seconds)
    (282/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.917608394 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.416766949 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.195016726 seconds)
    (285/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.39445682 seconds)
    (286/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.672819123 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415540443 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.381467083 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.414775406 seconds)
    (290/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.43034849 seconds)
    (291/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.516252607 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.442877324 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.484475374 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.712606187 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.68213504 seconds)
    (296/309) benchmarking ("sort", Int8, false)...
    done (took 4.379898183 seconds)
    (297/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.321332887 seconds)
    (298/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.54324952 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.374063172 seconds)
    (300/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.695709345 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154382301 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.356173776 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.676743344 seconds)
    (304/309) benchmarking ("sort", BigInt, false)...
    done (took 6.333606196 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.366931274 seconds)
    (306/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.037456912 seconds)
    (307/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.155645891 seconds)
    (308/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.419967528 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.623729335 seconds)
  done (took 916.929887035 seconds)
done (took 918.19094622 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.367575394 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.361518602 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.344505942 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.366449564 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456601943 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.37806684 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.355321885 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.347360604 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.392514292 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.393934713 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343672765 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.377488844 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.347125851 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34638246 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.344188348 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35937325 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.297058287 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.34640082 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.361926791 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.355342187 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361814024 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.344336269 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.394851842 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.376795577 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.349938214 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.348863861 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.349445668 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.365733519 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.458022555 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.349433839 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.34924304 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358305893 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.287636478 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.342859192 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.340750288 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.365944481 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358314263 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.35621468 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.349647273 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.378710264 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.654372533 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.344485587 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.348106644 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.347415409 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.347737515 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.350889336 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.348921865 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.355097575 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.360560434 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361633882 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.662135316 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.361051558 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.35179944 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.347672152 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.358737793 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347361513 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35044271 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362833901 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.367279123 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362171691 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.282110875 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.351568892 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.349008695 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.364617249 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.356286006 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.687393182 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.342423997 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.352929765 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.67327164 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.353386599 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.690866978 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.3552384 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.350503639 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363129256 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.379835919 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.301589364 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.343904999 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.346790413 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.356208323 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.347343763 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.359594768 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.362067617 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353127132 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.347822223 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362732245 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.38175055 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.358688304 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.349932704 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.357698393 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.369962009 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.357260438 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.360550777 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.352063463 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.34454614 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359140376 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.352903444 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.3526107 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.353011848 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.35409805 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360972097 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.660567725 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.365455676 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.346802214 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.346318044 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.350364952 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.363470373 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.658387683 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.349179082 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.37242571 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.398761203 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.351506207 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.295899316 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.353464343 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366351294 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.360878517 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.353648705 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.345932197 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.292546681 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.653639965 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.364882145 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.35235409 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.349185343 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3670495 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.352428342 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.348732553 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.307487776 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.352540103 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365201044 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.472377288 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.361232209 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383036393 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349925391 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354003395 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.37936946 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368138361 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.383880445 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.35385437 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367561822 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.36837069 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.348185163 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36208681 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36153524 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353821559 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.358207679 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.346728877 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.379614474 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364531958 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364544156 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.373588017 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.473228995 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.34891125 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.298064526 seconds)
done (took 226.120396305 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.410503881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.347444462 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.443963466 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349210841 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.447414246 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.458328989 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.346174695 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346935411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345981852 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.7288137 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.346823081 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.34817662 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.349089397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.346119665 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431302314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.348904791 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.346557572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.690870371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.350606039 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.419415641 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.349267774 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.347698929 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.349936105 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.734454454 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.345240858 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346586699 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.42374316 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.34895743 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.699849647 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.343909732 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.342023594 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.700031479 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.445080584 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367408647 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.359842904 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357377701 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.460686107 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.364464852 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.443564965 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.43041627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.445188269 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.389000606 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.343769575 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.349580156 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352649304 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.352018873 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.347083056 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377341996 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.349003966 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.349611101 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.692181114 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.3610167 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.358861081 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.348080301 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349541095 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.371393305 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349136011 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352950518 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.43941404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.351601388 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.41978148 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736224745 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.755737954 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.351631893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.34871915 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.349817064 seconds)
  done (took 149.637242629 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.419501166 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4272078 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459840631 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.353288924 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.40394772 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.464204347 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.35196033 seconds)
  done (took 11.163938821 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35846764 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352398859 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.402465347 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.401920816 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352015149 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.501968466 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352905867 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.363353251 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.349742511 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.406188166 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.353627381 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.352380759 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.358876772 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.345512555 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401190908 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.363172948 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468475828 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.354621951 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.354193569 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.510346746 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34989553 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.359276454 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.405616753 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.364657191 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.354724983 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.35981529 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940212763 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.354763978 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.350874396 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.353107798 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35068056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.393301214 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.353969395 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.349387041 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351750482 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470735301 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.355203638 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.351803808 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.354506938 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.352410664 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.354222028 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.354049023 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.354327655 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.351777422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.354087092 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.377998786 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.35430045 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355013942 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.354099699 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.354806236 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.405328772 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.355267369 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.351431867 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.352300263 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.411243614 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.361930057 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.354864629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.35211715 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.355441144 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351368018 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.511588995 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.402570328 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354812572 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.404356881 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354953937 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355117797 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.355239662 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.355029679 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.409759541 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.355037981 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403491363 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.352481472 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.512523137 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.380216725 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357628924 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.359199781 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.358414788 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356698159 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.352910154 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.361993137 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.35259843 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.357734973 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.362251085 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354026563 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352864327 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46260781 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464726387 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.354197606 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.368886134 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.363810763 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.354210788 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.409396438 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356027939 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.353448767 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408846363 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.471978717 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.410528121 seconds)
  done (took 155.296395266 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.362961806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.36558041 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.358203984 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.373376476 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357339999 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355901892 seconds)
  done (took 9.461746143 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359639457 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.358283472 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35594639 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.357690163 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356878358 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.358450321 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.358956175 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.35933172 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361440804 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.358539703 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.358356582 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358830722 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.358995859 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.359899207 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.359039936 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.358348779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.359035673 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355268822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.358389839 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358081992 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.454442323 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.358566279 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358996804 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.359196785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.361700873 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359279995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365786807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.358527065 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.359489256 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.366129855 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.361295895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.359436115 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.359445315 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.365160122 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.364239672 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.359372586 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362751372 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.772283544 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355743888 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.359621146 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.360337375 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359760556 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.360370303 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360141622 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.361833257 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.364339242 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364636333 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367825499 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.360366191 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.36050125 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.360591855 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.359891169 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.360314622 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.36120841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.362903914 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36484898 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364472244 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.361313842 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.360100856 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36251369 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361553783 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.360287734 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361679998 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364210845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36687161 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.360714987 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361953668 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.364662707 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361156623 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360220335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.362652506 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.358361337 seconds)
  done (took 100.764709647 seconds)
done (took 427.604955887 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.825492733 seconds)
  done (took 8.11736175 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.414894776 seconds)
  done (took 7.708803935 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.973022378 seconds)
  done (took 20.270314908 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.400943685 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.416196018 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.371799119 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.357960532 seconds)
  done (took 26.840520645 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.571295626 seconds)
  done (took 7.863976152 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.353841541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.352416656 seconds)
  done (took 14.000234812 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.891005074 seconds)
  done (took 8.184786053 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.161389592 seconds)
  done (took 8.454415115 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.359567922 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.358028694 seconds)
  done (took 14.021216894 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.340229414 seconds)
  done (took 7.633112595 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.109708129 seconds)
  done (took 8.403413673 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.365971801 seconds)
  done (took 7.660653543 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.425153833 seconds)
  done (took 7.718701663 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.761905522 seconds)
  done (took 9.055656256 seconds)
done (took 157.226655247 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.354374095 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.352865779 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.35371158 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.353250446 seconds)
  done (took 26.70732482 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.395510231 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395593769 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.396504556 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.406010207 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.39804649 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.395392979 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.388573444 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387969961 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.406958514 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398189355 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.39742944 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398939382 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395769324 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.388778398 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.398811981 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.397923934 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.407158254 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397100529 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.388690253 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398738754 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.363148224 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406854966 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.398292301 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.363551783 seconds)
  done (took 34.765015403 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.563349724 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434761242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.51660013 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414483675 seconds)
  done (took 7.223898721 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415720765 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.415799275 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42687955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.466794941 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502452822 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.425015978 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390626058 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385252294 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370927607 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.415950427 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491955182 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.432377793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.509002652 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363660524 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.550885953 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363297865 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.362826783 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.41491683 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.468152341 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.479880922 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364623736 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414712306 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.418682374 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43228815 seconds)
  done (took 35.57798905 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.362782256 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.370613456 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.368835205 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364340035 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.363147577 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363638662 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.369455489 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.364492768 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.384734348 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.365564653 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.363244585 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.36394584 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.363393796 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.364118319 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.362606169 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.375975677 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.377238735 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.363746411 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.366703286 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.370297417 seconds)
  done (took 28.644627794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.358600918 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.212652194 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710692354 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.614663122 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.357940938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.35734247 seconds)
  done (took 27.908962559 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429172554 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.550994243 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.366908188 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69615323 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.775619649 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.367226487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.36604097 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.58615187 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.869146784 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.872429765 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.418200537 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.417283832 seconds)
  done (took 20.014292775 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.368512748 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.359105586 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.367440092 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.376392767 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416969115 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.370426548 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.371834078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.360199312 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.418084516 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.421881804 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.369810234 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417684204 seconds)
  done (took 37.916904375 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448094891 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.406267741 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.209421188 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169984302 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736939693 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571232253 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.137208242 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816641982 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.363349967 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634614526 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364419319 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45124929 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617282164 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359943405 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360958263 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.362396571 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589440507 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838847086 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361585075 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.191413738 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387277114 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.371396046 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.361382751 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389058354 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573175157 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.494744308 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.621995912 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361364362 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628139106 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374318369 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373471283 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361799937 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636398514 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001837092 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452974434 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372012936 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.133145451 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.070499285 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353503095 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.263980725 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.079711118 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365114817 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373237722 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36183407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.297393177 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363760103 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830505927 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.366006477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.073942623 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362510212 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373776702 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456773781 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.366095378 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.178726443 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447948403 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361696473 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.360571024 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369894838 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93767577 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.669755661 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366268099 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.299637066 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471413715 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.267503684 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994351112 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.463286593 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366789627 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.367899887 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298559422 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.250915812 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382879221 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.712842456 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383071455 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015053093 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068208003 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363308473 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296408072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909203701 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371602769 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.299780138 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592786414 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364406259 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300151373 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.305864883 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.299174844 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031032671 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371946012 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.714814107 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.372065263 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824363787 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.37449671 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38161993 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388961631 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.588716257 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.249918487 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364823366 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.150664267 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516822905 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.385383178 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.828893318 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299132726 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.368060686 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625118144 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.57686875 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372859185 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.380868656 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57982002 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368325614 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.382562192 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372705531 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.376768226 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.958783743 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375217484 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.683312933 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384308841 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366535077 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069429332 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372967418 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.468050421 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366021315 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605067305 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.120226802 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368353565 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448583114 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37515031 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366670622 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302752069 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.883676696 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.366457269 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.368960374 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379053621 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378522708 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.366808576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316945843 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.362507501 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380496884 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.368566916 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590640586 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374412072 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643370738 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301427016 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.716254511 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.458727341 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.589670879 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.528242179 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.364550316 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629209133 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37525397 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367888189 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.3802291 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386835231 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467251997 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390442856 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.3689383 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626096981 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.371410677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.372240242 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.2823027 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371357425 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369905949 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.372613648 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275575517 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.961063959 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34499337 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372647047 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258358575 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.382274598 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432613629 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.374226286 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378113789 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.080489604 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.266310791 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.371587598 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.365871594 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592734738 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379872881 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.20593953 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448153719 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.579147595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963170521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379799151 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.303850506 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.081079653 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.062083087 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370249397 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304607522 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37083064 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379994006 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380912537 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.597385187 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.967623059 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369439505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.206068309 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.375784023 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.380441488 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.376033265 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369381379 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.054949138 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.692770417 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372378443 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.382528064 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513575109 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383976555 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304462427 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.373543153 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376424609 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369908901 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371090649 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403952353 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.216433335 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865454049 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630674232 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.134158085 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379724093 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.303974176 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.403051493 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.370246249 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.188697537 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398226575 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.383647827 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378695133 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.38151578 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.212559495 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.046030423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939778806 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096571401 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910361987 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.354028749 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.373845012 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37164371 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.84067414 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304220859 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.929881543 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553044504 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.838275067 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315021449 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580882722 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.532858942 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09229993 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38215229 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600767934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351915002 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.191220495 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404646324 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583170403 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407301799 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37451806 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301993464 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.65699802 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640369189 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.128773325 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451033287 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.837997051 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.19529528 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393489643 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.373639677 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.655692147 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541577656 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.08452336 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.546615415 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371325679 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388007599 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.879748032 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.377348814 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.59994669 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014530776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373277728 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.599011501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.308044851 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384556299 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.384528497 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.375821906 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.572652013 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.380749508 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.627882663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.384654233 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30794557 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373867593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917876529 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.228512674 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.380036179 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373729223 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077746736 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382945689 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645625686 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.383445755 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.063159936 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379206786 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309722878 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309428672 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.067758139 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380342944 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.350800681 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851678911 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.46113502 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476542256 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391624355 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426779412 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.632342601 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.389796764 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974344242 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603611164 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.243438926 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39600989 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47625442 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238852283 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.381304263 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376055265 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.612846203 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282715895 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598181426 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.239813081 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.283607869 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375232919 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585227008 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.375116825 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.379776261 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.612586505 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.08503966 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.375860036 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087527325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398650814 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379668316 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29346854 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.483214431 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382879555 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455888655 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387276807 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.387379295 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.387234074 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545372612 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378498832 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380402437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.391273397 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470062647 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723617268 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.07424913 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.379748169 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981841455 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111305783 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.978334448 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388943974 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37779246 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387238654 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313574575 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526499459 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.604600192 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650064461 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50720787 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.520951945 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400442113 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.224608438 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402964233 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5904099 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652412091 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.273157281 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376988182 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407495427 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.377746659 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393212518 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.590172945 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863367916 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922214534 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496004493 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.383485738 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.843908513 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651677631 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379514336 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37951537 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972723817 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.388965092 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.671166051 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.383336157 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378541741 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528833123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389297627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024149389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.386669144 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.535059979 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.152525791 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.248698842 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636605862 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.807844397 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.38962143 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981626053 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.111022147 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640584982 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44673557 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390665896 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.4886588 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527157687 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.384099273 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380160481 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379740292 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430458442 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.090047248 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389010846 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984240094 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641316055 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.377661291 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.384002274 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403399776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.391597755 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60402866 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064675123 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605566816 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389848318 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386286645 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19770716 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982222399 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.390520001 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315564107 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.382958812 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615188493 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614853765 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403469634 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.833925686 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.092096242 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932125241 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.352652673 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403222593 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380257722 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.129533067 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979447977 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.062735827 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863594614 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938678858 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392436034 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656224053 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.385923427 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391697138 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657452779 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.38589107 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381412191 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393458924 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.979321453 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.10988925 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.389673455 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.253338757 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.320411093 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.722584289 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.099721223 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318335555 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391082644 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.567249004 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380608306 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514382367 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393296334 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.383779635 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382556471 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.140570938 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656334535 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386434471 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.372747602 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.295189603 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396930602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390287031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653899575 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381870309 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.060449124 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734506893 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640622477 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388676142 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.368871609 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.387011448 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383754486 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371880058 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.582426325 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.61029382 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931623534 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.383965999 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.394770059 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38756839 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.600232628 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595379971 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.38442277 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396370012 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387721628 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400345859 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.289873834 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.894739215 seconds)
  done (took 1607.550374596 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.38604309 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.399677918 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.384962228 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.445414142 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414474125 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414633244 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.465313674 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.400354772 seconds)
  done (took 52.632350799 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.392707578 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.6190516 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.412810897 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.388317851 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395675868 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.385464608 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.812297321 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.385692763 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.392844396 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.396276756 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.385948634 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.389104368 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.005236439 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.396158163 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.389730247 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.381818286 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.395046772 seconds)
  done (took 66.248061244 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385463832 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.77015713 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.468665518 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.401917288 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.232655206 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.398842329 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.867634584 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.410872291 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.387720671 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.573783833 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.029128547 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.393580882 seconds)
  done (took 84.6446365 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.392059431 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.393459235 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.392154861 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.391928889 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.392533049 seconds)
  done (took 8.285597572 seconds)
done (took 2039.41531746 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.641187015 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.062902896 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.011849824 seconds)
  done (took 5.39771425 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.533956643 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.582681204 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.703872155 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.729199677 seconds)
  done (took 7.873177853 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.671610098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.773568879 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.587617677 seconds)
  done (took 6.355795255 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.715494057 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.401196038 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.463258225 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.384745861 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.387539885 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.384772999 seconds)
  done (took 20.48244262 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.391205617 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.394134853 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.391331427 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.393261675 seconds)
  done (took 6.894060431 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.372576365 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.117158323 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.371334348 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.384540244 seconds)
  done (took 18.570659198 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.138074045 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.151489437 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.134776609 seconds)
  done (took 7.748240422 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.398718754 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.226964451 seconds)
  done (took 9.950143564 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.707900064 seconds)
  done (took 3.032429698 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.523633556 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.654823059 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.461800915 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.328261953 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.511146152 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.022263838 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.936935169 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.541222577 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.317176152 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.43719808 seconds)
  done (took 28.060285347 seconds)
done (took 127.909568699 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.029301466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.63558983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.594454737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.99707741 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.614478587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.594312227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.593113387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.963971958 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.550069885 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.500786976 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.998141039 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.612327556 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.749173022 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.632347803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.751165378 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.635621168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.614810686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.074221818 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.676600352 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.916271796 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.595701865 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.640637958 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.82577346 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.664394785 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.611760289 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.545042432 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.220979963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.388193693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.85877099 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.294705692 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.545325423 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.095435908 seconds)
  done (took 192.347678041 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.388953704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.387846939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.387844208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.399943261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.390191853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.390933784 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406642085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.38874042 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.387042633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390154078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.388293187 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417282106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.3909538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.388764247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.389527712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.389465036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.40121932 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.388710257 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.394083628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389233045 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.389961314 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406112548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.401610381 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406087362 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403810487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.401888508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.402408406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.387948801 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.400632909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.389534414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.390722498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.390344426 seconds)
  done (took 205.956442239 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.390541243 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.388165105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40502724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.388670583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.401913855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.392076359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.391766773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.399628495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.388831751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.400164884 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.398158689 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.389195137 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.391714091 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.389649022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395509544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.389222332 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.389927097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.394543382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.391414961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.390151927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.39239533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.401811863 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.394156618 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398555263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.394483931 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.391137214 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.390908362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.404308072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414738939 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399774792 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39373898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.391347219 seconds)
  done (took 205.964876261 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.586743941 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400447113 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.400456421 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.339747314 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.399747252 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.399396293 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.39441553 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.595745206 seconds)
  done (took 14.849032642 seconds)
done (took 620.444625025 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.61589444 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.342257275 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.591452198 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420614741 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.132218861 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.420412053 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.419696456 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.584520709 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.879271112 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.571917106 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.632842746 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.417226881 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.780397935 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417973313 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.660164602 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.514730175 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.238430169 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.344465123 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.723288325 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.894308846 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.665232992 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.927606632 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.581968035 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.935085141 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.79100542 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.953771481 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.124515744 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.242904203 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.41736573 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.722642661 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.960508884 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.351444154 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.474291743 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.455461785 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.512765765 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.497423529 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.352300776 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.454117742 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.598166333 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692501642 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.911552135 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.689006557 seconds)
  done (took 95.245695695 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.389792651 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.389891242 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.389213317 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.389420145 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.390281288 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.38968786 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.389355816 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.387709911 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.389504873 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.389231924 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.38993456 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.390838607 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.388518515 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.388997877 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.388934759 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.388580608 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.388969622 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39209379 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.388639616 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.388195878 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.389627235 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.388205903 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.389825877 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.388409989 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.391317674 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.389573607 seconds)
  done (took 37.457107506 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.402623339 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.630458334 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.798097388 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.408743218 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.402263447 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.405873593 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.474445484 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.402707782 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.404764232 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.406025943 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.549036772 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.404990414 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434799103 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.80496427 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.404206174 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.402146615 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.401754654 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.402378164 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.638982053 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.412565068 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.491061963 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.40276042 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.474975777 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.412443274 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.422383246 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.404443237 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.407062732 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.953766054 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.405631327 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.550441828 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.133063636 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.472175979 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.901356681 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.813662212 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.133045382 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.405782796 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.405244827 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.554884356 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.404110248 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.404186112 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474590475 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.404537723 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.81003119 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.014134486 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.419855515 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404594894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.97589859 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.55337017 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.629493135 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.413434351 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.827155435 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.408393143 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.40569544 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.405776337 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.630300505 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.41084455 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.405802511 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.826482785 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.410076874 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.47592106 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.406055339 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.405930995 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.64652324 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.405708116 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.634143948 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.407142466 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412051806 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.406057216 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.810400174 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.41083591 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.032017931 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.420587198 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.406196758 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.551446171 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.634438424 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007306759 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.408960445 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.648020727 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.914323634 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.475491589 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.410024899 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.944043599 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.477398966 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.4081141 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.40903648 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.407759739 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.406215963 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.504800611 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.475193225 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.965321192 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022058128 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.844282795 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477936829 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419054295 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40865225 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.827187139 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.406792881 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406983467 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.803681552 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.030217394 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.422453545 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.415190048 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.0155891 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.423649855 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.479592483 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.41237665 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.813860159 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.409057466 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.451101717 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.407457697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.413607885 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.410516808 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.479483804 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.412621954 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.407940816 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.003511661 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.574614486 seconds)
  done (took 183.238949931 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.399586788 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.412686835 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.413798772 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.398248786 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.399940974 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.406828893 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.399365499 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.401113604 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.406543078 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.400065068 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.401146107 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.402631525 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.401657046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.416873245 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.410084604 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.407508188 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.015028301 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.401386899 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.401314661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.399522169 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.18116607 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.40433037 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.401853801 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.399872833 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.406287485 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.402507176 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.425885292 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.402020326 seconds)
  done (took 154.059215331 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.408763001 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.929875664 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.409076728 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.529294081 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.429378642 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.406781662 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.528709749 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.461437481 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.410759536 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.406431659 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.406391132 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.687321445 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.407875047 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.89062404 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.581059611 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.530434476 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.891019956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.410464973 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.407182984 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.407382972 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.531665959 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.414301913 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.69075021 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.936487506 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.410013823 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.936640485 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.398693273 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.410557792 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.408742064 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.937542396 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.408680076 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.692384401 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.481330203 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.463123579 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.93712999 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.890298588 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.890021798 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.541923432 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.408834442 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408381573 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.407522001 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.398470233 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.937749251 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.411085907 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.411178043 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.931084793 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425705081 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.411541711 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.418367785 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.408628359 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.465319277 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465879719 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.696047965 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.944129411 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.482343361 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.429008801 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.532113699 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.771154341 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.413131343 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.894901615 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398583099 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.942497648 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.413851304 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.399760663 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.410833678 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.41493179 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.549092408 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.531152029 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.897521522 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.413468573 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.897319393 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.549240444 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.408799597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.40932702 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.412492638 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.941127731 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.897702741 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.549817668 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.534157195 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.586922698 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.399487207 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.411601253 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.401045129 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.481979376 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.410639093 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940412738 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897245384 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.41400047 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.413367817 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.413366472 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.413527541 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.572779852 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945997075 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.483279952 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.88736469 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.710018411 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.698538372 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.41236096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.467036996 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.411500602 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.698670127 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.41248433 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.464951083 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.833150793 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.697994139 seconds)
  done (took 166.188344137 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.636952395 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.5167112 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.496176337 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.51829718 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.92497416 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.981118048 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.444833141 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.480711395 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.498970484 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.524536557 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.035855477 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.501588706 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.587039224 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.480741478 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.082227572 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.471692352 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.499446712 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.52042076 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.514231306 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.418143964 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.988896849 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.685603173 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.554794419 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.250680022 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.465186763 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.124572759 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.137686853 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.905423841 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.568180589 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.480527594 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.905539334 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.531677153 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.090107879 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.009590768 seconds)
  done (took 65.178746968 seconds)
done (took 702.698370855 seconds)
SAVING RESULT...
DONE!
