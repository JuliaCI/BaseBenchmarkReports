cset: moving following pidspec: 32476
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.19322844 seconds)
loading group "string"... done (took 0.522709987 seconds)
loading group "linalg"... done (took 6.754778822 seconds)
loading group "parallel"... done (took 0.158788641 seconds)
loading group "find"... done (took 1.108461811 seconds)
loading group "tuple"... done (took 1.69791305 seconds)
loading group "dates"... done (took 1.17760381 seconds)
loading group "micro"... done (took 0.22120553 seconds)
loading group "io"... done (took 0.975921881 seconds)
loading group "scalar"... done (took 37.829555581 seconds)
loading group "sparse"... done (took 11.352440292 seconds)
loading group "broadcast"... done (took 0.975339853 seconds)
loading group "union"... done (took 11.881785806 seconds)
loading group "simd"... done (took 4.218691804 seconds)
loading group "random"... done (took 8.664293609 seconds)
loading group "problem"... done (took 1.745274778 seconds)
loading group "array"... done (took 19.960496497 seconds)
loading group "misc"... done (took 1.685747647 seconds)
loading group "sort"... done (took 3.095352904 seconds)
loading group "collection"... done (took 16.617386798 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.473341365 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120445305 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112652527 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115806384 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.137405072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112860014 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120666842 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08279677 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.883805752 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139717858 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118150468 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.405384475 seconds)
done (took 4.931827007 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172973264 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082335522 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08109735 seconds)
  done (took 1.234582744 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064453101 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119797317 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065610622 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06616047 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065867436 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066031951 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066189028 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065615593 seconds)
  done (took 1.584393319 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072948163 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068120058 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067162721 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066981929 seconds)
  done (took 1.34681944 seconds)
done (took 5.486134736 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.751709344 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197271241 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180670373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.386941133 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128391407 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160782729 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643506121 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320027264 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181046021 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079795253 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102448121 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316140089 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105415572 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.652084161 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076492205 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089114684 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138881519 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.406135201 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066813113 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082014044 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088717518 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127876048 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087410674 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074741797 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.14542493 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067106035 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127555704 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079654856 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066766905 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204844182 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172590221 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.726662942 seconds)
  done (took 10.146422733 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095564793 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.0960962 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067933256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122353711 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095057469 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06945859 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070450719 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066809454 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086036526 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126251055 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087777277 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099721096 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065453505 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068223426 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083870792 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202672894 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079138343 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080823444 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070059043 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074949719 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105054007 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077695624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077023409 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076576356 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127631071 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179870562 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095784412 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097027162 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066720059 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079527569 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115176819 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12627771 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065910218 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065862207 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.1231779 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094292927 seconds)
  done (took 4.490110539 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.893532608 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.137839768 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089701631 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159152363 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06686086 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105020512 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064962333 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083304098 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196042911 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.032212309 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.430780786 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109993945 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08388927 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067225388 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068128602 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06655608 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.332027946 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108865773 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111213627 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082962076 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073207788 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068394249 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340680931 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066569787 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065902922 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068028814 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05816327 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111690062 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067641324 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.954013721 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.085429675 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066086873 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099927022 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161855105 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085868858 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131739371 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064302939 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063996643 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144461063 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072322621 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06432963 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081159459 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101348557 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.100065014 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069245101 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064943889 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.288507286 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06912092 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084062493 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.709696732 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.156170875 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.095186433 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066983341 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.241690829 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084583628 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066171585 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064005923 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089506865 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.195346847 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129492608 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065994577 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068941365 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066377889 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065494649 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067286151 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.709421481 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069275488 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.108804932 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069682265 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077547893 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069625323 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06619599 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072446923 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071576827 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084304468 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066601454 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068014785 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065393945 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065502552 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.0679301 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083783097 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187898936 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067122213 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066589878 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065064442 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085151622 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097118219 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068568931 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064986383 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100932125 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067214069 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066750672 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100277813 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06626527 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063855152 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062900766 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083447805 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069056789 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117407605 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066064726 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.118512809 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066140273 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097164512 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070461651 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099600533 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.169078102 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06791424 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.221100729 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065188776 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064539959 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066358545 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065765533 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067554191 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068845668 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078795374 seconds)
  done (took 20.415209644 seconds)
done (took 37.01725238 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.277786676 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077911826 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077059804 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073940165 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073797122 seconds)
  done (took 1.739982513 seconds)
done (took 2.881364168 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117769337 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097432527 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064413105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095013155 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06358168 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098934261 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097933495 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080472804 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098169827 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063889644 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095297526 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063827278 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063438539 seconds)
  done (took 2.259197757 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081707782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082662069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069696135 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083085403 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064008455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08295593 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081998514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08951188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080964662 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0717549 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063089804 seconds)
  done (took 1.986447658 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080936682 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083640124 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069910866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08358743 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064252682 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082437281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082273401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085445124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080604456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072700968 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06360451 seconds)
  done (took 1.983403555 seconds)
done (took 7.359334324 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076252494 seconds)
  done (took 1.2018048 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.582593652 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.022252159 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08003864 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109649695 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180581783 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115632177 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.263395854 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084122179 seconds)
  done (took 8.743427448 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08815129 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068502764 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069092274 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081161982 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06905204 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06879127 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070487636 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.0678884 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071024889 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067866513 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071131746 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071522982 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069889636 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071370921 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070330873 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068850011 seconds)
  done (took 2.345185347 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091078193 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089495408 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072655143 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073774538 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071362548 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071757788 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073541288 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07315316 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070096342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071491507 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073735719 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072808547 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070797631 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064415926 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073552942 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075027881 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070233252 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073030167 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073644319 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074372013 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073419922 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063826679 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070568705 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073643505 seconds)
  done (took 2.990336657 seconds)
done (took 16.415999788 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110197952 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071429056 seconds)
  done (took 1.313319575 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080590258 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081809194 seconds)
  done (took 1.301444581 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081270671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066016187 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08825704 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077007424 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066365179 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065538154 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085774026 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065839203 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065506495 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065825961 seconds)
  done (took 1.866550546 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068391482 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077418089 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070474915 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080367283 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072677136 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0635464 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07197458 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067101166 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076939048 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062591132 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070584744 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081374139 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07046387 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082523969 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071466716 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067542719 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070079179 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066527026 seconds)
  done (took 2.433895105 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06513622 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066440345 seconds)
  done (took 1.276400249 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067200166 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063264421 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066143967 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065897476 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063001031 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062467588 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062942999 seconds)
  done (took 1.592664958 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.373184715 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109411144 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291063753 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071349591 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080810185 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.245939752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064976814 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070020912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070349157 seconds)
  done (took 2.561272756 seconds)
done (took 13.491941535 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078575285 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08527821 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093025291 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.3357803 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091135153 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066010672 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11610698 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185249401 seconds)
done (took 2.209287028 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127478765 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.554821883 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.364060106 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.192742948 seconds)
  done (took 2.259748563 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312442423 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09075594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060537917 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068471934 seconds)
  done (took 1.688242821 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065651359 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068144426 seconds)
  done (took 1.287785845 seconds)
done (took 6.518199461 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066133407 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083936591 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066347687 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064852621 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063683165 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066484419 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067719188 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063227876 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063176075 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065418586 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065585512 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068147275 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065743538 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065592546 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063203905 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064136524 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066500605 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064795381 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063922955 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063697205 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06314305 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065599548 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063062781 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062961289 seconds)
  done (took 2.765041259 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082506095 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065890603 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071330892 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070736693 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070080754 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.0732778 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070620773 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065776774 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070458499 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067410363 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06926409 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069395118 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067440767 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069791003 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068152932 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069481109 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070540555 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066161103 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067916262 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069592807 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070479141 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065844282 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069206103 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070326658 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069062295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069251245 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067619465 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06624432 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070235821 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068853566 seconds)
  done (took 3.24766822 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069646719 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063179862 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06475727 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070382557 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063692875 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064670067 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063280544 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064169548 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064734383 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063351842 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065135989 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06376841 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063842661 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064655725 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063958517 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066733397 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077941222 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06384284 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063287813 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063910584 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067102084 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063406233 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063816051 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063117038 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063999201 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063128635 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063354538 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063290093 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06386998 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062942872 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066296355 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066585223 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063088693 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069817039 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067136784 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063531654 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067379593 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063127966 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063897764 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062662063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063296264 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062839806 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063450222 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069833895 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063303833 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065160614 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063734071 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064543183 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063989104 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065811725 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063005858 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063252187 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064658285 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064713775 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067311747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062940664 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064201764 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062664892 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064254303 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063271555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062822654 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062745486 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065405887 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063700457 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077341399 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070054046 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063254263 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06492972 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064420736 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066148038 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065026163 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076528315 seconds)
  done (took 5.857372822 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090497712 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085928271 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065188278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064826654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061781035 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063860766 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067012816 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06382942 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065266569 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069906077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06402881 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065119132 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064932558 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077496379 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063864343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065051058 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068904457 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061498373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063502602 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067129603 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.175966776 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067073212 seconds)
  done (took 2.777593012 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151105459 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069381402 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104078144 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072342967 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06721216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072622318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069518129 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069253652 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070066826 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06781608 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067778194 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069614837 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067550799 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067579525 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067935494 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067827029 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069605072 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067935901 seconds)
  done (took 2.528456503 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076721954 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065899574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08570211 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066237838 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065484115 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068345825 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070606071 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073778599 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068131059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065677754 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074089964 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067718502 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068073981 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065543621 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0680289 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065519085 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068223604 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06580154 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07382434 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070155801 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070096977 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073643296 seconds)
  done (took 2.708325634 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079487105 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067593218 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08221511 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069172571 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061602416 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064372384 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069595115 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065962859 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.06983998 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069596706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066420917 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064158535 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068993971 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065561122 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068866551 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065781114 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067413459 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065579213 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067885593 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062129714 seconds)
  done (took 2.534929607 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085843476 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067448124 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067728728 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075079409 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067256447 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067281791 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074790719 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067237239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067320132 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086890622 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067000974 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067195347 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07461822 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072019993 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066941719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074692744 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07428011 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074761017 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067359288 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066811725 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086286693 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067555196 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074595385 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067297082 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066950749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066987414 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067634494 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071145148 seconds)
  done (took 3.173946121 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067028853 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06645812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063515751 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063717468 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063486632 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063587081 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0643636 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064040306 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066655014 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063655995 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065968514 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066405905 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065968509 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066935516 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066172401 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065954996 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065913398 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064152744 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064043568 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063912662 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065947613 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066178496 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065682769 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063824527 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063346038 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065725746 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063531205 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063604543 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065711762 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063604041 seconds)
  done (took 3.127054327 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074718026 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072816513 seconds)
  done (took 1.325120545 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063457919 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080011832 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063493156 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070331441 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069719616 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066654272 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073324325 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069739092 seconds)
  done (took 1.728717015 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082357235 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077590624 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068055914 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080270948 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076935772 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.0829269 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135997053 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067421364 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072809623 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064397056 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079357747 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065618701 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071999184 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066328313 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071853041 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072286383 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064363157 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072224354 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068447705 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0649365 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067251994 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074853067 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068524748 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061983834 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067100032 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087404296 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077266524 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06546073 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068687342 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072915588 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071019646 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059770516 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065478789 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066331289 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063769602 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07567869 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081136548 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068715834 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074826981 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067229238 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076185379 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061580686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070445825 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071836407 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075260702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066387823 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066498238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061003934 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063658693 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068430918 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061232465 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066240677 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060782233 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072174002 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069181021 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078482295 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064739205 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067013385 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068332559 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068898213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072865684 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067993836 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067958457 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065585094 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074856641 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070229548 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074498635 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060969794 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060269523 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064310333 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075267377 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088031105 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071838833 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066248518 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066309538 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06355403 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068840549 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066551305 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070767196 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071316668 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065896466 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070433727 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072568862 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065781031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068051061 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073206327 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063413021 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067772958 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062889486 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080237772 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063528044 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062567834 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063008529 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07405175 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067469631 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064205046 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062846049 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071451112 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059439831 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065445861 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065623116 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065204342 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074513268 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068863944 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069119017 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073029592 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071619689 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064874173 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067594707 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061445493 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06516006 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06345165 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070976333 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058683175 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067333252 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064924866 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.187678579 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075720937 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065553551 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066877679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074200841 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.0720239 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065764913 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062855719 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069601064 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066606697 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068907367 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07450143 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065065596 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062054592 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062170141 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069594991 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066410647 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070362887 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071203574 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069387003 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060856108 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064200747 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07240236 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075073289 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066833803 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067495857 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072457328 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067384879 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065249828 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072418843 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068727933 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065934673 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072080867 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066882154 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061736498 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069623127 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068749325 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064586562 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069612366 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069669458 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068197861 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066961984 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065405954 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073747963 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067362858 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065614761 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066855435 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065801601 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076216488 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068558315 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062125547 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063459821 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075464154 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064529123 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065834025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065431154 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068200217 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066917454 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064506999 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065830667 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067621628 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076531228 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070295161 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066688234 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071772262 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076909401 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065805556 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068763539 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065906057 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066937367 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066819115 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074253153 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070913114 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070130237 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068249666 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063565093 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071696254 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073379693 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065762729 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063953653 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065319166 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070102502 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07175701 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.0696688 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066800346 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064187494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066398728 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069101973 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068457554 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065517567 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065207481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071955729 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063862346 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072472933 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066387992 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.074923097 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068223727 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060490788 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067806863 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063505539 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070906743 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060601093 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063015064 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064199186 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065653905 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064257196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067585172 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05948532 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071249013 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072078094 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065460884 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064418137 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064823956 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071511382 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065967011 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068980389 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068782282 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069915241 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075070721 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064176857 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068375475 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.204152006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.0681226 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062044626 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072908757 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066198404 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066737371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065943115 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065222776 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070292949 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076134791 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073962083 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060990706 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069337423 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065389155 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065960593 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062623585 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071330488 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069815312 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067771646 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073284124 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067435163 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067031719 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069584866 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066495751 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067262722 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067496467 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069414534 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067394156 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068385539 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066065602 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069153155 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065920584 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064951131 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068893625 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066854913 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067411857 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072153697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065866643 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066987354 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068847836 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067216451 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066729553 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067165938 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066065494 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069184658 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067804379 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066857087 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068856513 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061711105 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073888965 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066479884 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074153237 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066638708 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06402492 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07367279 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069072574 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072299539 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067813119 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067814497 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067681455 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066702074 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069231112 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073610878 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064755339 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077287242 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074405713 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067009118 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069125071 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067273884 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067867216 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065351193 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067162745 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066838691 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066786262 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066043721 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071037895 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06917806 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06642312 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068924521 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06710375 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066726287 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067095165 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061358509 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065835808 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065695678 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066033367 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074929853 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066498734 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065771709 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064848237 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067325622 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065270998 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06330658 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073758544 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07473733 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066289152 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072939047 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065632865 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067545752 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075695057 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059768683 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063332817 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062871213 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063272734 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07198463 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065615911 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073510311 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065430848 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064749383 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062639984 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065477549 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063848447 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0597948 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063378529 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068421928 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064466614 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064187244 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06541952 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067648495 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065883551 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073938125 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06446529 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066083064 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065334399 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062454683 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064331072 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064589941 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067761855 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065417734 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063090348 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062632739 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064302335 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065762133 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066505022 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064664019 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066229596 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071114693 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064439705 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067440809 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067256126 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062952006 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067263589 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064802784 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06438893 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064204072 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068249304 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067853062 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065722972 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073316485 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064466443 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065505883 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064749429 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063071262 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064191591 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064603798 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064800218 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064019188 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065827622 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071930763 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063108635 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067476787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064962461 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065304263 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071040289 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065410665 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068102687 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070689719 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065198754 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066701748 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072451658 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068893997 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067984343 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065296251 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068631525 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072520931 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066077502 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072390308 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065190493 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065039713 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066738126 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063212558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064985315 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064565258 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064186403 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070382667 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06575968 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064303032 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064698847 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063185623 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068247254 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070026667 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074161483 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069369668 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069733975 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062243862 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06275901 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065673808 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063333252 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066357377 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067458763 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070268292 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067247711 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065289602 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064060088 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075854854 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072559443 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070652574 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065041279 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06799415 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06525009 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067148742 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065820963 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06515718 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066248935 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06905741 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066536614 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064764755 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071613847 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068119113 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067904043 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068416709 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067814908 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067349398 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0620008 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066141495 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067080881 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069720487 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066789719 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065246621 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075240092 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064168975 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066827165 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068168068 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064637732 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069651739 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065479453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068847426 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066412953 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065837718 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061070527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065722825 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063629561 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0675807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064812358 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060624441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074816174 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.308866407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072496573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06834684 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068248574 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065324689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064657111 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069061417 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071205349 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072649963 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079953915 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068863046 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068365827 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064497303 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068864503 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071898322 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072390911 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066086675 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063998181 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068140734 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071734589 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07413297 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06737485 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068229154 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07198403 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071021719 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066611054 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071883716 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065345193 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072018689 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080300219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068538776 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069036162 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074354533 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075806218 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068659635 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063485778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068395955 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071455662 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069027909 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068961341 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069156386 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082953344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071232933 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067384055 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066975156 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070749863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067697386 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075840655 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069152257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068779563 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072332735 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070006726 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076202599 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070899946 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075249323 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070937476 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0708307 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067180867 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068383194 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065754953 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066599479 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068480426 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067947434 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072080849 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075234759 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066516457 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077515343 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07574549 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069125837 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064434889 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06658337 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066675848 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062187835 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068195586 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065246116 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064957356 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065141459 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067012391 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068015737 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072163638 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067955354 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068134851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066800278 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061269634 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069012564 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069684114 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067831109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06390917 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066874675 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067244193 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070415886 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069655395 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064367101 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06823619 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068479137 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067706819 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062034833 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073148391 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065846472 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068739954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066272187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066725518 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067723876 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069868484 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071412886 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067489287 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068786118 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070211936 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068734988 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06394344 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063881806 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071507324 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064596366 seconds)
  done (took 42.315727515 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101071802 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06465228 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063221873 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062901196 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073939586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063462499 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062323178 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06351974 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063619054 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065601533 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062266289 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062601885 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071192472 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077746745 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07384256 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067115376 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062679733 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063577971 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062279151 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063326451 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071100954 seconds)
  done (took 2.777481387 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074734523 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071029789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072900384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075815466 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067724534 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07092707 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072836481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07120044 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07580935 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067320414 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075691539 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070642791 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067277066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067127205 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067215795 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071225495 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075734481 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067713124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070699833 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072690931 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07135575 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072666444 seconds)
  done (took 2.873165927 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067853157 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066259608 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06815796 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061732883 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066369663 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070855056 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06985544 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064280389 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069939215 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06567135 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065283401 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065351819 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068171658 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062198174 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066407249 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064695421 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108204411 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069630249 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066610316 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067296008 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062484834 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068807939 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062058635 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062879327 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065698583 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069983515 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067161916 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066374382 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06821519 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067597803 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067691366 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066337442 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069576648 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069200384 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067816338 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067231072 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066812029 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066633792 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062342917 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064817029 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067175207 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062932975 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066795654 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067813465 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064744272 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064478754 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068565267 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066727268 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061876796 seconds)
  done (took 4.599018178 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079640598 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107345465 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067945084 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088100598 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079729834 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072871902 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070024392 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089604739 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063815896 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064777469 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081389613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082659703 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06644632 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070614887 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072943241 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066262075 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067210999 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065465449 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070204091 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065960382 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070327292 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073650802 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08012148 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079027128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07016912 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065314862 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0657051 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070451351 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078568627 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070576992 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071153566 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071965883 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080653703 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068643695 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065857816 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068608928 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082101524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066312939 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068949333 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06409664 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068321663 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070301607 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072810112 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081605164 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066735889 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071366117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066229576 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063414867 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078430552 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068757955 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073521323 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079820179 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069976922 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066265426 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070456706 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080762337 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066034134 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064594246 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069549638 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077951375 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064009479 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0701191 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079146696 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068151279 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07262138 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079861698 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071265661 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06958946 seconds)
  done (took 6.368233124 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075144535 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072374199 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080240465 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079684107 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072548441 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072391608 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072457637 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0728346 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072523565 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076918199 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072631086 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092457566 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067947745 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0748875 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072242466 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072357431 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072542223 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072763813 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072421515 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072274262 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072560134 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080212787 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072391651 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079753616 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09816553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068076837 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072472066 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072543775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080226904 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072811581 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080163187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072673472 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072550079 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079975387 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079619619 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072463012 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065740378 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072445114 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072626676 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072067725 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067912697 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079901163 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072230825 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068054908 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07302516 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072017936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079984152 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079439306 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074840206 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076774228 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072474959 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079796228 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072238474 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072797128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079960294 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104848538 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079569802 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079914855 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072561784 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079555527 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079524199 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085756035 seconds)
  done (took 6.029830241 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083369826 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074856714 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075459272 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061664251 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064467035 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069773245 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06443847 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064483533 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074095197 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074603952 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076204939 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069670226 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072221759 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076208343 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069595577 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07217805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070151048 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069933781 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074427453 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070049349 seconds)
  done (took 2.758843067 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074636799 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083233505 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067463447 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072168552 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069653404 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071764335 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068672469 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069054175 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06734914 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069360973 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075736172 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075803866 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067111624 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071881244 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075787444 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071914721 seconds)
  done (took 2.47397201 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075389889 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071738874 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079676015 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066369061 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064452398 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063043399 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066087202 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061771185 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06276812 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077975337 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066647583 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068244904 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066134797 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064738124 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063193703 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068683847 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062849063 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063709132 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065808709 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078500288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076753512 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065001368 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066788632 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066580131 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066205703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071461672 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06583403 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064021108 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063738015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066597767 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066765847 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069728819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063463169 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064358685 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064688676 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063716791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066145432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066544017 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068596261 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065688129 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064310763 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066063925 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066087358 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066880703 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062763102 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066365062 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062299155 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068412062 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064074504 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066341906 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066599987 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068597624 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06648124 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072884345 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069123035 seconds)
  done (took 5.012658082 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080254146 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069734339 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062323997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064975753 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069749236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068120035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069459931 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067705493 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068283563 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064193981 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067739884 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068641835 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06820472 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069756248 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068363472 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069491125 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062787998 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067938477 seconds)
  done (took 2.564220038 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070977762 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066568066 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073818938 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065712455 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066246868 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068666475 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062351927 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064978474 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064997057 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06623551 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066047629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068577357 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064826546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068844264 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06657998 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066284046 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068250961 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06491614 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066335519 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062292335 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068900191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065174385 seconds)
  done (took 2.79642409 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073123947 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092310753 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137705148 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.08373117 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08178898 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079458605 seconds)
  done (took 1.878248325 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09054395 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079375074 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066893433 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088408281 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073180518 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067794461 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067609243 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067923759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075744559 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076147958 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067457057 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076160043 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075891575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075235432 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073738242 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073577026 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067747394 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067526033 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066610286 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084332444 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068208616 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075916018 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067828206 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067265157 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067405639 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075307771 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076055958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076190976 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067424083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075555247 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073042061 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067580923 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076661106 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07586902 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069823793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075880868 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067684626 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083952698 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072848775 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075050229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069075971 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07325935 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07598226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072192476 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076084231 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067486481 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072117931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067522382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067655487 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085589926 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073371919 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075345214 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0735777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076268755 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076228656 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085504983 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075866015 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075427314 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073373423 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075897916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075150217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073460632 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075025577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076479957 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073587704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077789711 seconds)
  done (took 6.209541042 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081565882 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086765318 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068235281 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075960757 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075650899 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067815735 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067728213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068404934 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067795182 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067883492 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107315978 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068554994 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075285749 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075387166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06792089 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067877651 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067907529 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075179016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068020746 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086008395 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067680908 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075229598 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075432609 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075067689 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075993605 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073281911 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06793624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068119999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06798909 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06789009 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072344682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068071238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07529525 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067542387 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075701573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067829387 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067649132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072261612 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06778661 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0736744 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075693866 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084085151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068219876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067555634 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076081591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067909255 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067577383 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067474249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068208072 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067682244 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076060925 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076472052 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076365205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074798773 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067667045 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067754854 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067649645 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067809054 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068206931 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073147399 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07520304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067376089 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085641132 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067905377 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067821671 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075407534 seconds)
  done (took 6.124361373 seconds)
done (took 127.708876058 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187879914 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.171990519 seconds)
  done (took 1.685050299 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068529828 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097500323 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079170459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129525212 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067156423 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100265251 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098972407 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078494535 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066949613 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066783665 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067355836 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068553797 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132107772 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067332797 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066903481 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068474453 seconds)
  done (took 2.665186889 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097495325 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173641088 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099891006 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065257074 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096950526 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073295231 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065249188 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075101638 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071194315 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065979604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073122382 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070947452 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065653777 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070933376 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071250518 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073087082 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065781928 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073497055 seconds)
  done (took 2.790658587 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099893507 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.099639447 seconds)
  done (took 1.546702877 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161006617 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.108575001 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152737104 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34062669 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159410936 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.23285713 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132299175 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130556467 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.127801243 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125393285 seconds)
  done (took 3.010598529 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098487642 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.146451063 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256257985 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115421322 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07327573 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.091605317 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116829148 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078358971 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078100126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077634174 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077746548 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076557116 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096550597 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074115344 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07376211 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076674354 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098987786 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072811948 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07554547 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074604153 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096602918 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066365208 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07364826 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072842494 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074752107 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075236973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066103956 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065804427 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073717684 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073874278 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076493331 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089382343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074770234 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103267754 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070101282 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104580449 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076263148 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07123946 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073526756 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071081495 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075803238 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075313723 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072281999 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076144027 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065911662 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076407894 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06632493 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065885509 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078071799 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067273269 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07797775 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07703389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10544043 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066915185 seconds)
  done (took 5.896616285 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.667004775 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103317601 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070596261 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10755504 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096569696 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072658968 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.69038241 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090645491 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.173446811 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092406636 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088573126 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070306765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081010323 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083113628 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108925142 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101598558 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093866062 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071637839 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101151017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.098098922 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068904885 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093579202 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08990422 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.406535112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067799428 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070085938 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068221683 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070143304 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109162339 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07768992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070300874 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120290884 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084608373 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.120067627 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067901483 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068339394 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068124805 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079553774 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177323712 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131669033 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.130006066 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067827709 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068222931 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069121797 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089575216 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068053215 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108980659 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079315341 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116769443 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069449544 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069435381 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067183986 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068588495 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078691506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076159911 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079730065 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226657433 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067634095 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067703183 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070460621 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177606222 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078314726 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078966084 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091796193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.12703632 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067131418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.689943253 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083675621 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067165133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068975722 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067038077 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069284367 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197017345 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.119384321 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.342599513 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071033809 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070534543 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069012996 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.17576357 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078523585 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069449116 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111687442 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068408566 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06904652 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070269646 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069831772 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.117170301 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079539652 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070107523 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068415843 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070187884 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068582874 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067973297 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.162109316 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079705224 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079720985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.156459089 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069649158 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111659166 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079491161 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070583254 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080150753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069422411 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070393002 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069911581 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079049851 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.095494306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08047977 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071022565 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068139001 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097797142 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081050807 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069261547 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079214823 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.427106712 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079561919 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067910538 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080476061 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068471653 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.11036071 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070277698 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.175395939 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069579051 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078797066 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069149765 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067575656 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068635 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109471696 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070571753 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069045739 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06976526 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070441242 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079507679 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132542351 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070627879 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.157438216 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132726723 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069751276 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11786104 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068085533 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.114745352 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070007121 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068638109 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069339636 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.713124874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067847561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068010879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06883805 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148889006 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067631436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07879775 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076645436 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066964013 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.6918117 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077677607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.210616583 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080975767 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071131026 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06972713 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068658239 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070844401 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109649378 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144419362 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070815537 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068769804 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077963036 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110320852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068183009 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078161585 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078593054 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078695331 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069774855 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070427449 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080695716 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116858781 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078568123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.135210899 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.512858631 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06909908 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078200091 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142978871 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068878853 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084956168 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06859992 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0824893 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.112054705 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076377352 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225640693 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.112321541 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.147940959 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08028763 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082172828 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067931278 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068063425 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079793385 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068456184 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070542576 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078374538 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070007922 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070032379 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083726567 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069056467 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.172919876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067704984 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078887071 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067489154 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070246176 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083264608 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068718488 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070006786 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079028519 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070383261 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077539981 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.639828566 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077760032 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068036964 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06971628 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.132669554 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.110984297 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068069856 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067892354 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069742824 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.107647154 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.15423873 seconds)
  done (took 28.150851851 seconds)
done (took 47.100472075 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.20631525 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148548413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.19889264 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116848664 seconds)
  done (took 2.115490711 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.12178188 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100206135 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093984014 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06535327 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100853724 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065104178 seconds)
  done (took 1.932327789 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.300573691 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20584522 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178114998 seconds)
  done (took 2.064299169 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197111782 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184673096 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.390489995 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.24961329 seconds)
  done (took 2.507615482 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141771159 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088392073 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067152192 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.0830854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13206502 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157833336 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100065859 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123843058 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077775164 seconds)
  done (took 2.404992487 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142427488 seconds)
done (took 12.561548837 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100645829 seconds)
    (2/309) benchmarking ("sort", Float32, false)...
    done (took 0.146418997 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.195875605 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188560936 seconds)
    (5/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.158656791 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.225055187 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.19121286 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069891624 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.145270651 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081466653 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.121738178 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.07724768 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.082674947 seconds)
    (14/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077153461 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072760865 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088961135 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071358688 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075857602 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080714834 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075386033 seconds)
    (21/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149631701 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.08267586 seconds)
    (23/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066496921 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.141978447 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08978445 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194756119 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194955307 seconds)
    (28/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.14685492 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.136345257 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075190814 seconds)
    (31/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.152572679 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.101802465 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.144941787 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07164428 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071228108 seconds)
    (36/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.166130835 seconds)
    (37/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.157460265 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199095439 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075181087 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068524706 seconds)
    (41/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062217113 seconds)
    (42/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069044204 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.123122974 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072658182 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134124187 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087343397 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086625168 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094315337 seconds)
    (49/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075043986 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07195317 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092903639 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079432881 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.194878579 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.063225295 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.147059229 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073125634 seconds)
    (57/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.14774857 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.168779094 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.105100633 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.118469188 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.193585351 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07209236 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.138292322 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.124319288 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094660856 seconds)
    (66/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072825905 seconds)
    (67/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063061227 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092481801 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.108870106 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108788633 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077723176 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067378844 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.160799261 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.136571055 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051220527 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.136141738 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134017281 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176288821 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077382311 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077210415 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065011316 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078046965 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073162863 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.289274841 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076417439 seconds)
    (86/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074994989 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.183159054 seconds)
    (88/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071236528 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073227081 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.135896235 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051612082 seconds)
    (92/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088118704 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.067057809 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.0669495 seconds)
    (95/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076620322 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115100881 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066587421 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.06636249 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133929391 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053430189 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147363572 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077909869 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071872589 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.161591374 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075661411 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.134407946 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089198415 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07103052 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051195131 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051385525 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07287103 seconds)
    (112/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185119481 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098026467 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.137777498 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167051047 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061364446 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051066757 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.171165761 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072497378 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052086321 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091653412 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097120834 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066749118 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079783503 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052500835 seconds)
    (126/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073745595 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06830841 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097841847 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.372556675 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051181275 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099783424 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076245654 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052945954 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115554414 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.076931817 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065621547 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138248192 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067103543 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 0.131942303 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073331321 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.111481433 seconds)
    (142/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069424267 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05220168 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089552602 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174645058 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05237796 seconds)
    (147/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065792747 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070614671 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.136578976 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072193511 seconds)
    (151/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05234136 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088432342 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066592918 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10655106 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.075729093 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090989452 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071750503 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067473063 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.14629366 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071932802 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.161460252 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075201215 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066558111 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051618511 seconds)
    (165/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109026339 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072357157 seconds)
    (167/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.098460716 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064864384 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072397784 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051518777 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051759246 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.094619974 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073540053 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088044655 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110578656 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07559975 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127424408 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0527383 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066355282 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052766227 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108551572 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066716727 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07106105 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081829477 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123959235 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064703971 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169107855 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067254258 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085737196 seconds)
    (190/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062108088 seconds)
    (191/309) benchmarking ("sort", Float64, false)...
    done (took 0.12431675 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117944649 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061201174 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050892836 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050908547 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.23482779 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.165418265 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053603708 seconds)
    (199/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075133288 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075882062 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094112805 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06816377 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067623598 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087305928 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08864931 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090626023 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065242724 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146664092 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088789214 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073296386 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074679045 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06973985 seconds)
    (213/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072212095 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089799207 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083363157 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054640855 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05134551 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051337233 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073258925 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074327285 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052015311 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13890204 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079334583 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052540601 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.05354556 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067737368 seconds)
    (227/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.053662237 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066107889 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071961392 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073111005 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051770344 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064577353 seconds)
    (233/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053054709 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097744567 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089659448 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.171723793 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090888698 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067887434 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134313479 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138162275 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051385747 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073446504 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065224543 seconds)
    (244/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052185186 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052213818 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052748293 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052945146 seconds)
    (248/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067918914 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065825753 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051457335 seconds)
    (251/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073428604 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128023323 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067668913 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054781566 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068502815 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067994271 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068160012 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072065979 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.14744337 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066370561 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.051243933 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051757711 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071855639 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064368434 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073285877 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066730123 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065374858 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054082693 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052383371 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06848961 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065308874 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065365694 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065112782 seconds)
    (274/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069654229 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051301859 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.091635373 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072336838 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068079729 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053067577 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063981566 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080586323 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064196674 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051444986 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061140383 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071073017 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052254615 seconds)
    (287/309) benchmarking ("sort", Int8, false)...
    done (took 0.137515912 seconds)
    (288/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052090551 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052965752 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139166587 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073058851 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053063536 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067648963 seconds)
    (294/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071861804 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09659427 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08613236 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117559122 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.167923257 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052869322 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070709956 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065001861 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065163207 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064284192 seconds)
    (304/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086525123 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07027377 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065535613 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077877551 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.163724772 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051103683 seconds)
  done (took 30.272528628 seconds)
done (took 31.66650421 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088522008 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096077443 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076754146 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092660302 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080100186 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076526817 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072231906 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077631611 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079331659 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081067864 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078000015 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055318008 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073868535 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074218329 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074004788 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090555193 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077715665 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07224637 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072873717 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064743436 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073338995 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066050394 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067644002 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055510112 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07764402 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071491937 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07203065 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073737077 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06594892 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066096597 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069070211 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073072209 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065789241 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077885066 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071995699 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072744564 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07408807 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076420634 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067189997 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065765996 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073845221 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066101522 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072816773 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073929916 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071478019 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071147862 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072825472 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077716195 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090489481 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068062486 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074585097 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076423533 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076127222 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072415878 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069695617 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072763227 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070846644 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090526762 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073076508 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068185191 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073835627 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073785085 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071046129 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072735754 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072851721 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075273127 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075467728 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070950849 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074417588 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071233282 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065644661 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072353363 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069037898 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066017553 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075199548 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076195308 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06456148 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071143848 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072718342 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071365314 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065397815 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067861017 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067383114 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071402609 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067649597 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055096211 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068934827 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071412902 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064949199 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07326609 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071288073 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072453586 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066836064 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07558581 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065265353 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07059901 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065534955 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065494755 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0666931 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068952563 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065260197 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067168645 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074564369 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0667888 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070907266 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077712177 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065045706 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071098889 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06429585 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063989561 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07822124 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073699105 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064872213 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067067924 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064118794 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072069386 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064417486 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064714957 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064845883 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064790449 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072437735 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066808052 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068455064 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072833208 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078701975 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066442913 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068592969 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066600298 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063977321 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068867599 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064081385 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201484187 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069907195 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065832241 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07053799 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066053905 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072866026 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068089712 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072723517 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067693008 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073496441 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070270678 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071247808 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071359442 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064658873 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059260502 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06834301 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068530282 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067674744 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065276126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067131296 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065221955 seconds)
done (took 12.450817174 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06855881 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144786925 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098137815 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094112168 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085164842 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065817509 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075834091 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100479586 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067360724 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101411287 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.08608308 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084653493 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111151867 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065084887 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066018088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069795025 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067128949 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086455625 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100075798 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08611596 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108584784 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065130504 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093387854 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089210859 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087187809 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101000547 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06648544 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069777941 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06985031 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090429871 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086208456 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069366346 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066480873 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097251828 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091982761 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083089728 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066117926 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081883423 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065917242 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065807182 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086616179 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097372107 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079447548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080054981 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072118134 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068828213 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067601602 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083061451 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088855814 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078472315 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085957922 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102578229 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069150632 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.07987388 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065175331 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085218738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07974671 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068810214 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066642828 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068641308 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065732483 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069229012 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086024065 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088379051 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069585252 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079805714 seconds)
  done (took 6.820811046 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086378663 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092452749 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084173163 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083338436 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065701958 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066412874 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066675865 seconds)
  done (took 2.032870879 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069526294 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091311978 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091260577 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090507325 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084332465 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086823324 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075878855 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066935384 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082202538 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068197772 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087166443 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100993293 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067914398 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073157608 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090196687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066336032 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089512379 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066537126 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.06937442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089689921 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068763101 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.085654115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068605406 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066678649 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08052568 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067064386 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112564311 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070657992 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067813556 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.06974358 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064954537 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105862977 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08052212 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.073264279 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066301829 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080546202 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080973578 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064699256 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083126029 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071736498 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0806833 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067018034 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067497013 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064993632 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071010992 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.0773731 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067704671 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067342089 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.06923746 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086360963 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067782601 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080294978 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066693908 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0702778 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068002755 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07160498 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076289572 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067620635 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086729704 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068464758 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08333361 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082659056 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080881232 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0854902 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071480447 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083078587 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083318589 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071683401 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070863592 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072851456 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08583462 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06667365 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06853973 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.0784211 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06984315 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090963897 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089850212 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068079884 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07639867 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066616154 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066584429 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06682311 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088809167 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069379644 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066798884 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070415396 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069583364 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064281932 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065637205 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070058295 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064656822 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06786565 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069165028 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066444437 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068871808 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081827773 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067001583 seconds)
  done (took 8.789730297 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072005293 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068937633 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069446352 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068148928 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067954552 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067491234 seconds)
  done (took 1.921839866 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096554042 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069817956 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080347592 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071841838 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104031175 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081730945 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.081229295 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078296104 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083599211 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079045295 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081002943 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081871968 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.08630216 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072911081 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080649217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072465613 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081139966 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07602648 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078392996 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072955884 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086706873 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072827536 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073109471 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080956886 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070182364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072012781 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076151745 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078867418 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078372741 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078781873 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072400964 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070106745 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070043446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07833706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081317083 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070572808 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072186155 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071415611 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076348245 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070075935 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081859101 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073141922 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074505482 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070922521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078264323 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070501965 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071149003 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076060372 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080772067 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070997218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071277531 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071830282 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07019005 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071425812 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070198018 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078382034 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071050494 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081113768 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072392991 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070723079 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069733937 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069979595 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077942927 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070163813 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078727217 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07075981 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070352604 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073006801 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072793766 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071720844 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071339918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069271564 seconds)
  done (took 6.93678638 seconds)
done (took 27.975763282 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.548413834 seconds)
  done (took 2.022671099 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.637197308 seconds)
  done (took 2.140358072 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.441484577 seconds)
  done (took 7.946105395 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395449626 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.500591691 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.713333765 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131920592 seconds)
  done (took 3.2661454 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.670967006 seconds)
  done (took 2.18391595 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.21497528 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196043702 seconds)
  done (took 1.930320273 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.382172372 seconds)
  done (took 1.890821346 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.120314772 seconds)
  done (took 2.633714681 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266344657 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152980079 seconds)
  done (took 1.931058106 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482397546 seconds)
  done (took 1.997896512 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.869159697 seconds)
  done (took 6.385041477 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218072406 seconds)
  done (took 1.767554959 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241785743 seconds)
  done (took 1.749386102 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.720844899 seconds)
  done (took 3.229603449 seconds)
done (took 42.58451085 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083263959 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083080981 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081257263 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077956376 seconds)
  done (took 1.818408481 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079924235 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075400003 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079184498 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074949959 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078006637 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073186176 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07432411 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076729316 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07267482 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07283567 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072487144 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072808668 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074975158 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074584659 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070899523 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074985272 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075711038 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072258836 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075413328 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072609219 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070846604 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074686851 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074875552 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072302809 seconds)
  done (took 3.295594258 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081154702 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075435025 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077285063 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073321423 seconds)
  done (took 1.82618167 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080425044 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093870248 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092406426 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078587541 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093295696 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086329475 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069130594 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069168763 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071130951 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076912878 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068382894 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09594954 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087659076 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077439698 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078972012 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066210822 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068611635 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086953564 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077059279 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077723241 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072779771 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077585976 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068245242 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087742917 seconds)
  done (took 3.418254552 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080317189 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104621961 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077176313 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087482196 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08886395 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065601778 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074759242 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088947549 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122617607 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065568293 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070534554 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065869223 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072506836 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06531816 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076555741 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104847949 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108428926 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068552749 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095534701 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065678378 seconds)
  done (took 3.175931219 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074828961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07019744 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067101996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069064711 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077071699 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072662382 seconds)
  done (took 1.959764844 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069072177 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067117833 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067357868 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067059002 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072044191 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067056857 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066181542 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067134243 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067241468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067130245 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06683227 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066021143 seconds)
  done (took 2.332830986 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.341261726 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071510846 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072567168 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065885376 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070823042 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067057012 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08021052 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068305585 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090462573 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066477612 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066736801 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068243343 seconds)
  done (took 2.653650009 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207216903 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079133353 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232846156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136831695 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110886785 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114770456 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103418265 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112888037 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14165314 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10255747 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166009021 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163287363 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107117541 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135629636 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088971699 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098046967 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153220299 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160201344 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102855434 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163699686 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141683919 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123527091 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145116825 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100802137 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104614138 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120830945 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071058967 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079975913 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167363089 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129811308 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143998521 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110096099 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092566755 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171561596 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166254112 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139046574 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132316328 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083713226 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101140241 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131745879 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194751886 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087698867 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158762931 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245048124 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081265622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138815599 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118919882 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119628844 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106237923 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090116523 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144717213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1814129 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137787893 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087118695 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111117211 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113182217 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115931375 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103480123 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17933908 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159411193 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125750133 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071747759 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099282272 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151785711 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131071965 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108105256 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125197313 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093173098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132213969 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152960218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118173012 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14122832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127545117 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088212773 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118045095 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137984765 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126522054 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16695856 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123181535 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07241817 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123009481 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10160647 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080599752 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141248319 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074946244 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171609466 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09761661 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105051951 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112553297 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107924113 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107988017 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158101853 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.284939285 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105868211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066696028 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103684557 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119472823 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145823087 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088197381 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108044923 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114594223 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078064384 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137695053 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075025307 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12243 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075448932 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123342287 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129119111 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075778501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123769856 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100162141 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099723511 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131735323 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158257883 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088505605 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082117831 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164552786 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121265271 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103350727 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142089768 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154393788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097964782 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10149008 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14767844 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177646952 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089428513 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160490864 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106490476 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0832408 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087319398 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122907348 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11108584 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120856031 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082277756 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11664557 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164921637 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074983782 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094027328 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131159944 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078279977 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079833281 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101873269 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099322782 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094173607 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099051994 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102918846 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136551155 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121257665 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.249039338 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127973012 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099279618 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169151786 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088825449 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101219786 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103109686 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070543874 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135312342 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15636521 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079052331 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163098608 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122412173 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104935841 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117275843 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082434511 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138755594 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078868732 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070726464 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141644628 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109261233 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108657338 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14919005 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104262921 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125360785 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118788744 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133071378 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131019907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127531445 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105036337 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087576378 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110305681 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124329084 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073023681 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090814895 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079683093 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102981703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095026734 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083357996 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140240115 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123249507 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099633472 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110092785 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095437492 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144716232 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075792657 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12636074 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.116844749 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09316817 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149085881 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149438429 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129117567 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098025113 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141329883 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070213564 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218894373 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094188499 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125174057 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083740963 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084130034 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116908418 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145349008 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128590622 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136988161 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110923983 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120908922 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153625293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069810673 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115569364 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14620228 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120804549 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103944447 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089670853 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09904328 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141278098 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107133443 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177775348 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112038273 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121545343 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151358182 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098963072 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07965002 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104925199 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135060723 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104426608 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142505815 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098912891 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087847728 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108756132 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074880477 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099256239 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125335536 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119087474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134165633 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113174572 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129617367 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076383565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114316603 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124413536 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119753758 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06443174 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117396755 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15820884 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093222222 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116232026 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149963118 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078652104 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122988662 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322855599 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146978224 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085295687 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109896888 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117966165 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127306855 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119315207 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138672566 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109397145 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133329494 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109055273 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084853299 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087404032 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096881774 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104433434 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094830527 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106681576 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113801907 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095307478 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13028448 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102130289 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108472581 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117184849 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095881569 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089214717 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096665087 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172719747 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118852749 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168951666 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098116871 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142828837 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161186181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074719229 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078661554 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077824925 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13806779 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083774781 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129683342 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097208615 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105117759 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122973938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139121701 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09375805 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068294135 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10651174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131564717 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110692784 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097253899 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102910335 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15925362 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099552867 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079198393 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112710111 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102830516 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100588892 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316216974 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062764615 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098109466 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076426682 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081563865 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127317468 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151445275 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081469852 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10334877 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117790024 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110154476 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126759872 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100685517 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098604234 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11354098 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148820197 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128167507 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089742678 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111227649 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127637621 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154549867 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104214272 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095381972 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169231982 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150210278 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157686935 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088648942 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113126376 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112963806 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106819154 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136898444 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083230149 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163928305 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081978972 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134095197 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103302191 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107541156 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128839078 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098513337 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088027009 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144835833 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116016393 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081897744 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077323349 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115503605 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118313121 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105233155 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075094339 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136597433 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072757248 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129875985 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165672382 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227262376 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105949632 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096949823 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080430109 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108372608 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102744886 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087821563 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098826854 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170927332 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08775519 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147442458 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139959629 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113440638 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135176001 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099716397 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634310609 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077528836 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154210511 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115400144 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170368943 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097445541 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11597035 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108411219 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123091901 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142283329 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104750123 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178738884 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131376661 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115560949 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079656782 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101621276 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102273307 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088468988 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104653376 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111876885 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115362034 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093410022 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115133836 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121916054 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082441999 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094826095 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154067397 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114801351 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14084451 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137747857 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084297489 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115085807 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135287187 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079333115 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119864372 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148738256 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104178677 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095387647 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078629469 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098483648 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161857104 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071826054 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152708188 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115021768 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105311169 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10905229 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.107971208 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124930645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103133389 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116051891 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089975591 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104844283 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107997412 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079282971 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07469327 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10111816 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107124876 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094340116 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094485013 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09598059 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144990684 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070228832 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092838062 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100415654 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137636661 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166201398 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.085781337 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080615658 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113368245 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108590726 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.108758134 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115939986 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077176138 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080432442 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079318474 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079490372 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104925286 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108783069 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100582801 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106622871 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155372416 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080872122 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22275046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092179309 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10110214 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06912806 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076443429 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093246792 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094478871 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104649998 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098448877 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163474944 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09269414 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088184435 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089687411 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.330865687 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088326995 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130742478 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113198342 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121235178 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098916452 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064590543 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110436674 seconds)
  done (took 58.224254177 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232699254 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149489648 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169178395 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204401543 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162255734 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253402833 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179236632 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212496676 seconds)
  done (took 3.217133267 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072871525 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100475084 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105573612 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084720531 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068885776 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070119328 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22410325 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082247112 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068038578 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089957273 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080469066 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070653217 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.403911285 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067569218 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068812338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063459786 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068143669 seconds)
  done (took 3.455386646 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386700291 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361587254 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370905019 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075448021 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.757674799 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089381584 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.16253523 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096870918 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071809551 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.305445114 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.698343792 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092279776 seconds)
  done (took 14.116687048 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079080548 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072148347 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086849283 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086741939 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075646697 seconds)
  done (took 2.0475147 seconds)
done (took 103.089129434 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084116776 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.29903709 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053838992 seconds)
  done (took 2.032248415 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086267608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088094707 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087828392 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08615166 seconds)
  done (took 2.0019882 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076873676 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079902981 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.087250327 seconds)
  done (took 1.893769986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228593786 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.144821331 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090124531 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085546266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081104289 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081946799 seconds)
  done (took 1.90351025 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074852679 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078416607 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075247598 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079227454 seconds)
  done (took 1.956451505 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079966634 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054936337 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057802065 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058551302 seconds)
  done (took 1.899574064 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088788012 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082201732 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080938038 seconds)
  done (took 1.902325938 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109790147 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087523963 seconds)
  done (took 1.846943189 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085948498 seconds)
  done (took 1.738941905 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102319683 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.118294951 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13197693 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112579893 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140574567 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112903402 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08836221 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087482954 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077989097 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086829057 seconds)
  done (took 2.709882066 seconds)
done (took 22.082138523 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082058614 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370462729 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364534169 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092003219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673771045 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356714044 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981462568 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092063983 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120523941 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067776973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084166723 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.662832578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.009795219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324039669 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.998350165 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320384566 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649922811 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068321636 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067844355 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068371723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966824014 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067840614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068137217 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06855215 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648932989 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371026232 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068958998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319889933 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068020045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069760474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355407524 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068418383 seconds)
  done (took 16.230406791 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074111031 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122408426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077306703 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085678667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070796429 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069747623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071779488 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06943259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124786039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068710882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084607738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068268782 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072495058 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068708188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087056904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068284277 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069067029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068377143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06836449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068916799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086730361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068244589 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068526635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06874322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068445408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080242504 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069011267 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068524847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068609535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070230362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070976022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.0694153 seconds)
  done (took 4.08050351 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118987309 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127313831 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074191967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102623385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111504011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070622588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142397569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092658666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12645143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068405642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084734659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068602111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10146837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06911895 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087644369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068994259 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069260874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069039935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068928582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068949329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086926708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06878928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068651817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069028247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068617054 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08152197 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068908906 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068871442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068870074 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070626601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071764711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069171903 seconds)
  done (took 4.320118769 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075688576 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077998761 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084426734 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083850098 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069654122 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072152404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073425043 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070277829 seconds)
  done (took 2.276003493 seconds)
done (took 28.565185417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082272101 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070468999 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073641428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081756642 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073185407 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079018721 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067426146 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074857703 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072462613 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073454993 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075202954 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068050751 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071481101 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067982362 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07413903 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068039016 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079484576 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072094393 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079336379 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079526053 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070322155 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074144902 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07447914 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079715962 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079433834 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080168169 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077452743 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073711566 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069592331 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071038363 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076910655 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084497766 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069213715 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079658632 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068420927 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067939366 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071924288 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068576565 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079088531 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07662923 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070238585 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076405652 seconds)
  done (took 4.767261344 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.0920663 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095781601 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088931899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064916398 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067725943 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065404465 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089071633 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060222077 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060026435 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088408755 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056383941 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059758007 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062782369 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054451225 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060273497 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057254563 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061937548 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056453396 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06016464 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060037843 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058520774 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054608238 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06095444 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062944441 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057088569 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062736111 seconds)
  done (took 3.397289576 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077842284 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087145824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090427865 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127790943 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104286737 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077785683 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078345052 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08759313 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08563725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067574514 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071880254 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093917181 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087940814 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073745093 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070361019 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084194357 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082283436 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069596592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073974209 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091524011 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084916077 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078186894 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093560256 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081465663 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067533594 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070257024 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071853062 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08162163 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073463764 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077012478 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072275524 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071288431 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06985994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079414084 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071773482 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0697641 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089904122 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077625691 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078257113 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068965039 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071282021 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068797989 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089772993 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124409139 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067163536 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074169598 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075667082 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077160562 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06852912 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08651078 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078454534 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067829961 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070672792 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067144962 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068255425 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080629936 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070678648 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070634177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077127244 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07196443 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080883238 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072235653 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082922241 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067264823 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074955069 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067245543 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069050893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067130994 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092922582 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069218796 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108515026 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069788661 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068944843 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076956782 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075832798 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074093904 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068671185 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083333755 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078314309 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071230005 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076716643 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070962217 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071636062 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088236388 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070496224 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069854633 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069669037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074434979 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070740539 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068777156 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080238046 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067477189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070650615 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084476468 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067724528 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069176071 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073857373 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072327253 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.078610753 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07847818 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072525539 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068697886 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077033128 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067917376 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070870497 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077625693 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074085874 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066717736 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072442888 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073637557 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069375867 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069435076 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070633526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070056456 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077052186 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073990389 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072233278 seconds)
  done (took 10.637982737 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165626107 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155084463 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070770836 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143981508 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076743582 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079214628 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146692908 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09445176 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068424761 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068667896 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069156388 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1148515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105475701 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121495325 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078859176 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068148069 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083480232 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117077926 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148414536 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142331111 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083829537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077485923 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070248734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069566779 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074455837 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083093359 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090878906 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076985685 seconds)
  done (took 4.469542969 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084157763 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104933545 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076384812 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091556081 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090986666 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068043914 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07042297 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070367284 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081058468 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078814449 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068041471 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073943676 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075072918 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074570025 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069280079 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075116327 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075924717 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069750757 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071653259 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073680801 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077795594 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080568155 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072424868 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068045792 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074265605 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067458416 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064422921 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084611213 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068689778 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090827438 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06627697 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075335536 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082388928 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069186003 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068572443 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068376532 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068193821 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068146229 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070201104 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067010085 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066831388 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058248652 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067858467 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07948429 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074792657 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057502316 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073079448 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073549574 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073322067 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065890524 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071109024 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071261426 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07132792 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074954269 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073009593 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073625839 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069387024 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066766978 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076200958 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068107963 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065315495 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06706759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07257007 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066069806 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076343925 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072613612 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066787997 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067711573 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069984815 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074374257 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068196134 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071149292 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065864443 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069753884 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072393459 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070225753 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069149105 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06667963 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067822017 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068461458 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056433783 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068018786 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054658882 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071533051 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06649342 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066664756 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068322969 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07244201 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080185918 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06931807 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074455724 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069175916 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067218955 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071189178 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060994997 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071076659 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.0833946 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082570324 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068154144 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066172166 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08233345 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072692071 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067391647 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057471633 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075878758 seconds)
  done (took 9.238907393 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099447463 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089696459 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070634384 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083741605 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091162039 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087841613 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075401958 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076988681 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069839704 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082611191 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074448847 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076651953 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068495507 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077287604 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094632128 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076870644 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.0705014 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077366926 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072508571 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101802995 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083351411 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082362044 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075262233 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068422908 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076260398 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080110883 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090533748 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08037301 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078911434 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075906576 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080625116 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090268405 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074290909 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072631155 seconds)
  done (took 4.452962737 seconds)
done (took 38.626780344 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.750786505 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.93560148 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.746222132 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.097540162 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.805861916 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.754279116 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.815824778 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.740933651 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.075738803 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.796069805 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.981838124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.816599706 seconds)
done (took 65.006505174 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.782152558 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.895344242 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019892497 seconds)
  done (took 5.603571596 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.060453919 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.360363039 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.992270766 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.747923503 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.750871167 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.053145825 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.551544076 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.277033752 seconds)
  done (took 30.418653068 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.936034336 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.955362609 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.41156821 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.448474275 seconds)
  done (took 15.485119052 seconds)
done (took 63.132836939 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.774686972 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.809229799 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.76552775 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.729848257 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.805258626 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.75965213 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.868658226 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.759095093 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.744601688 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.728044899 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.747053729 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.182579498 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.754378577 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.023390811 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.750321392 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786635463 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.776090709 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.241204174 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.905667792 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.772368512 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.749982334 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.818610398 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.748389682 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.787911173 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.779183154 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.755105228 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.233477224 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.746999268 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.409158825 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.753484795 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.779045674 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.318279674 seconds)
  done (took 203.247724601 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.754738181 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.757643069 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.811037899 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.781603881 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.183552239 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.950281376 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.892363809 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.237238741 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.763283542 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.771184012 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.959141603 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.755974093 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.997270316 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.703417933 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.765366119 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.8594106 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.897938902 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.001190775 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.757826887 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.034167816 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.776519874 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.918133148 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.862679094 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.928945415 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.761096291 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85976323 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.756185797 seconds)
    (28/36) benchmarking "trsm"...
    done (took 7.014866447 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.947465348 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.869682263 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.79625024 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.803064871 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.997237668 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626337664 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.761677081 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.763738427 seconds)
  done (took 169.775324583 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.165301162 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.757514032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.754371093 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.75567973 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.768881422 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.754064407 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877405809 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.8832983 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.231845695 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.814491516 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.804348713 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.604951425 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.750254609 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821315147 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.763362697 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.752404466 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770544965 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782027612 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754999934 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.750735649 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882458345 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.76331682 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.307743362 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.762363053 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.753456735 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760744033 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127035967 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752251785 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.760092573 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.018479073 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.758075441 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.752458701 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.653162452 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.453787269 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.846431405 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752317699 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758215738 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.752587061 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.976489028 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752526442 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.753825039 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.755665178 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928055202 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.750461871 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.882372077 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751486951 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.266604789 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.751044109 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756102072 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.832055528 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.443401781 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.753503281 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.753822025 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.756557161 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.753308598 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.753822402 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.761910609 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.755287342 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.681036761 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.82513581 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.755423218 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.755591541 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.757534806 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758304053 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.754158696 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.799985734 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753114008 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.784258791 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.809971233 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.85728094 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879145457 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756834852 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823933983 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848806253 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.756428323 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.753530373 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755554061 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754505248 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.836928352 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755575237 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.885248236 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.760533498 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.756347967 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804655262 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826161241 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756468062 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657266151 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.751347729 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.755743367 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.080099199 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.820616564 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.754582892 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.75613083 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756113749 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.754115626 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.757145789 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.928073429 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876908046 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.550291109 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.755497059 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.558613375 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.754829124 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.007296183 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.880678407 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.93196889 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756782359 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.838405158 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.760150073 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758217397 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.755513506 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.785949827 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.758166979 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.818959999 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754240486 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12779498 seconds)
  done (took 399.565301668 seconds)
done (took 776.496536192 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.487395367 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.416692172 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.518592204 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.440037855 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.407664987 seconds)
  done (took 13.96529659 seconds)
done (took 15.661383239 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.844534665 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.853347867 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783356968 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.850316638 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.780323793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.847881677 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830873096 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.785329667 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814441608 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.785412141 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.818792985 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783577871 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772527576 seconds)
  done (took 25.244700119 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.988905868 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.001417115 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829944673 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99845201 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805602529 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.000172699 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.924574294 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911225857 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927165255 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.77420429 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771953945 seconds)
  done (took 22.629885907 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.015582421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.007570486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830688907 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.003092526 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809014317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.997554049 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.932425085 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.917205661 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.914161579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772045698 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768080354 seconds)
  done (took 22.665270302 seconds)
done (took 72.235042748 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.767585621 seconds)
  done (took 3.46267183 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790935942 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.930316199 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.774402128 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.770975306 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.768402847 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.766676451 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.771495414 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.766977133 seconds)
  done (took 16.036595334 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.764457697 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763413833 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.762713901 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765418532 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762259337 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.762949038 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.767099181 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.761454774 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.765703068 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.762539726 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.766517152 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763718646 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765300195 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766007011 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.76799483 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763588916 seconds)
  done (took 29.926684626 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.768713175 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.767303707 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.76496372 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76630393 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.764114129 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.763409299 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.766063624 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.766450291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763497188 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.763683764 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.766180338 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.763449459 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.76256759 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.762362927 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.76685697 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.765346483 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.762701943 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.765280249 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.770687638 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764847071 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.766504432 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.765396882 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.766546872 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765710206 seconds)
  done (took 44.06533424 seconds)
done (took 95.187702514 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.57704754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.31806322 seconds)
  done (took 8.592527918 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769566251 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.770051708 seconds)
  done (took 5.281800776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767666019 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.76987936 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.774159337 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.76667599 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.768485009 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.766366371 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.76996429 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.770842572 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.768797823 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.765760337 seconds)
  done (took 19.386814899 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.766233529 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.770428539 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.765046378 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.771505896 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766771302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.76512921 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.768130854 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.766353514 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.768184834 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.7615346 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.768595237 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.764837268 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.768937035 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.768557666 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770158587 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.765682592 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767687101 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.76426387 seconds)
  done (took 33.505865311 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.768837705 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770266199 seconds)
  done (took 5.236384118 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.76815365 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766943652 seconds)
    (3/7) benchmarking "month"...
    done (took 1.765172835 seconds)
    (4/7) benchmarking "year"...
    done (took 1.767039609 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.764831336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.765182431 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.766399686 seconds)
  done (took 14.060846328 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.769536804 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.9248954 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.001375277 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.487494707 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.770321496 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.773534961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.692977245 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.772445704 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776927353 seconds)
  done (took 19.668092103 seconds)
done (took 107.428755433 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.584271336 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.761827785 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.105270895 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.826641124 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.816114344 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.103435054 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.795261146 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.991211195 seconds)
done (took 42.683968378 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.778966428 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.282607084 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.285365076 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.571606887 seconds)
  done (took 11.837664082 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.74669394 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.32237784 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 7.130774984 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.456859295 seconds)
  done (took 20.370808528 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.153269013 seconds)
    (2/2) benchmarking "read"...
    done (took 2.140733882 seconds)
  done (took 6.002735787 seconds)
done (took 46.692848891 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771174829 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.771152743 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.769858001 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.76845374 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.771512659 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772381659 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771535699 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.768257767 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.769342601 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.77059434 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.772139166 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.770557926 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.773756378 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773292679 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.771985875 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768115266 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774706379 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.767976475 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766965404 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.768616492 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767138838 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.774855823 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.768251244 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.769363931 seconds)
  done (took 44.192198748 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.773133413 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.770412628 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771380874 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.772124748 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770887789 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.772737822 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.772254448 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769634606 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772375439 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772013493 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770010471 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.767220818 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.770888697 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.769279628 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772662169 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.768421614 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77195608 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769056195 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773371712 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.768692375 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.771976347 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769714182 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.769288235 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.775570228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.770037321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.769390829 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.773562981 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.771266943 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771869762 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.768782635 seconds)
  done (took 54.833147573 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.777392926 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.781658375 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773375606 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.773151252 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774261915 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.772576797 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.772307531 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.772048204 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.772072818 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.77269299 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.77240034 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.776949736 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.771568389 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.772910697 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.772072258 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775301321 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774075342 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.77466703 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.773033986 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.775259349 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.77472477 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.77334647 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.773283323 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.774569298 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773500183 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.77292576 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.774194466 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.773521298 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.773311846 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774919016 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.774667858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.774843648 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.772726523 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.77425425 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.772497076 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.774227571 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.780224851 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.78427087 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.773527647 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.775024485 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.774624389 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.774320326 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775822745 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774918585 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.774733561 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775616441 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.774541555 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.773915088 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.775349478 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775335271 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.774890715 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.775473151 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.775713319 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.77432403 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.774491354 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.775629348 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.775567791 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.773893664 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.77459995 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.774539638 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.774413216 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775581783 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.774924198 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.775122842 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777420668 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780352395 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.777067594 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.776260136 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.775295887 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.775498914 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.775032074 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.775820333 seconds)
  done (took 129.490209439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.776282052 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.775142074 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.773148385 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.772584584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774017642 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.777932768 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.773442751 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777400099 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77421963 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776572132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777165552 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773602171 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774021 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.777368896 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776013836 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773697533 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.776150447 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776185702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.776507165 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.777199797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.776818401 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.774518882 seconds)
  done (took 40.766511559 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.777958791 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777275568 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.774695486 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777107796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775396918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777946365 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.7786572 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.77620204 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778469385 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774764917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774835467 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778155874 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775406053 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775266706 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774623872 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774444642 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777838605 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.774579638 seconds)
  done (took 33.680544945 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.7752672 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.774618395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.77794521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775349064 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.776931113 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.778127948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775540153 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.778139331 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.778586709 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.775635059 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.778099546 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779221976 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.779836236 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775312493 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779562419 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777029802 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.778478074 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77597792 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77886917 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.777123073 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.777184058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779932482 seconds)
  done (took 40.811212061 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778824079 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.77850327 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776712792 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.775964141 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.777294474 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779168565 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.778980087 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.77737024 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779592116 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.780819867 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778530662 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.779334248 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.776991338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777690972 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777738185 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776384358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780604062 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.776930701 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780905845 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.777833918 seconds)
  done (took 37.275146088 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.779929659 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781274683 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780954554 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781639027 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781332346 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.782184187 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.780849208 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781813146 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782344925 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781312349 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78376164 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.782439849 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783680357 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782157881 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781908236 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782627649 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782441792 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781419383 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782806917 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782362747 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782324133 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782086132 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782095263 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782763597 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782568542 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.782420383 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783211601 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781378828 seconds)
  done (took 51.607420345 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781927994 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781062742 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.779157825 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.779143654 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.779844408 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.77800393 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.779267552 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.779680154 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782164531 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.780299198 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.78291807 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.781716199 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.781839663 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.781359346 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781859816 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.782391892 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782283248 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.779782665 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778955537 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780793373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.782685581 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783176787 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.782853015 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779453969 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781049108 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.783959095 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781060419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780580703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783737467 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.779992735 seconds)
  done (took 55.144966186 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.802415764 seconds)
    (2/2) benchmarking "in"...
    done (took 1.801178963 seconds)
  done (took 5.316740557 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.782784276 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784210161 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.783265875 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.780860593 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780157618 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783939309 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783521082 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781502739 seconds)
  done (took 15.973083578 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784633835 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.784171477 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.785132173 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.784579474 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.784551167 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785300971 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792900555 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.784533997 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786441447 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.785842694 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792414642 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.794996064 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.789551209 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785292037 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78566661 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786158347 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.78387185 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.78499198 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785132832 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.784273182 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786044725 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786918296 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787051385 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783219932 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.786603855 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.798297697 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.791225483 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.784243924 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.785610147 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.790245079 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.785809412 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.78139695 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.786944081 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.78643295 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.785844907 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786762697 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.796922295 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78714413 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792664466 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786469955 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786330018 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.783879623 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.787422899 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.788705572 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787969315 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.786855712 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.786347239 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783813797 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.788138783 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.788952375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.793560546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.785939149 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.786520029 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793394328 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.789181738 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794121819 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788395483 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.790016436 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.798146749 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.799389943 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802688039 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.797065805 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788468937 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.788665911 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.797304367 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814201048 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795138598 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785182709 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.783965486 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.787776112 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.795694068 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804211989 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.799470728 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.788777109 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788988543 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.788237211 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.789008514 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787874029 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797115544 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.791294889 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.788223251 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789990566 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798946153 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814138335 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.78871529 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.788626979 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.788509067 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.788864546 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.789670751 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800306815 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.789055571 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788404368 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.789385471 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.789363915 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.792256825 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.790967727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.789291276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792465023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786127846 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.789076267 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789777948 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793071151 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.800506743 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790127282 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789889013 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.798050203 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.789893399 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790959362 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800617208 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.790272206 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790908589 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791301598 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.799630766 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.78685578 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794102801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.801262591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.790953401 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.793365195 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791437348 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.790660932 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800869194 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.820686483 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.791032646 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.790188394 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.795503106 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.804282861 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790684087 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793999014 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.790689321 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.787380032 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.7876244 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.793266949 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.790973239 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793259978 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792183221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793986624 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.788360379 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.790953189 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.79131642 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.793370716 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.794244226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.792721775 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792343757 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794348062 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.791682162 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.794268431 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.799614991 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793440486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.793385456 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794059429 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.790535433 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.792814081 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.794337789 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.793563086 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793540222 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793407345 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793166484 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.792985267 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793420628 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.793052472 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792377866 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.793671014 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798192024 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.793891916 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.798529883 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793521397 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.791459202 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793752455 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.794423412 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.794335843 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.793904995 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792974123 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.796891806 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.802177738 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.793881207 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.795030138 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796935761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792561172 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793017662 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79387309 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.798681007 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803435112 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.794014024 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.802715862 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795025322 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794003913 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.794023716 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.795255742 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.793853096 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794903301 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.797776704 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.803015276 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809704272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805442062 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.797442269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.799143252 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.797101984 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.799666123 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.801493947 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795175271 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795186581 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.794168887 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794408619 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795840169 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.798135785 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.795526177 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796135618 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.794851454 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.795459624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796222487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796331954 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.797409518 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.797928741 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793081886 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794613763 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797007587 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795620445 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.79290867 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.795512009 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.795355115 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.795085693 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.798366622 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.805511373 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.792875685 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797073257 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797974871 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797164467 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.794170922 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.795970603 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799434114 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.797018252 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804206772 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.797233011 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.798462548 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804799004 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.796578625 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.796339908 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.8005576 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.796270401 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.793871924 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.799604696 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.807081329 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.796707165 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798037096 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.79777778 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797484717 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797706037 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.806511799 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.794758447 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.796422933 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.798610607 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.802389893 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.794272739 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.798924723 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.799420129 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.798588629 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800689108 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797732409 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.797510963 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801529788 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.797898277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.798549067 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.798400043 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800878674 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.807739396 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.804940285 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.800158264 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.803749639 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.800970364 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.802338314 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.799480969 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799358837 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.797996223 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815319709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.808903899 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810475982 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.804030069 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.799700705 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.805146739 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.799872167 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.80462898 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800988306 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801052749 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799381001 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.798764466 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.796319412 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.800537332 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.798228927 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.800417271 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.80115752 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.803755236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.799622672 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799374909 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800209277 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.800233603 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.79969435 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.79991433 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.799847434 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.804221192 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803387785 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.80103115 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.801529148 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808556648 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79914631 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.802159489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.800188817 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.801398198 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.800360381 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.801793179 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801270266 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.803608943 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.810536995 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.80442659 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.813780692 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.802836949 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.81294539 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.801786571 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.806075268 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810808021 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.797968682 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80104575 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.802942429 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801949099 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810486388 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802206967 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.802228722 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.807475029 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801743878 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802228311 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.801049126 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.802918947 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801474046 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.803592122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811606882 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.804323498 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.807517124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804852019 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798890635 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.80166729 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.802091507 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.801629504 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808499866 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80352366 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.804534735 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.800951683 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.803991196 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.801641185 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.802778958 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.801543185 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799601089 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.802268277 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810791868 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.80323015 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808088526 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803443156 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.815650927 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804410667 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811900915 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.803972914 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804910168 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803685012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.802723645 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.80658926 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804383063 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.805832679 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.803880467 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.805935136 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.807846408 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.80382188 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.80830345 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805113268 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.805444097 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.805315251 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814121756 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831372201 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.806294614 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80959951 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800580626 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.805855581 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809242954 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804761496 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803957489 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.807444313 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816435529 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813091941 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806704213 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.80648831 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806193051 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805495243 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.804367174 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.804972143 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.804855111 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.805786817 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.807631016 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.805349984 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811786809 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.805118541 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806623937 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808211368 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.805562824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819002169 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.805249662 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808155287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805596392 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.805334919 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806434757 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807796481 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.80509894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808049179 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806923387 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.808164365 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814287259 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814063418 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.81145799 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.806125707 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.806887727 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806726352 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.807600597 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805942971 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.807134027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80735469 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807431417 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.807041369 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809677786 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.805516842 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.806259781 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.807683209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805636017 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.810833414 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815704804 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808886782 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80450998 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.806214832 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806791227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.806724986 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807634306 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.819265368 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811711639 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.820061999 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.818302994 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.812015867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.809656615 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811789441 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.818228079 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807061332 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.810775582 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.809144427 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.810756887 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.809376723 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814595854 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80813315 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.818743202 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.808889659 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808328585 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818243641 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.810451722 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807626386 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811229602 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814645066 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.812017935 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805684455 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.807834855 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.808185821 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817341976 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81303696 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.806864531 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809587596 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806970898 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.808139169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812352883 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809996336 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.808039795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.804846348 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.807610222 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.807746557 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808531641 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.803767218 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.805205125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.80461189 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.808000848 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.813588694 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.805368103 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806305599 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.805817355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.805209231 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805154721 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.805165262 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.803440456 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.800333625 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.803753256 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804973145 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.805874783 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.811723618 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.80111778 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.802657044 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.802770687 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.801898176 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.804601895 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.815641836 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.805150342 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.793957061 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.796572537 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.797637206 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.802625575 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79638058 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.796793895 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796930646 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.79982335 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.795650919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798533211 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.796125762 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.799981733 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815395718 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.795522098 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803853715 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.796930038 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803070252 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.795943136 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.792902159 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.795452815 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.804258581 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.800621361 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.805069861 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.796656919 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.804991608 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797876862 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.799031217 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.801129519 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.800564353 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.807423188 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.801812651 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797643555 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.797934084 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.802672433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.816248944 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.796663411 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808221576 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83253001 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.798380049 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.799306442 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.797374947 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797056053 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.799390068 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.801215201 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.798335174 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.797516418 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796647044 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.798586867 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.801791304 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804446662 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.799887222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.797676805 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.798145281 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.800948017 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.801319381 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.79552935 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.799413574 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.79748533 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.798779276 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.80091199 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.799252458 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.800129507 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814735657 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.811451221 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.800901048 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.799735705 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.795790605 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.804062943 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.801604744 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811115086 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.809824244 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.798604877 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.799444787 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.800368361 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799272906 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80022612 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.799715355 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.798992281 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799215207 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.795394231 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.813682633 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809924208 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.803334708 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.799780973 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799840708 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.797790973 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801153277 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799825456 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.798929472 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.802019784 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.799451765 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803095131 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.801456427 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.798092538 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.801418611 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.807398631 seconds)
  done (took 1074.420161707 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.796848216 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.799239012 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7940543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795049657 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.796257712 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793559669 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796805406 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794999482 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.794324836 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794676504 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.794236746 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794945447 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.796587366 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793479477 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792993288 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.793719012 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793345713 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796431506 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.792938356 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792264126 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792854288 seconds)
  done (took 39.417257898 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.794897625 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.794859635 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791235356 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79292753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79110801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793645465 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.790346981 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795275416 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792604839 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790289209 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.793105397 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792121732 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.791290769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.790562078 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790500231 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.793721553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.793466967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789843152 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.793269913 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.790965884 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.793750579 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.790886282 seconds)
  done (took 41.155241493 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.797086651 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.794932598 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.793028735 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.791495345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.793883475 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.791087335 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.797835192 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.794578912 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.792656879 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.79596371 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.793361996 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.797068732 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.803223971 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.800272254 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.798291931 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.793833309 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.939916136 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.796152814 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.79505538 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.795772516 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.791815592 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.802075605 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.791401412 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.791560398 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.793830487 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.79529964 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.794319034 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.794689264 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.800051451 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.796320515 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.800167894 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.794765087 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.79535921 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.798962381 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.796937582 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.796309662 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.798224482 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.795701565 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.791607759 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.796177952 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.804601223 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.816816561 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.79501593 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.803211854 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.794749895 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.795017086 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.796724298 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.803438969 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.791173387 seconds)
  done (took 89.895551159 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.797567327 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.794238117 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.791009356 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.793576645 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79386895 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.792820859 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.795044082 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792509015 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.791213899 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.790374331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.793347735 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.789013265 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.791109976 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.790128588 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.789980797 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.787492786 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787954196 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.792226887 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.787728986 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786620058 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.787345533 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.7895963 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.790116829 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.78831082 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.788789481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.786568396 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786643297 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.789079513 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.794718758 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.785935921 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.789100241 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.788852837 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.788952509 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.787120226 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788835595 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.787660667 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.787290115 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.784142875 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.786201446 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.782928162 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.787911969 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.786545223 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.786902196 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.786797672 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.784058687 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.787104631 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.784865813 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.782921914 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.784572739 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.786718576 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.787735115 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.785630645 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.785945369 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.785172022 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.786740682 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.786617704 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.788539337 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.783671456 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.786559652 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.784840449 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.784224192 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.787634007 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.786172386 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.786781149 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.7855043 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.784907421 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.784124981 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.786675198 seconds)
  done (took 123.316529519 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787844804 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.787232001 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78759374 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788353242 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79032614 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.787302005 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788325212 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.787625826 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.78892289 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787814168 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788745311 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.789251488 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.79004125 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.789768397 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.790471065 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.795085294 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.78928516 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788428371 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78990839 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788518233 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.789335137 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.792104685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787348769 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.788039202 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788289252 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.78758996 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78780328 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.789010569 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78767688 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.787143855 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787930389 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.787195644 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.789730241 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.786938198 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.787897341 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.787365731 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.787248805 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788733123 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.788870255 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787804472 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.787912332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787792119 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.787600925 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.790900686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786693837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.786839687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.787094023 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.786754401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.785868666 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789841312 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.785643792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78692524 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786322526 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785256482 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.786271282 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.786540364 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786122093 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.785880798 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78687764 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.786328053 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.789865382 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.784714008 seconds)
  done (took 112.576782002 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783568281 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784842919 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.780891648 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.780695884 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.780679493 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.778465719 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780552051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.782349041 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784498512 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.78014159 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780138252 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.77728052 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777284203 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780215806 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777907549 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778030428 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777156216 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77753744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78037022 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777099668 seconds)
  done (took 37.31269189 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.777168532 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779524257 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.777412066 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.779370597 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.781259478 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.778088061 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.780902559 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780474411 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778341687 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780012959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.7809748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78149125 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779235062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.779641841 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.781985489 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.77956026 seconds)
  done (took 30.184943413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.779573844 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.78136793 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.780926388 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.78288996 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.778674096 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.779318257 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.781367177 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.779192441 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.779756743 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.781678259 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.782085581 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.780813491 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.782238384 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.782075682 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.779426953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.782505707 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.778916733 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.778452279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.782454923 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.782985133 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.780856028 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.779996954 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.781912811 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.783012819 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.780787073 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.781183741 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.780746444 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.781124705 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.779766705 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.78261591 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.780793323 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.781526879 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.780197798 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.780215971 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.784584468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.782293267 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.783821043 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.782235692 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.782255356 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.783094502 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.782603541 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.781726465 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.784081232 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.783503613 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.780286688 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.783397073 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.780531061 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.781297288 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.781089315 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.78220948 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.784703423 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.784754364 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.783893003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.783768656 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.7844251 seconds)
  done (took 99.703144656 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.783616383 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.784778356 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.782236957 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783664602 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.784647661 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.781600748 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783981618 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.781105769 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781841643 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.783684906 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782631875 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.784118092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781099229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.783885477 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782669436 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784592096 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.78143232 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.782893081 seconds)
  done (took 33.80719159 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.782592006 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783496716 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.785159107 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.783781182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.782486181 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.786120241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783607396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.783678681 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784882701 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.782791963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782742449 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.785690245 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785840995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.785908363 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782966534 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782683092 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.785669327 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785422911 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783858382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783175671 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.786005921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785393703 seconds)
  done (took 40.967716029 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.785363248 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.784997001 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.802723248 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.831653003 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.820114887 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.786155792 seconds)
  done (took 12.525244928 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784796088 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786334647 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.784692369 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787500007 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.786632458 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783708583 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784104488 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784260014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787127948 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784832385 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.784659364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.786434734 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787838296 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.784595658 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.785800414 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787426828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.784717594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.785189655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785500698 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787635317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785228507 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.786859617 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783751592 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.784603747 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78471811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.78517581 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.786907169 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.785988338 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.785168961 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787658555 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787895035 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785836874 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787941676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787256014 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788933697 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788978421 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786741995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788792734 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788566867 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.785523345 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.788536963 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789922569 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78998365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.78644262 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788484752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786036728 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786383016 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.786071075 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.786883784 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790384269 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788971551 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.786551039 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.788749911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.789587338 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789749784 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789710797 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787212925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.785567613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.789732481 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787025369 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.787381131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788725769 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78701778 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788302075 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790008095 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.786725232 seconds)
  done (took 119.652713734 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.787497549 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.787090909 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.787090718 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788020127 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.787485554 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787427115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788261708 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78665293 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787862559 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.787700682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790079463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787921631 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.787240926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787542804 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787651669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788839929 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.788650935 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788232694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.787808447 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791559065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788100571 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788620058 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789255287 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.787889506 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789366653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792418655 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788876175 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788731798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.788908997 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788629806 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789049012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.788763872 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788682388 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.789169456 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.789295784 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789225722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788653011 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.788769801 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789220946 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.790774458 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789217705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792108747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.789677573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.788674097 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790431984 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78891158 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790025538 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.789516809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7901035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789263006 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78955776 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790583983 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.78969277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791027104 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.789993894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.789443484 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789639583 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790964716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.79019229 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793084232 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.790354897 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.790106086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793536787 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790038611 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.790175755 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.789954976 seconds)
  done (took 119.808776171 seconds)
done (took 2485.539247914 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.802319694 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.85683165 seconds)
  done (took 15.379072592 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.956098002 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.906996686 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.792048021 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.817461269 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.790031621 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.790441585 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.807737727 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.789831442 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.792823855 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.791619437 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.792681248 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.980483797 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.791175385 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.78971507 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.792761092 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.884558582 seconds)
  done (took 50.99022772 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.79580403 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.797425192 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.823706602 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.79881139 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.796080372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.827187858 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.840454175 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.799433178 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.914757727 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.812874874 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.06227064 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.793939182 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.796910895 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.976027753 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.816362555 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.827839015 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.98476998 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.059306401 seconds)
  done (took 35.246546737 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.087612838 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.794746015 seconds)
  done (took 10.606838432 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.838959018 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.819930999 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.791950726 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.828729949 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.819982867 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.794127722 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.844550842 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.830610023 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.810322543 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.867967649 seconds)
  done (took 69.971263686 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.803002261 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.796948834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.79804494 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.795795551 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.787958515 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.786327176 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.796900418 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.789966098 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.191035332 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.875030299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816680236 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.810869222 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.795523716 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.797791421 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.795235252 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.820346038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979772953 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.793436585 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.792669933 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.80082689 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.796605132 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.867318711 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.827838007 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.789905802 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.87178954 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.170414671 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.798101963 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.800202872 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.954735804 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.791477142 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.7939519 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.794430514 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.799820633 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.294072793 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.242784339 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.799206606 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.800382812 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.800472194 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.791551322 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.922928112 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.792720013 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.798184284 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.786453486 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.213466791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.917901036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.865965178 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.684047731 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.791811222 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.794502828 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.839613523 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.792755344 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.794253789 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.810867618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.43261449 seconds)
  done (took 133.37396438 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.820019993 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.272158191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.942120113 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.805272351 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.202592847 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143390204 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.788795336 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.960439108 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.795681848 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.163136613 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024650985 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.028230815 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783926078 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.787046413 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.787139072 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.785093023 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003679087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.98132378 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.783408556 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.785777544 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.822646009 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.195528886 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.976011946 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.874263525 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.810489522 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.142269842 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.971613116 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.023957594 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.783742155 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.784297502 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.98652901 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.786011914 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.788083515 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.78556426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.016060772 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.011899707 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.00480652 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.783969365 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.807434613 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.789304122 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.821867916 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131892586 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.013866611 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982658451 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.094030983 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.134766219 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.784551814 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.786286232 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.798249277 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980484222 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.020192298 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.192143771 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.974166111 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.784242236 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.053394611 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.787011572 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806233316 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.165445691 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072461278 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.019826452 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802469612 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787535314 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786437328 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.228944621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.788210441 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.018365004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.193410794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.790540412 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.023469002 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.020720078 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.076638154 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.147181062 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.813634866 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.811786636 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.823811459 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.198725991 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.979035054 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.162593733 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.796721261 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.786061719 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.00630175 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.78950939 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.025397679 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.225858035 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.17447233 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825966451 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.814118943 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.788925646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.160430443 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.158380396 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.020039214 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115853007 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.014284549 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.796403121 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.789778929 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790539279 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.811117887 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985118279 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.78957418 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.155524455 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.160008248 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.556068566 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.822582922 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.232608157 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.983808359 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.786972453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.787130362 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.790299119 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994570687 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861006909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.814677646 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799158327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.15988472 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.659590276 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826513118 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.506329894 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.982455965 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.788246649 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180472598 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.793788528 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.164452156 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810180409 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.228200332 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.063389636 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834479072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.00996509 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.118950337 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.788946086 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181203651 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.223791863 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.972518553 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159948147 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.558074777 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.794842366 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207412845 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79448765 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.800847728 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.961228167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.821029743 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.010291148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.797187779 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.185547637 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812404718 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033933959 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.090449315 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.198290575 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.832388892 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.986283474 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.809446033 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925970747 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.813556689 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.810515149 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.975868217 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.007945533 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.791743069 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.362343642 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.794543362 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.940483134 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.234752809 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.811324887 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.988175597 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.793812762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.792807727 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.012299153 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.814875916 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.458623664 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.801105065 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.033495376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.751069047 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.246401356 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.793668083 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.231094474 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.001839183 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.813351706 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.798580939 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.596160155 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.799650553 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.951910951 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.95385526 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.110575749 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79662985 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139792431 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799541429 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.989179142 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.791447844 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.793969588 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149280588 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819715034 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.796483139 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.821527408 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.797606383 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.798233366 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.153505928 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82009627 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.515821258 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.934799721 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.190318116 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.102253754 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.185899357 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.839943288 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.817999966 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.185088273 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803416476 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.986780191 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.792511705 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.82229451 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.165623864 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797566907 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.193990505 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.205316943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.814142571 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.973202281 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.798128344 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854192198 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.794127474 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.001822266 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.012458204 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.796602974 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.801243935 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.97909655 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982182032 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986745002 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.817499431 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.835706391 seconds)
  done (took 945.600353155 seconds)
done (took 1262.890046195 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.79853438 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.793899523 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.785911589 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799329767 seconds)
  done (took 28.909820773 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.806440933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.803459476 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.807545138 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.803474695 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.803977611 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.803484878 seconds)
  done (took 12.5598937 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.850810759 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.794428451 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.797589373 seconds)
  done (took 21.174380454 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.951657081 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.70638109 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.052405797 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.222634104 seconds)
  done (took 11.665396521 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.804404991 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.807180168 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.804828815 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.805967059 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.808175617 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.808413934 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.806938021 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.809895921 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.807816732 seconds)
  done (took 17.994336202 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.605068209 seconds)
done (took 98.642171598 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.785078674 seconds)
    (2/309) benchmarking ("sort", Float32, false)...
    done (took 5.691577817 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.081383228 seconds)
    (4/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.798938535 seconds)
    (5/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.956598315 seconds)
    (6/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.807978793 seconds)
    (7/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.541740148 seconds)
    (8/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.859983719 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.7822751 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.087328244 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.448548007 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.861737199 seconds)
    (13/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.301522523 seconds)
    (14/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.885024244 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.829083555 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.003941002 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.960653126 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.923714605 seconds)
    (19/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.802747699 seconds)
    (20/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.801552341 seconds)
    (21/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.629888383 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.405615465 seconds)
    (23/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.801041518 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.154961003 seconds)
    (25/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.818990868 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.700909987 seconds)
    (27/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.784364405 seconds)
    (28/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.265748658 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.157957123 seconds)
    (30/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.813206936 seconds)
    (31/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.055653735 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.929950723 seconds)
    (33/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.073916205 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.303865902 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.905443048 seconds)
    (36/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.591936118 seconds)
    (37/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.872929264 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.824767562 seconds)
    (39/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.883652634 seconds)
    (40/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.864184881 seconds)
    (41/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.347860332 seconds)
    (42/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.93183099 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.798509538 seconds)
    (44/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.826443344 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.16166497 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.563889267 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.901152693 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.101866801 seconds)
    (49/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825406422 seconds)
    (50/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.744071056 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.552739153 seconds)
    (52/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.926868628 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.159533897 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.021412159 seconds)
    (55/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.310208878 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.913500956 seconds)
    (57/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.288217608 seconds)
    (58/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.784863235 seconds)
    (59/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.123613547 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.959678763 seconds)
    (61/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.784040925 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.05939162 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.149644264 seconds)
    (64/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.377213544 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.475377416 seconds)
    (66/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.81480459 seconds)
    (67/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.784870401 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.658431422 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.300830513 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.196702889 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.82559621 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.858841428 seconds)
    (73/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.711426724 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.656193037 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.91080946 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.937440201 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.067280674 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.799883902 seconds)
    (79/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.81177333 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.808833215 seconds)
    (81/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.734312214 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.311256995 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.829395528 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.804127376 seconds)
    (85/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.923590881 seconds)
    (86/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.829083401 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.789160355 seconds)
    (88/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.903752009 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.828958366 seconds)
    (90/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.788710561 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.672209747 seconds)
    (92/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.819914386 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.747387 seconds)
    (94/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.803388835 seconds)
    (95/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.832046757 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.877597271 seconds)
    (97/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.800704028 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.416633425 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.803334749 seconds)
    (100/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.596814751 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.906215069 seconds)
    (102/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.907182558 seconds)
    (103/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.907059881 seconds)
    (104/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.002255825 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.849171713 seconds)
    (106/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.067293005 seconds)
    (107/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.826840589 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.723607972 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.158415101 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.15488947 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.086312811 seconds)
    (112/309) benchmarking ("sort", BigInt, false)...
    done (took 6.801458389 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.849911739 seconds)
    (114/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.447976166 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.813538221 seconds)
    (116/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.063842042 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.593319522 seconds)
    (118/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.402451788 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.825271936 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.990970211 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.013542685 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.791801559 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.11279759 seconds)
    (124/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.455828545 seconds)
    (125/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.712774353 seconds)
    (126/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.883598337 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.873732484 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.806059676 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.813560909 seconds)
    (130/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.893806871 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.824818601 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.789989717 seconds)
    (133/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.252019625 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.790526402 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.307064913 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.166437961 seconds)
    (137/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.441203742 seconds)
    (138/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.912345621 seconds)
    (139/309) benchmarking ("sort", Bool, false)...
    done (took 2.286046637 seconds)
    (140/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.829726514 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.881051469 seconds)
    (142/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.918559535 seconds)
    (143/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.792208117 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.134651979 seconds)
    (145/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.806271925 seconds)
    (146/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.822801598 seconds)
    (147/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.822339277 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.305649569 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.335977725 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.06639311 seconds)
    (151/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.967325777 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.822829229 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.864563379 seconds)
    (154/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.801196564 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.484245853 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.428863671 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.906147221 seconds)
    (158/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.951271665 seconds)
    (159/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.003506385 seconds)
    (160/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.933265371 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.388813926 seconds)
    (162/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.805457994 seconds)
    (163/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.814144924 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.730344674 seconds)
    (165/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.689120699 seconds)
    (166/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.824085321 seconds)
    (167/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.390294632 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.304119336 seconds)
    (169/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.826309922 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.426850784 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.200886824 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.854033843 seconds)
    (173/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.825991824 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.533805604 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.878083655 seconds)
    (176/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.867901704 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.896961725 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.702977095 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.814855415 seconds)
    (180/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.805988704 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.654865389 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.890339969 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.114204347 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.430879153 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.92566724 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.410121039 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.891962192 seconds)
    (188/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.275743428 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.009728649 seconds)
    (190/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.620917907 seconds)
    (191/309) benchmarking ("sort", Float64, false)...
    done (took 5.877575469 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.802149238 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.065477094 seconds)
    (194/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.502362897 seconds)
    (195/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.071779803 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.832596945 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.24551808 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.710864442 seconds)
    (199/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.829554561 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.84792188 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.439600422 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.807056551 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.334913496 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.819598569 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.569876227 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.972555327 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.863444943 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.806180897 seconds)
    (209/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.831880135 seconds)
    (210/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.822799953 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.815854136 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.7935073 seconds)
    (213/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.853484329 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.924993565 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.421145081 seconds)
    (216/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.793686791 seconds)
    (217/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.095612909 seconds)
    (218/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.987530706 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.02418579 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.333018249 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.4184798 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.82577194 seconds)
    (223/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.32340167 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.094708134 seconds)
    (225/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.079007992 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.808223946 seconds)
    (227/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.026434677 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.472854049 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.826862025 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.891346934 seconds)
    (231/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.730714914 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.860384442 seconds)
    (233/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.208153825 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.007411067 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.981533308 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.810170895 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.867550012 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.846777756 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.80892991 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.803551974 seconds)
    (241/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.647077656 seconds)
    (242/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.831063808 seconds)
    (243/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.009827839 seconds)
    (244/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.066035783 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.229852868 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.298624765 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.79291599 seconds)
    (248/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.889075403 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.168456677 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.403929481 seconds)
    (251/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.819970811 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.905657462 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.248145426 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.801675279 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.96457341 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.963652472 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.015814843 seconds)
    (258/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.831179789 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.053750824 seconds)
    (260/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.855700149 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.005468329 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.805850149 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.834293977 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.896425237 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.197157752 seconds)
    (266/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.894222316 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.143245881 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.7958511 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.526126286 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.830380777 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.462790092 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.166781349 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.424812099 seconds)
    (274/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.911381718 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.197823328 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.508797557 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.900257886 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.87360873 seconds)
    (279/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.931483268 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.888653871 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.492701419 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.926720669 seconds)
    (283/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.718833908 seconds)
    (284/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.798655115 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.965792534 seconds)
    (286/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.410199632 seconds)
    (287/309) benchmarking ("sort", Int8, false)...
    done (took 4.837246613 seconds)
    (288/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.207690668 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.316406909 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.81044964 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.99405942 seconds)
    (292/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.805079479 seconds)
    (293/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895529576 seconds)
    (294/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.837325821 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.874061081 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.596915414 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.835122101 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.813610966 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.941741855 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.849278034 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.482006646 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.340154402 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.9092108 seconds)
    (304/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.895098372 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.833653474 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.81320454 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.429502246 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.810700271 seconds)
    (309/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.248159627 seconds)
  done (took 1027.82099986 seconds)
done (took 1029.557870051 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.843678763 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83804116 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.822521598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.843797319 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.934119414 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.85446193 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.833145618 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.825080108 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.869512401 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872767701 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.82161437 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.857713908 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.823907951 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.822123967 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.821528991 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836882667 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.509775094 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.82023535 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840644735 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832429282 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.839768316 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.822027564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.875591125 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.85444648 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.825294068 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.826172058 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.826710484 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.845879533 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.933666899 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.826156411 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.825717493 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.834811839 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.510021823 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.819032905 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.819610516 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.842354488 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.834132213 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.832018485 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.830209237 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.854491525 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.769047354 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.823166969 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.824451308 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.828500305 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.824563595 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.826456778 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.824814282 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.830961677 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.843771647 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838512115 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.77381992 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.841039363 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.827901314 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.830270985 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.837302666 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.825846313 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.830475901 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84136283 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.846338131 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845834594 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.506849242 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.829888684 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.834152058 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.844220964 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.842921059 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.815659449 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.823985813 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.831362229 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.776503612 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.832348588 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.816747405 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.835066329 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.828219437 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.844736805 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.85983645 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.514456357 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.818108625 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.826952294 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.836898246 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.825548119 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.837255222 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841168163 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.832110927 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.8293427 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844823578 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.860993982 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.838209497 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.829482774 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.835626976 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.851429446 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.834363214 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.838748918 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.832523367 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.822678413 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.841432282 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.828398526 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.8291465 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.829151636 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.830528557 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.83738187 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.779353422 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843112121 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.821744395 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.821935661 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.825916201 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.843337739 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.773126808 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.828165531 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.849700789 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.87311219 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.833863863 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.503908878 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.828706225 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843312447 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.835619242 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.83381606 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822305566 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.503807497 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.775440552 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848451373 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.827840499 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.825753752 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842966127 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.831368107 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.823848636 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.521590772 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.825744857 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840377177 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.948745512 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.837173136 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.865033672 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.826482657 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.83102056 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.861281293 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844910442 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.864818188 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.831894948 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.843594754 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.845098387 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.825829688 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.840081281 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.841250894 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.828630634 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.834418711 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.823513702 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.857022671 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.846626216 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.841424868 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.850528198 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.949642566 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.826364012 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.506787399 seconds)
done (took 294.259461261 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.88916749 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.823926762 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.922088132 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.827164514 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.910678458 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.930502992 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.822764236 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.822206944 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.823622016 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201687721 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.82427095 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.831257386 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.820584469 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.824879965 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.910690088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.826764031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.823145081 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.16588331 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828226663 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899529515 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.822426273 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.82860963 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.829039909 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.20893751 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.828093911 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.823804736 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.898656932 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.827944188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.172774584 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.8207459 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.822459865 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.172479992 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.91675732 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.843912592 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.837625366 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.834051523 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.912065283 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.842280307 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.909980621 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.90958289 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.924080874 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.867170902 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.825012106 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.823793747 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.828749045 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.830904553 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.825529835 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.856309215 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.825151552 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.828263233 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.17133969 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.842200207 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.828507355 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.830181913 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.83015239 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.862631557 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.829330051 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.83330568 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.921467998 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.832229019 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.89432554 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.219189034 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.208130493 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.831416159 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.833207532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829487252 seconds)
  done (took 181.577141427 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.900369743 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.90570942 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.921064184 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.831339764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.883308673 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.921575673 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.830421022 seconds)
  done (took 14.950658778 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.840030246 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.831744652 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.882273586 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882415529 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.832318388 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.989539231 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.832940958 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.843077336 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.829818243 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.885105417 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.835688915 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832064868 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.840584609 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.830224363 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881425897 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.844441941 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.947166998 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.833889291 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.83460245 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.989520974 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830954953 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.840144635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.886789694 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.845505263 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.833877873 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.840212541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.419004795 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834484022 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830703398 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.83549551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830385356 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.874685934 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.83358373 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.827264341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831488477 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950028761 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.834884792 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837849762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.832060628 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.829995602 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.829734647 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.83362005 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.833054765 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.829388086 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.833217996 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.857938409 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.832091291 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.832163833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.833023139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.833159332 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.885731901 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.833505491 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.830708518 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.830449363 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.889336675 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.840073382 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.834359557 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.829231656 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.833008679 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830822836 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.990047304 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881609271 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.832582352 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.880516894 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.834178814 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.832590107 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.833182227 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.832495369 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.888506964 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.833392197 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.882621912 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.831319122 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.989904642 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.858818966 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.834909846 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.83560013 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.837011413 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.838671868 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.829979623 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.843155875 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.831842351 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.835751147 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.840667358 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.831440422 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.83023893 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.947236019 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.942832582 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.830712087 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.847150888 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.840577958 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.831563039 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.893624591 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.834796617 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.831450193 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88699098 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.94903369 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.891025878 seconds)
  done (took 202.263344255 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.839536301 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.843665849 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.835705788 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.850324655 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.834979759 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.834608724 seconds)
  done (took 12.799944729 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.838336779 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.83472087 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.835557706 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.835317011 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.836691978 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.835270197 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.836560435 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83621864 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.839365169 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.835818016 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.835596191 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.837665857 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.837223401 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.837344109 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.837041466 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.835687667 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.837087507 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.834160519 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.836610508 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.837481431 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.940501972 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.837580476 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836836757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.837433676 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.840603009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.836190781 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.843899212 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.837916861 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.83606313 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.84559562 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.839676728 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.837442625 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.837716363 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.843462768 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.843233345 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.83884239 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.840694273 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.839607023 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.254077695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.839427058 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.838510108 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.83837274 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.836733033 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.838475155 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.838781661 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.847887649 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.842557465 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.845882879 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.838373804 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.840109999 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.843377986 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.838651417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.839214035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.83971733 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.841889231 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84155141 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.846961532 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.839837236 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.837523229 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.839766777 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.838764365 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.843456019 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.840908706 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.843237238 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.837282096 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.840312459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.846205463 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842021187 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.839630392 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.839078961 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.840733442 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.834607587 seconds)
  done (took 135.700727093 seconds)
done (took 549.046157164 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.85835616 seconds)
  done (took 8.618158904 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.031367099 seconds)
  done (took 8.800932679 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.662765135 seconds)
  done (took 16.432489928 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.846925355 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894486288 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.835523898 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.839180983 seconds)
  done (took 29.183499647 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.2373263 seconds)
  done (took 9.003938313 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.846746343 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.831412819 seconds)
  done (took 15.44658267 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.319546966 seconds)
  done (took 9.086658378 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.408440865 seconds)
  done (took 9.175549561 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.836662542 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.838623083 seconds)
  done (took 15.44872262 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.819104741 seconds)
  done (took 8.585991004 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.657557137 seconds)
  done (took 13.425032991 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.841453727 seconds)
  done (took 8.608776943 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.864380539 seconds)
  done (took 8.630520823 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.806381509 seconds)
  done (took 10.572642854 seconds)
done (took 172.791801601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.835010584 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.83010383 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.833051446 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.832284924 seconds)
  done (took 29.096308676 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.875561041 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.87547679 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.881350113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.886826934 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.878924669 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.875941496 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.868048724 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.868208791 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.891158813 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.878681198 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.897742025 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.880391786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.876547744 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.87207384 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.883581519 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.878547529 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.887579251 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.876864844 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.869569869 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.879557882 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.842811399 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.887165868 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.879723651 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.844528859 seconds)
  done (took 46.80525905 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.043257114 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.917815505 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.997762126 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.89621133 seconds)
  done (took 9.624172413 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.894349277 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.896551832 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.90847954 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.947742909 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.973111053 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.905179175 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.869933952 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.864527554 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.852777692 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.896143004 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.972256753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.91362164 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.980147189 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.84311664 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.047324431 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.843616383 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.843599422 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.896463955 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.947283579 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.962701276 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.844443307 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.895920345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.901198958 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.914165423 seconds)
  done (took 47.583988683 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.844033394 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.853269465 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.850446711 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.843565696 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.845160533 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.845410098 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.850750764 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.845982711 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.867069478 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.847278997 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.842764952 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.845693099 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.844825727 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.844650955 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.844633915 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.856698797 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.857257337 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.845648127 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.847488981 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.851208661 seconds)
  done (took 38.745385809 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.838774136 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.693865858 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.190563723 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.093804852 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.838640146 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.835505362 seconds)
  done (took 31.262142612 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.889771519 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.965331528 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.843741037 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.059938358 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.133571218 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.845110997 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.846110022 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.994366729 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.186002554 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.171513613 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.896526095 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.882398445 seconds)
  done (took 25.485730488 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.842470132 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.838902198 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.852978877 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.857858277 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.872228741 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.849096322 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.852608105 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.840149113 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.87422212 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.875923305 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.848363342 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.874030621 seconds)
  done (took 44.053671357 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929077908 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.886432766 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.312480956 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.589167947 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.215365507 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050199396 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.571474513 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232015669 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.842342197 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.113835719 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.375254086 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931313305 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.098224857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854117279 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83808045 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.555803902 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067188016 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213942341 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842634498 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858861892 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869190187 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855262879 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.989620442 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.857555261 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053680672 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.975992281 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.102786971 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.843166289 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056686402 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85258464 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853384131 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.841787169 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.116601954 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.34469031 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931576262 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854239703 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.545375747 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.549744563 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.853151548 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.933501392 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.230566203 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.844634026 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853086681 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843101632 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.777619375 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846802792 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244140197 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.845361021 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.55442373 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843390974 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854100047 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937957141 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.846597833 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.661172744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844932828 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84084336 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.841059678 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850956586 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416408564 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.316531105 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.847555127 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.775220897 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.935816898 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862347113 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36912359 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.940841326 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.847346762 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848421442 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778713251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857909476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864988417 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17287997 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.863317225 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494593154 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433774305 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.386907391 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.777984281 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.263413987 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.858386967 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.777199906 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071749721 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845366798 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780978832 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.792157265 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778839095 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.328596072 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851076405 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.917273861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853387285 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240353991 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.853092651 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864072216 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868813431 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.06995218 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.731180596 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846465731 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.114397244 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999437053 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865312744 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242453223 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779352721 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.847537518 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102821422 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.058756551 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846040435 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.551157687 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997340518 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845668289 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.859309745 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.853665692 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.85304872 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.334044464 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853666564 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.319871169 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866509657 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845696034 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370527319 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851491998 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.944383551 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.372129542 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024041852 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.411469979 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846171974 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929432944 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8562683 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848570841 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.963143573 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.366421263 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.847892842 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.849915025 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85859545 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.855413788 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.84828491 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79834038 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.854178108 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388882731 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.849899378 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070760417 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.854778962 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120078803 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781051504 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197596969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.937936007 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.069067892 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.837854338 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.847443238 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10940956 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859647724 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860147264 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857207627 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868796554 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947783877 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870723726 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.859635317 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.101687322 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.852263728 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.85175664 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.952125147 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853099532 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849399472 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.853275449 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682241257 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330547696 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.822369868 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852713213 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.7370826 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.863614015 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91377039 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854493126 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.859455198 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.103637376 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65933788 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.850686305 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.845655077 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07256652 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858576473 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.868660591 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929006432 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.995207114 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334567181 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858739071 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784405907 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.560688493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.544294818 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851909127 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7853484 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850492251 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860099206 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.8614567 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.065927951 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339515799 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847269141 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.868868485 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.860082954 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861015691 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.857314669 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851157447 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.07259434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.32711182 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868952099 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.859683103 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994914074 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.864179748 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785532082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.854717261 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857572246 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.849828835 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.851836966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884715733 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.883013193 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270371511 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11159505 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.545791306 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.86019434 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.948160166 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.870927286 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.850630736 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.161378779 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869488704 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.866134714 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859162566 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.863912387 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.95662037 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.527885759 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.420428422 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459435816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280399487 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.573747841 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.852480036 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851651369 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.255652699 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788242067 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.416733836 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.972799929 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258555245 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795351264 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99991083 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.837484281 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.385411372 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862654897 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081071941 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.573651189 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.159495362 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864632568 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.066302766 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887805011 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.852829386 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78015713 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.15408026 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072697794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.147420931 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932247928 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251577518 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160835993 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.855113892 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.853946234 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.852888438 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964329985 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.565739861 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.027093846 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.851365709 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.405562142 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266272009 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.85422963 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.079745752 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382389899 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.852426968 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.999049475 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786482798 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864569231 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864951175 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.85579591 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.578099621 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.358782385 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.105625882 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864518205 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789011835 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.859514144 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.296571353 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.705227977 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.8599841 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854591964 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376680352 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.852970003 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068913371 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.854240805 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.056614141 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861638907 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790462501 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790113397 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.548655469 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.861341019 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.831192311 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209215181 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.925069901 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85105694 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852396098 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069266803 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112696253 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.86998416 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.344072247 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079266386 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.640357076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874505371 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.955775082 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192276386 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.842141958 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855165629 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.092217185 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700891012 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.077796946 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.329123702 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.766890304 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.855522381 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064107972 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854722236 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.422427955 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035387872 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.565956581 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.855386206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451756358 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875962778 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.398866545 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.77188138 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.946499628 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864158601 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935365788 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866407793 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.866814498 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865871365 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965476635 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363021893 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.857456782 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.869643922 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950410466 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.347156034 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.063361366 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.859579088 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349057033 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463117906 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.346840544 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866059635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.856136352 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858256439 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79116063 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002773312 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.084201731 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130320203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.986912627 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.99226519 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87906886 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203296421 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.873401031 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067251101 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132583157 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.751857112 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874243442 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.866830388 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.858609556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870367559 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.070393977 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.218972659 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283491273 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965538472 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87153492 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.257529424 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131055862 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.859486723 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85985967 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448460714 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.866385344 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.874341807 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.864068172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.436614119 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007899217 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869634048 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.370121967 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866442338 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.015084103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.633657465 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903714306 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116473266 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.099637846 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86860975 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351047132 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.457618238 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122202372 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926841603 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870611276 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.971131377 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007779802 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.38160689 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.860500968 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861050614 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90915694 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.570952292 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.870448936 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356028703 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122070168 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.858571918 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.386891736 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884925281 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.870827908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085189083 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354585573 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.083504728 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872249896 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867196017 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.675032316 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356618676 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.871069036 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796015698 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.863245246 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041443429 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096886404 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.883905319 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.314188183 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.572263268 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286760533 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.831898029 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883093921 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871414639 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.466830744 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352900988 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.067734729 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225341212 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41899088 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.861209401 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137445136 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.866950482 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86640584 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135632567 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.865469214 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.873299447 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87154215 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.352111887 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.39624553 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.865621417 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90320803 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.798964918 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204035705 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505248075 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795621079 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869601511 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.987516276 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860690494 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.994713075 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872038332 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.392887167 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.872217986 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.622837562 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.135350345 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.864701405 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.850611553 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.220150785 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869931087 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871330601 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085347193 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86212818 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.539887657 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.215251508 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120641033 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.863213738 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.848946136 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.866720623 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864740664 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852474269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.060282505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.076615522 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.295281077 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.864604239 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.875239542 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.869219069 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.081421088 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075790239 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.430708927 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87697985 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865786543 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880676083 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.771787607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.369083507 seconds)
  done (took 1776.588366404 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888647909 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.863481338 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.865780753 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.921290993 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.877017648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92788246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.90238967 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970642213 seconds)
  done (took 57.014435039 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.881022706 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.081907736 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.89928728 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.865166512 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.876226775 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.876292383 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.180637116 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.880975784 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.872134068 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.876798346 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.867324854 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.862593349 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.35243654 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.874500126 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.866162822 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.867375423 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.871595631 seconds)
  done (took 74.650225222 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.884017191 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.241478989 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.889335433 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.866368995 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.029243258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.863975459 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.215350328 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.88628009 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.878124881 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.125210932 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.490798817 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.881596445 seconds)
  done (took 90.048983893 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.875000388 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.87258902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.873867341 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.875602186 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.873859828 seconds)
  done (took 11.169038247 seconds)
done (took 2283.89882897 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.263216859 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.326858533 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.274243634 seconds)
  done (took 6.399791701 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.012174251 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.061873298 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.182630905 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.186718004 seconds)
  done (took 10.237952289 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.149674493 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.252021375 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.070451954 seconds)
  done (took 8.26808275 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.809097161 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.872005841 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.935544693 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.864511065 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.863941357 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.861569835 seconds)
  done (took 22.386944512 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.870231062 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.87132325 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.86848485 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.870999948 seconds)
  done (took 9.277328305 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.850271278 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.569076454 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.850205488 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.864151304 seconds)
  done (took 20.929187242 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.617451759 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.627433024 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.61212199 seconds)
  done (took 9.652941304 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.679182201 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.729295087 seconds)
  done (took 11.204303736 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.153203956 seconds)
  done (took 3.949417933 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.000280439 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.131306332 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.764180301 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.579009688 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.774250515 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.295324747 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.892675909 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.636809694 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.569974873 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.224918802 seconds)
  done (took 29.665442126 seconds)
done (took 147.649982655 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.59011676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.116171712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.064091855 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.557672282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.11728677 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.065223244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.078368545 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.534599051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.080612543 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.078107984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.575996656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.116461491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.23891142 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.099508379 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.240346609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.102473459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.089083017 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.621627797 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.269744679 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.500284039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.095441945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.195607352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.418464256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.229651337 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.106624724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.016605377 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.77358304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.123122583 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.418012427 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.805139341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.034303407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.649074032 seconds)
  done (took 194.799867233 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.868167339 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864573464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863734753 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.864686488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.694535157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887173155 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.864754284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864099031 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.494570401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.505993726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885361936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.68230349 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886420533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.864687389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.865725258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865254138 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.613475487 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885514184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885757075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.865063204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.86514706 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.569217981 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.88627853 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.578820526 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.596512804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.891409048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872022926 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864994872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.864901319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.865357771 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.874809444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.86594344 seconds)
  done (took 219.467457588 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.884188483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.865999717 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.867041186 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.867350507 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.895236216 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.866466829 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.867205658 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.88831678 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.878988741 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.87652105 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.866912154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.871431134 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.869013208 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882905233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.867120445 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.867811623 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.878490376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.867814322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.867237226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.867569125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.866508908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.866609228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.86630199 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.866913638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.867185703 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.865830694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.867846056 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.867075458 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888286282 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.86782428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.867204511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.869953084 seconds)
  done (took 221.692566416 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.065386999 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.8770516 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.878293701 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.815180363 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.878828314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.877938521 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.875557812 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.074347654 seconds)
  done (took 19.145097669 seconds)
done (took 656.903004795 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.779118488 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.518584755 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.04898774 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.896149668 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.414756048 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.897000089 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.897658448 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.012924326 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.236644516 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.994637635 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.892226486 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.893889768 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.010082907 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.892236699 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.089434306 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.965316542 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.625326044 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.724029289 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.140048163 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.210293549 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.092582635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.135874029 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.009040956 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.272488202 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.018597492 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.163538935 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.355112712 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.620270016 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.896592196 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.14155654 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.095795787 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.571121646 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.906361943 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.910103742 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.96321065 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944997526 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.5738053 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.904095602 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.054250555 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.92499474 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.210429784 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.057319489 seconds)
  done (took 110.764189383 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.868197689 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.866953094 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.866350175 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.868669221 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.868669111 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.86812986 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.866723648 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.867003756 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.86839049 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.866217719 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.867797174 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.869131791 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.867600092 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.86973183 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.868521856 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.867499662 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.868700536 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.869086174 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.866654771 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.86857325 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.868671441 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.866526384 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.868872012 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.868380121 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.870074582 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.869693427 seconds)
  done (took 50.37547579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.882844585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.0748207 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.19910735 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887591466 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.882122484 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.885135618 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.933020478 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.882641052 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.884635127 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.885372605 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.009900274 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.885761961 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.900384815 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.210957341 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.883973327 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.882696354 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.881910177 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.883158596 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.081719883 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.891955532 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.935382519 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.882688206 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.934102728 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.891761872 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.884170875 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88285816 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.885868368 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.383229418 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.883409284 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.010261682 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.380499838 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.927931489 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.337577779 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.211538737 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.379258179 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.880652935 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.88247408 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.01519094 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.884759208 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882763435 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.932855531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.885345061 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.209312634 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.433140584 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.901105323 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.882769518 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.391757918 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012370393 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.035102089 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.890518674 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.215325303 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.885531238 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.883460978 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.883180814 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.03466584 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.889322028 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.883639477 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.257065394 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.886193104 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.934135044 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.885111253 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.886005895 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.097141483 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.884176757 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.078377414 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.885059174 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.890996885 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.885029902 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.21152896 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.886274725 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.451981918 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.912540807 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.896090956 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.022212068 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.088334148 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.433103973 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.894266502 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.11033308 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.358245357 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.943412423 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.900456211 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.385534705 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.944560149 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.899105154 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.89576629 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.898374359 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.894520295 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.940416982 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.945629436 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.392843796 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.449464798 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.284121154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.944547635 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.907373085 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.895816332 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.270886301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.893446886 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.896316675 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.225786622 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.466078691 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.911482265 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.904934881 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.446205744 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.914737802 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.948726422 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.901865777 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.22694625 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.899446526 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940098127 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.897379791 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.904709719 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.901500687 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.947912433 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.902678155 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896921919 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.435379857 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.041203653 seconds)
  done (took 237.456434739 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.890789256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.888278797 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.890393095 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.889159704 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.890551419 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.898069072 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.8909872 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891265051 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.899352582 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.891575366 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.892405028 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.89671382 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.892540131 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.908895659 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.897248512 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.89966376 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.504474873 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.889654514 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.892150707 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.88928945 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.624068017 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.892864257 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.89155748 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.889450215 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.896655637 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.89465009 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907648839 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.891434903 seconds)
  done (took 168.195259169 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.900391043 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.263168244 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.900901951 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.975139825 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.923675491 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.897308478 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.973339916 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.927177835 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.898188397 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.897086218 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.896519425 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.094925324 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.900374306 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.227819472 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.008445705 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.970897572 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.22877945 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.901842187 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.898652434 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.898839146 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.976059518 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.91019089 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.094225667 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.264552647 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.902956248 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.265742705 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.890174597 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.901959333 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900340206 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.267502774 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.899457451 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.095420492 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.950528166 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.932075518 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.268825448 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.229507378 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.230454167 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.974481293 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.900542275 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.899289375 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.898868642 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.890629311 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.266720102 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.902771062 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.900277954 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.259831857 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.902787573 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.901029184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.910379721 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.900147651 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.929999278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.93289306 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.100003967 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.266627076 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.95041251 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.922884987 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976108867 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.238133061 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.902328947 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.230005346 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.891017114 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.269395945 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.904996475 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.888878821 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.902314111 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.905011002 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.994862087 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.975102264 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.234136713 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.902610941 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.23140332 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.994936095 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.901275815 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900251886 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.903621128 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.266904211 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.233216041 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.995598844 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.978715371 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.031817174 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.891802102 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.901412884 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.891599802 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.951640379 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.902505262 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.268256203 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.233991282 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.903434147 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.902893875 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.905157883 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.90584369 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.011594722 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.269056438 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.952744027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.225151325 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.099858872 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.099359072 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.903613758 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.932653734 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.904230361 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.101707147 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.904948838 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.931369415 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.285345074 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.099188448 seconds)
  done (took 213.034017027 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.071067083 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.721399984 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.9626651 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.989996733 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.314131584 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.402606336 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.847042527 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.946653407 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.965366293 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.991467952 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.364234113 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.996279287 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.031598987 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.949777154 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.482144226 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.936471224 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.965364981 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.986568651 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.984976649 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.701969238 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.376859857 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.13005549 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.995997277 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.459895938 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.931040383 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.484502835 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.550372404 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.37194629 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.027095831 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.678642645 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.341814675 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.840290483 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.395732733 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.359811056 seconds)
  done (took 79.385111827 seconds)
done (took 861.013207322 seconds)
SAVING RESULT...
DONE!
